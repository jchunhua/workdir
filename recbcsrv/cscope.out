cscope 15 $HOME/workdir/recbcsrv -q 0000007710 0001028731
	@20141202xml/mxml.h

21 #i‚de‡
_mxml_h_


22 
	#_mxml_h_


	)

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<˘y≥.h
>

32 
	~<î∫o.h
>

39 
	#MXML_TAB
 8

	)

41 
	#MXML_NO_CALLBACK
 0

	)

42 
	#MXML_INTEGER_CALLBACK
 
mxml_öãgî_cb


	)

44 
	#MXML_OPAQUE_CALLBACK
 
mxml_›aque_cb


	)

46 
	#MXML_REAL_CALLBACK
 
mxml_ªÆ_cb


	)

48 
	#MXML_TEXT_CALLBACK
 0

	)

49 
	#MXML_IGNORE_CALLBACK
 
mxml_ign‹e_cb


	)

52 
	#MXML_NO_PARENT
 0

	)

54 
	#MXML_DESCEND
 1

	)

55 
	#MXML_NO_DESCEND
 0

	)

56 
	#MXML_DESCEND_FIRST
 -1

	)

58 
	#MXML_WS_BEFORE_OPEN
 0

	)

59 
	#MXML_WS_AFTER_OPEN
 1

	)

60 
	#MXML_WS_BEFORE_CLOSE
 2

	)

61 
	#MXML_WS_AFTER_CLOSE
 3

	)

63 
	#MXML_ADD_BEFORE
 0

	)

64 
	#MXML_ADD_AFTER
 1

	)

65 
	#MXML_ADD_TO_PARENT
 
NULL


	)

72 
mxml_ßx_evít_e


74 
	gMXML_SAX_CDATA
,

75 
	gMXML_SAX_COMMENT
,

76 
	gMXML_SAX_DATA
,

77 
	gMXML_SAX_DIRECTIVE
,

78 
	gMXML_SAX_ELEMENT_CLOSE
,

79 
	gMXML_SAX_ELEMENT_OPEN


80 } 
	tmxml_ßx_evít_t
;

82 
mxml_ty≥_e


84 
	gMXML_IGNORE
 = -1,

85 
	gMXML_ELEMENT
,

86 
	gMXML_INTEGER
,

87 
	gMXML_OPAQUE
,

88 
	gMXML_REAL
,

89 
	gMXML_TEXT
,

90 
	gMXML_CUSTOM


91 } 
	tmxml_ty≥_t
;

93 (*
	tmxml_cu°om_de°roy_cb_t
)(*);

96 (*
	tmxml_îr‹_cb_t
)(const *);

99 
mxml_©å_s


101 *
«me
;

102 *
vÆue
;

103 
	}
} 
	tmxml_©å_t
;

105 
mxml_ñemít_s


107 *
	g«me
;

108 
	gnum_©ås
;

109 
mxml_©å_t
 *
	g©ås
;

110 } 
	tmxml_ñemít_t
;

112 
mxml_ãxt_s


114 
	gwhôe•a˚
;

115 *
	g°rög
;

116 } 
	tmxml_ãxt_t
;

118 
mxml_cu°om_s


120 *
	gd©a
;

121 
mxml_cu°om_de°roy_cb_t
 
	gde°roy
;

122 } 
	tmxml_cu°om_t
;

124 
mxml_vÆue_u


126 
mxml_ñemít_t
 
	gñemít
;

127 
	göãgî
;

128 *
	g›aque
;

129 
	gªÆ
;

130 
mxml_ãxt_t
 
	gãxt
;

131 
mxml_cu°om_t
 
	gcu°om
;

132 } 
	tmxml_vÆue_t
;

134 
mxml_node_s


136 
mxml_ty≥_t
 
	gty≥
;

137 
mxml_node_s
 *
	g√xt
;

138 
mxml_node_s
 *
	g¥ev
;

139 
mxml_node_s
 *
	g∑ª¡
;

140 
mxml_node_s
 *
	gchûd
;

141 
mxml_node_s
 *
	gœ°_chûd
;

142 
mxml_vÆue_t
 
	gvÆue
;

143 
	gªf_cou¡
;

144 *
	gu£r_d©a
;

147 
mxml_node_s
 
	tmxml_node_t
;

149 
mxml_ödex_s


151 *
	g©å
;

152 
	gnum_nodes
;

153 
	gÆloc_nodes
;

154 
	gcur_node
;

155 
mxml_node_t
 **
	gnodes
;

158 
mxml_ödex_s
 
	tmxml_ödex_t
;

161 (*
	tmxml_cu°om_lﬂd_cb_t
)(
	tmxml_node_t
 *, const *);

164 *(*
	tmxml_cu°om_ßve_cb_t
)(
	tmxml_node_t
 *);

167 (*
	tmxml_ítôy_cb_t
)(const *);

170 
	$mxml_ty≥_t
 (*
	tmxml_lﬂd_cb_t
)(
	tmxml_node_t
 *);

173 c⁄° *(*
	tmxml_ßve_cb_t
)(
	tmxml_node_t
 *, );

176 (*
	tmxml_ßx_cb_t
)(
	tmxml_node_t
 *, 
	tmxml_ßx_evít_t
, *);

184 #ifde‡
__˝lu•lus


192 
	`mxmlAdd
(
mxml_node_t
 *
∑ª¡
, 
whîe
,

193 
mxml_node_t
 *
chûd
, mxml_node_à*
node
);

194 
	`mxmlDñëe
(
mxml_node_t
 *
node
);

195 
	`mxmlEÀmítDñëeAâr
(
mxml_node_t
 *
node
,

196 c⁄° *
«me
);

197 c⁄° *
	`mxmlEÀmítGëAâr
(
mxml_node_t
 *
node
, c⁄° *
«me
);

198 
	`mxmlEÀmítSëAâr
(
mxml_node_t
 *
node
, c⁄° *
«me
,

199 c⁄° *
vÆue
);

200 
	`mxmlEÀmítSëAârf
(
mxml_node_t
 *
node
, c⁄° *
«me
,

201 c⁄° *
f‹m©
, ...)

202 #ifde‡
__GNUC__


203 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)))

206 
	`mxmlE¡ôyAddCÆlback
(
mxml_ítôy_cb_t
 
cb
);

207 c⁄° *
	`mxmlE¡ôyGëName
(
vÆ
);

208 
	`mxmlE¡ôyGëVÆue
(c⁄° *
«me
);

209 
	`mxmlE¡ôyRemoveCÆlback
(
mxml_ítôy_cb_t
 
cb
);

210 
mxml_node_t
 *
	`mxmlFödEÀmít
(mxml_node_à*
node
, mxml_node_à*
t›
,

211 c⁄° *
«me
, c⁄° *
©å
,

212 c⁄° *
vÆue
, 
des˚nd
);

213 
mxml_node_t
 *
	`mxmlFödP©h
(mxml_node_à*
node
, c⁄° *
∑th
);

214 c⁄° *
	`mxmlGëCDATA
(
mxml_node_t
 *
node
);

215 c⁄° *
	`mxmlGëCu°om
(
mxml_node_t
 *
node
);

216 c⁄° *
	`mxmlGëEÀmít
(
mxml_node_t
 *
node
);

217 
mxml_node_t
 *
	`mxmlGëFú°Chûd
(mxml_node_à*
node
);

218 
	`mxmlGëI¡egî
(
mxml_node_t
 *
node
);

219 
mxml_node_t
 *
	`mxmlGëLa°Chûd
(mxml_node_à*
node
);

220 
mxml_node_t
 *
	`mxmlGëNextSiblög
(mxml_node_à*
node
);

221 c⁄° *
	`mxmlGëO∑que
(
mxml_node_t
 *
node
);

222 
mxml_node_t
 *
	`mxmlGëP¨ít
(mxml_node_à*
node
);

223 
mxml_node_t
 *
	`mxmlGëPªvSiblög
(mxml_node_à*
node
);

224 
	`mxmlGëRól
(
mxml_node_t
 *
node
);

225 
	`mxmlGëRefCou¡
(
mxml_node_t
 *
node
);

226 c⁄° *
	`mxmlGëText
(
mxml_node_t
 *
node
, *
whôe•a˚
);

227 
mxml_ty≥_t
 
	`mxmlGëTy≥
(
mxml_node_t
 *
node
);

228 *
	`mxmlGëU£rD©a
(
mxml_node_t
 *
node
);

229 
	`mxmlIndexDñëe
(
mxml_ödex_t
 *
öd
);

230 
mxml_node_t
 *
	`mxmlIndexEnum
(
mxml_ödex_t
 *
öd
);

231 
mxml_node_t
 *
	`mxmlIndexFöd
(
mxml_ödex_t
 *
öd
,

232 c⁄° *
ñemít
,

233 c⁄° *
vÆue
);

234 
	`mxmlIndexGëCou¡
(
mxml_ödex_t
 *
öd
);

235 
mxml_ödex_t
 *
	`mxmlIndexNew
(
mxml_node_t
 *
node
, c⁄° *
ñemít
,

236 c⁄° *
©å
);

237 
mxml_node_t
 *
	`mxmlIndexRe£t
(
mxml_ödex_t
 *
öd
);

238 
mxml_node_t
 *
	`mxmlLﬂdFd
(mxml_node_à*
t›
, 
fd
,

239 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *));

240 
mxml_node_t
 *
	`mxmlLﬂdFûe
(mxml_node_à*
t›
, 
FILE
 *
Â
,

241 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *));

242 
mxml_node_t
 *
	`mxmlLﬂdSåög
(mxml_node_à*
t›
, c⁄° *
s
,

243 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *));

244 
mxml_node_t
 *
	`mxmlNewCDATA
(mxml_node_à*
∑ª¡
, c⁄° *
°rög
);

245 
mxml_node_t
 *
	`mxmlNewCu°om
(mxml_node_à*
∑ª¡
, *
d©a
,

246 
mxml_cu°om_de°roy_cb_t
 
de°roy
);

247 
mxml_node_t
 *
	`mxmlNewEÀmít
(mxml_node_à*
∑ª¡
, c⁄° *
«me
);

248 
mxml_node_t
 *
	`mxmlNewI¡egî
(mxml_node_à*
∑ª¡
, 
öãgî
);

249 
mxml_node_t
 *
	`mxmlNewO∑que
(mxml_node_à*
∑ª¡
, c⁄° *
›aque
);

250 
mxml_node_t
 *
	`mxmlNewRól
(mxml_node_à*
∑ª¡
, 
ªÆ
);

251 
mxml_node_t
 *
	`mxmlNewText
(mxml_node_à*
∑ª¡
, 
whôe•a˚
,

252 c⁄° *
°rög
);

253 
mxml_node_t
 *
	`mxmlNewTextf
(mxml_node_à*
∑ª¡
, 
whôe•a˚
,

254 c⁄° *
f‹m©
, ...)

255 #ifde‡
__GNUC__


256 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)))

259 
mxml_node_t
 *
	`mxmlNewXML
(c⁄° *
vîsi⁄
);

260 
	`mxmlRñó£
(
mxml_node_t
 *
node
);

261 
	`mxmlRemove
(
mxml_node_t
 *
node
);

262 
	`mxmlRëaö
(
mxml_node_t
 *
node
);

263 *
	`mxmlSaveAŒocSåög
(
mxml_node_t
 *
node
,

264 
mxml_ßve_cb_t
 
cb
);

265 
	`mxmlSaveFd
(
mxml_node_t
 *
node
, 
fd
,

266 
mxml_ßve_cb_t
 
cb
);

267 
	`mxmlSaveFûe
(
mxml_node_t
 *
node
, 
FILE
 *
Â
,

268 
mxml_ßve_cb_t
 
cb
);

269 
	`mxmlSaveSåög
(
mxml_node_t
 *
node
, *
buf„r
,

270 
bufsize
, 
mxml_ßve_cb_t
 
cb
);

271 
mxml_node_t
 *
	`mxmlSAXLﬂdFd
(mxml_node_à*
t›
, 
fd
,

272 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *),

273 
mxml_ßx_cb_t
 
ßx
, *
ßx_d©a
);

274 
mxml_node_t
 *
	`mxmlSAXLﬂdFûe
(mxml_node_à*
t›
, 
FILE
 *
Â
,

275 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *),

276 
mxml_ßx_cb_t
 
ßx
, *
ßx_d©a
);

277 
mxml_node_t
 *
	`mxmlSAXLﬂdSåög
(mxml_node_à*
t›
, c⁄° *
s
,

278 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *),

279 
mxml_ßx_cb_t
 
ßx
, *
ßx_d©a
);

280 
	`mxmlSëCDATA
(
mxml_node_t
 *
node
, c⁄° *
d©a
);

281 
	`mxmlSëCu°om
(
mxml_node_t
 *
node
, *
d©a
,

282 
mxml_cu°om_de°roy_cb_t
 
de°roy
);

283 
	`mxmlSëCu°omH™dÀrs
(
mxml_cu°om_lﬂd_cb_t
 
lﬂd
,

284 
mxml_cu°om_ßve_cb_t
 
ßve
);

285 
	`mxmlSëEÀmít
(
mxml_node_t
 *
node
, c⁄° *
«me
);

286 
	`mxmlSëEº‹CÆlback
(
mxml_îr‹_cb_t
 
cb
);

287 
	`mxmlSëI¡egî
(
mxml_node_t
 *
node
, 
öãgî
);

288 
	`mxmlSëO∑que
(
mxml_node_t
 *
node
, c⁄° *
›aque
);

289 
	`mxmlSëRól
(
mxml_node_t
 *
node
, 
ªÆ
);

290 
	`mxmlSëText
(
mxml_node_t
 *
node
, 
whôe•a˚
,

291 c⁄° *
°rög
);

292 
	`mxmlSëTextf
(
mxml_node_t
 *
node
, 
whôe•a˚
,

293 c⁄° *
f‹m©
, ...)

294 #ifde‡
__GNUC__


295 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)))

298 
	`mxmlSëU£rD©a
(
mxml_node_t
 *
node
, *
d©a
);

299 
	`mxmlSëWøpM¨gö
(
cﬁumn
);

300 
mxml_node_t
 *
	`mxmlWÆkNext
(mxml_node_à*
node
, mxml_node_à*
t›
,

301 
des˚nd
);

302 
mxml_node_t
 *
	`mxmlWÆkPªv
(mxml_node_à*
node
, mxml_node_à*
t›
,

303 
des˚nd
);

310 
	`mxml_îr‹
(c⁄° *
f‹m©
, ...);

311 
mxml_ty≥_t
 
	`mxml_ign‹e_cb
(
mxml_node_t
 *
node
);

312 
mxml_ty≥_t
 
	`mxml_öãgî_cb
(
mxml_node_t
 *
node
);

313 
mxml_ty≥_t
 
	`mxml_›aque_cb
(
mxml_node_t
 *
node
);

314 
mxml_ty≥_t
 
	`mxml_ªÆ_cb
(
mxml_node_t
 *
node
);

321 #ifde‡
__˝lu•lus


322 
	}
}

	@20141202xml/xmltmp.c

1 
	~"mxml.h
"

2 
	~<°dio.h
>

4 
	#SYS_CONFIG_FILE_NAME
 "./sys-c⁄fig-v3.xml"

	)

6 
	#AUDIO_BUFFER_A
 ()1

	)

7 
	#AUDIO_BUFFER_B
 ()2

	)

10 
	ss_ªg_vÆue
{

11 
	mªg
;

12 
	mvÆue
;

13 }
	tt_ªg_vÆue
;

16 
audio_equÆizî_öô
(
t_ªg_vÆue
 *
cfg
, 
audio_buf„r_ty≥
);

17 
audio_equÆizî_lﬂd
(*
fûíame
, 
t_ªg_vÆue
 *
cfg
, 
Êag
);

18 
audio_equÆizî_dól
(
t_ªg_vÆue
 *
cfg_A
,Å_ªg_vÆuê*
cfg_B
);

20 
	$maö
(
¨gc
, *
¨gv
[])

22 
i
;

23 
t_ªg_vÆue
 
i2c_ªg_vÆue_A
[16];

24 
t_ªg_vÆue
 
i2c_ªg_vÆue_B
[16];

25 
	`audio_equÆizî_öô
(
i2c_ªg_vÆue_A
, 
AUDIO_BUFFER_A
);

26 
	`audio_equÆizî_öô
(
i2c_ªg_vÆue_B
, 
AUDIO_BUFFER_B
);

27 
	`audio_equÆizî_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
i2c_ªg_vÆue_A
[1], 4);

28 
	`audio_equÆizî_dól
(
i2c_ªg_vÆue_A
, 
i2c_ªg_vÆue_B
);

30 
	`¥ötf
("for BUFFER A:\n");

31 
i
 = 0; i< 16; i++)

33 
	`¥ötf
("i2c[%d].ªg = %d\n", 
i
, 
i2c_ªg_vÆue_A
[i].
ªg
);

34 
	`¥ötf
("i2c[%d].vÆuê0x%2.2x\n", 
i
, 
i2c_ªg_vÆue_A
[i].
vÆue
);

36 
	`¥ötf
("for BUFFER B:\n");

37 
i
 = 0; i< 16; i++)

39 
	`¥ötf
("i2c[%d].ªg = %d\n", 
i
, 
i2c_ªg_vÆue_B
[i].
ªg
);

40 
	`¥ötf
("i2c[%d].vÆuê0x%2.2x\n", 
i
, 
i2c_ªg_vÆue_B
[i].
vÆue
);

42 
	}
}

44 
	$audio_equÆizî_dól
(
t_ªg_vÆue
 *
cfg_A
,Å_ªg_vÆuê*
cfg_B
)

46 
i
;

47 
cfg_A
++;

48 
cfg_B
++;

49 
i
 = 1; i < 16; i++)

51 
cfg_A
->
vÆue
 -= 48;

52 i‡(
cfg_A
->
vÆue
 >= 0)

53 
cfg_A
->
vÆue
 *= 2;

56 
cfg_A
->
vÆue
 *= 2;

57 
cfg_A
->
vÆue
 = 0xf8 + cfg_A->value;

58 
cfg_A
->
vÆue
 += 2;

60 
cfg_B
->
vÆue
 = 
cfg_A
->value;

61 
cfg_B
++;

62 
cfg_A
++;

64 
	}
}

67 
	$audio_equÆizî_öô
(
t_ªg_vÆue
 *
cfg
, 
audio_buf„r_ty≥
)

69 
i
;

70 
ªg
;

72 
	#REGISTER_ADDRESS
 28

	)

75 i‡(
AUDIO_BUFFER_A
 =
audio_buf„r_ty≥
)

77 
cfg
->
ªg
 = 0;

78 
cfg
->
vÆue
 = 0x08;

80 i‡(
AUDIO_BUFFER_B
 =
audio_buf„r_ty≥
)

82 
cfg
->
ªg
 = 0;

83 
cfg
->
vÆue
 = 0x1a;

86 
ªg
 = 
REGISTER_ADDRESS
;

87 
i
 = 1; i < 16; i++)

89 
cfg
++;

90 
cfg
->
ªg
 =Ñeg;

91 
ªg
 += 4;

93 
	}
}

98 
	$audio_equÆizî_lﬂd
(*
fûíame
, 
t_ªg_vÆue
 *
cfg
, 
Êag
)

100 
FILE
 *
Â
;

101 
mxml_node_t
 *
node1
 = 
NULL
;

102 
mxml_node_t
 *
node
 = 
NULL
;

103 
mxml_node_t
 *
node0
 = 
NULL
;

104 
mxml_node_t
 *
åì
 = 
NULL
;

105 c⁄° *
nodeName
;

106 c⁄° *
nodeAâr
;

108 
Â
 = 
	`f›í
(
fûíame
, "r");

109 if(!
Â
){

110 
	`¥ötf
("canÇot open specified xml\n");

114 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

115 
	`f˛o£
(
Â
);

117 if(
åì
 =
NULL
){

118 
	`¥ötf
("load xml failed\n");

122 
node1
 = 
åì
;

123 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

124 
node1
){

125 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

126 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

127 if(!
	`°rcmp
(
nodeName
, "module")){

128 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

129 if(!
	`°rcmp
(
nodeAâr
, "AudioSampleSocConfig")){

130 
	`¥ötf
("module AudioSampleSocConfig found\n");

131 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

132 
Êag
)

135 
node
){

136 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

137 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

138 if(!
	`°rcmp
(
nodeName
, "group")){

139 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

140 if(!
	`°rcmp
(
nodeAâr
, "Float")){

141 
	`¥ötf
("group Float found\n");

142 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

143 
node0
){

144 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

145 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

146 if(!
	`°rcmp
(
nodeName
, "configValue")){

147 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

148 if(!
	`°rcmp
(
nodeAâr
, "1")){

149 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

150 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

151 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

152 
cfg
++;

154 if(!
	`°rcmp
(
nodeAâr
, "2")){

155 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

156 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

157 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

158 
cfg
++;

160 if(!
	`°rcmp
(
nodeAâr
, "3")){

161 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

162 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

163 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

164 
cfg
++;

166 if(!
	`°rcmp
(
nodeAâr
, "4")){

167 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

168 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

169 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

170 
cfg
++;

172 if(!
	`°rcmp
(
nodeAâr
, "5")){

173 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

174 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

175 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

176 
cfg
++;

178 if(!
	`°rcmp
(
nodeAâr
, "6")){

179 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

180 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

181 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

182 
cfg
++;

184 if(!
	`°rcmp
(
nodeAâr
, "7")){

185 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

186 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

187 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

188 
cfg
++;

190 if(!
	`°rcmp
(
nodeAâr
, "8")){

191 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

192 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

193 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

194 
cfg
++;

196 if(!
	`°rcmp
(
nodeAâr
, "9")){

197 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

198 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

199 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

200 
cfg
++;

202 if(!
	`°rcmp
(
nodeAâr
, "10")){

203 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

204 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

205 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

206 
cfg
++;

208 if(!
	`°rcmp
(
nodeAâr
, "11")){

209 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

210 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

211 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

212 
cfg
++;

214 if(!
	`°rcmp
(
nodeAâr
, "12")){

215 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

216 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

217 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

218 
cfg
++;

220 if(!
	`°rcmp
(
nodeAâr
, "13")){

221 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

222 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

223 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

224 
cfg
++;

226 if(!
	`°rcmp
(
nodeAâr
, "14")){

227 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

228 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

229 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

230 
cfg
++;

232 if(!
	`°rcmp
(
nodeAâr
, "15")){

233 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

234 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

235 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

236 
cfg
++;

240 
node0
 = 
	`mxmlGëNextSiblög
(node0);

245 
node
 = 
	`mxmlGëNextSiblög
(node);

249 
node
){

250 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

251 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

252 if(!
	`°rcmp
(
nodeName
, "group")){

253 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

254 if(!
	`°rcmp
(
nodeAâr
, "Rap")){

255 
	`¥ötf
("group Rap found\n");

256 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

257 
node0
){

258 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

259 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

260 if(!
	`°rcmp
(
nodeName
, "configValue")){

261 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

262 if(!
	`°rcmp
(
nodeAâr
, "1")){

263 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

264 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

265 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

266 
cfg
++;

268 if(!
	`°rcmp
(
nodeAâr
, "2")){

269 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

270 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

271 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

272 
cfg
++;

274 if(!
	`°rcmp
(
nodeAâr
, "3")){

275 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

276 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

277 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

278 
cfg
++;

280 if(!
	`°rcmp
(
nodeAâr
, "4")){

281 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

282 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

283 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

284 
cfg
++;

286 if(!
	`°rcmp
(
nodeAâr
, "5")){

287 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

288 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

289 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

290 
cfg
++;

292 if(!
	`°rcmp
(
nodeAâr
, "6")){

293 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

294 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

295 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

296 
cfg
++;

298 if(!
	`°rcmp
(
nodeAâr
, "7")){

299 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

300 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

301 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

302 
cfg
++;

304 if(!
	`°rcmp
(
nodeAâr
, "8")){

305 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

306 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

307 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

308 
cfg
++;

310 if(!
	`°rcmp
(
nodeAâr
, "9")){

311 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

312 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

313 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

314 
cfg
++;

316 if(!
	`°rcmp
(
nodeAâr
, "10")){

317 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

318 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

319 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

320 
cfg
++;

322 if(!
	`°rcmp
(
nodeAâr
, "11")){

323 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

324 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

325 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

326 
cfg
++;

328 if(!
	`°rcmp
(
nodeAâr
, "12")){

329 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

330 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

331 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

332 
cfg
++;

334 if(!
	`°rcmp
(
nodeAâr
, "13")){

335 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

336 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

337 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

338 
cfg
++;

340 if(!
	`°rcmp
(
nodeAâr
, "14")){

341 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

342 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

343 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

344 
cfg
++;

346 if(!
	`°rcmp
(
nodeAâr
, "15")){

347 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

348 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

349 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

350 
cfg
++;

354 
node0
 = 
	`mxmlGëNextSiblög
(node0);

359 
node
 = 
	`mxmlGëNextSiblög
(node);

363 
node
){

364 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

365 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

366 if(!
	`°rcmp
(
nodeName
, "group")){

367 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

368 if(!
	`°rcmp
(
nodeAâr
, "Hip-Hop")){

369 
	`¥ötf
("group Hip-Hop found\n");

370 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

371 
node0
){

372 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

373 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

374 if(!
	`°rcmp
(
nodeName
, "configValue")){

375 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

376 if(!
	`°rcmp
(
nodeAâr
, "1")){

377 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

378 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

379 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

380 
cfg
++;

382 if(!
	`°rcmp
(
nodeAâr
, "2")){

383 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

384 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

385 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

386 
cfg
++;

388 if(!
	`°rcmp
(
nodeAâr
, "3")){

389 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

390 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

391 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

392 
cfg
++;

394 if(!
	`°rcmp
(
nodeAâr
, "4")){

395 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

396 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

397 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

398 
cfg
++;

400 if(!
	`°rcmp
(
nodeAâr
, "5")){

401 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

402 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

403 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

404 
cfg
++;

406 if(!
	`°rcmp
(
nodeAâr
, "6")){

407 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

408 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

409 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

410 
cfg
++;

412 if(!
	`°rcmp
(
nodeAâr
, "7")){

413 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

414 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

415 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

416 
cfg
++;

418 if(!
	`°rcmp
(
nodeAâr
, "8")){

419 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

420 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

421 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

422 
cfg
++;

424 if(!
	`°rcmp
(
nodeAâr
, "9")){

425 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

426 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

427 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

428 
cfg
++;

430 if(!
	`°rcmp
(
nodeAâr
, "10")){

431 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

432 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

433 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

434 
cfg
++;

436 if(!
	`°rcmp
(
nodeAâr
, "11")){

437 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

438 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

439 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

440 
cfg
++;

442 if(!
	`°rcmp
(
nodeAâr
, "12")){

443 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

444 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

445 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

446 
cfg
++;

448 if(!
	`°rcmp
(
nodeAâr
, "13")){

449 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

450 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

451 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

452 
cfg
++;

454 if(!
	`°rcmp
(
nodeAâr
, "14")){

455 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

456 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

457 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

458 
cfg
++;

460 if(!
	`°rcmp
(
nodeAâr
, "15")){

461 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

462 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

463 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

464 
cfg
++;

468 
node0
 = 
	`mxmlGëNextSiblög
(node0);

473 
node
 = 
	`mxmlGëNextSiblög
(node);

477 
node
){

478 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

479 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

480 if(!
	`°rcmp
(
nodeName
, "group")){

481 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

482 if(!
	`°rcmp
(
nodeAâr
, "Reggeaaton")){

483 
	`¥ötf
("group Reggeaaton found\n");

484 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

485 
node0
){

486 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

487 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

488 if(!
	`°rcmp
(
nodeName
, "configValue")){

489 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

490 if(!
	`°rcmp
(
nodeAâr
, "1")){

491 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

492 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

493 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

494 
cfg
++;

496 if(!
	`°rcmp
(
nodeAâr
, "2")){

497 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

498 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

499 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

500 
cfg
++;

502 if(!
	`°rcmp
(
nodeAâr
, "3")){

503 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

504 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

505 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

506 
cfg
++;

508 if(!
	`°rcmp
(
nodeAâr
, "4")){

509 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

510 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

511 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

512 
cfg
++;

514 if(!
	`°rcmp
(
nodeAâr
, "5")){

515 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

516 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

517 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

518 
cfg
++;

520 if(!
	`°rcmp
(
nodeAâr
, "6")){

521 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

522 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

523 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

524 
cfg
++;

526 if(!
	`°rcmp
(
nodeAâr
, "7")){

527 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

528 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

529 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

530 
cfg
++;

532 if(!
	`°rcmp
(
nodeAâr
, "8")){

533 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

534 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

535 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

536 
cfg
++;

538 if(!
	`°rcmp
(
nodeAâr
, "9")){

539 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

540 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

541 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

542 
cfg
++;

544 if(!
	`°rcmp
(
nodeAâr
, "10")){

545 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

546 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

547 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

548 
cfg
++;

550 if(!
	`°rcmp
(
nodeAâr
, "11")){

551 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

552 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

553 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

554 
cfg
++;

556 if(!
	`°rcmp
(
nodeAâr
, "12")){

557 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

558 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

559 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

560 
cfg
++;

562 if(!
	`°rcmp
(
nodeAâr
, "13")){

563 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

564 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

565 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

566 
cfg
++;

568 if(!
	`°rcmp
(
nodeAâr
, "14")){

569 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

570 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

571 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

572 
cfg
++;

574 if(!
	`°rcmp
(
nodeAâr
, "15")){

575 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

576 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

577 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

578 
cfg
++;

582 
node0
 = 
	`mxmlGëNextSiblög
(node0);

587 
node
 = 
	`mxmlGëNextSiblög
(node);

591 
node
){

592 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

593 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

594 if(!
	`°rcmp
(
nodeName
, "group")){

595 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

596 if(!
	`°rcmp
(
nodeAâr
, "Reggae")){

597 
	`¥ötf
("group Reggae found\n");

598 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

599 
node0
){

600 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

601 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

602 if(!
	`°rcmp
(
nodeName
, "configValue")){

603 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

604 if(!
	`°rcmp
(
nodeAâr
, "1")){

605 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

606 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

607 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

608 
cfg
++;

610 if(!
	`°rcmp
(
nodeAâr
, "2")){

611 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

612 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

613 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

614 
cfg
++;

616 if(!
	`°rcmp
(
nodeAâr
, "3")){

617 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

618 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

619 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

620 
cfg
++;

622 if(!
	`°rcmp
(
nodeAâr
, "4")){

623 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

624 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

625 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

626 
cfg
++;

628 if(!
	`°rcmp
(
nodeAâr
, "5")){

629 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

630 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

631 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

632 
cfg
++;

634 if(!
	`°rcmp
(
nodeAâr
, "6")){

635 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

636 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

637 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

638 
cfg
++;

640 if(!
	`°rcmp
(
nodeAâr
, "7")){

641 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

642 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

643 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

644 
cfg
++;

646 if(!
	`°rcmp
(
nodeAâr
, "8")){

647 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

648 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

649 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

650 
cfg
++;

652 if(!
	`°rcmp
(
nodeAâr
, "9")){

653 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

654 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

655 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

656 
cfg
++;

658 if(!
	`°rcmp
(
nodeAâr
, "10")){

659 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

660 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

661 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

662 
cfg
++;

664 if(!
	`°rcmp
(
nodeAâr
, "11")){

665 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

666 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

667 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

668 
cfg
++;

670 if(!
	`°rcmp
(
nodeAâr
, "12")){

671 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

672 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

673 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

674 
cfg
++;

676 if(!
	`°rcmp
(
nodeAâr
, "13")){

677 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

678 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

679 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

680 
cfg
++;

682 if(!
	`°rcmp
(
nodeAâr
, "14")){

683 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

684 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

685 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

686 
cfg
++;

688 if(!
	`°rcmp
(
nodeAâr
, "15")){

689 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

690 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

691 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

692 
cfg
++;

696 
node0
 = 
	`mxmlGëNextSiblög
(node0);

701 
node
 = 
	`mxmlGëNextSiblög
(node);

705 
node
){

706 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

707 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

708 if(!
	`°rcmp
(
nodeName
, "group")){

709 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

710 if(!
	`°rcmp
(
nodeAâr
, "Classical")){

711 
	`¥ötf
("group Classical found\n");

712 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

713 
node0
){

714 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

715 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

716 if(!
	`°rcmp
(
nodeName
, "configValue")){

717 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

718 if(!
	`°rcmp
(
nodeAâr
, "1")){

719 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

720 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

721 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

722 
cfg
++;

724 if(!
	`°rcmp
(
nodeAâr
, "2")){

725 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

726 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

727 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

728 
cfg
++;

730 if(!
	`°rcmp
(
nodeAâr
, "4")){

731 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

732 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

733 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

734 
cfg
++;

736 if(!
	`°rcmp
(
nodeAâr
, "5")){

737 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

738 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

739 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

740 
cfg
++;

742 if(!
	`°rcmp
(
nodeAâr
, "6")){

743 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

744 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

745 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

746 
cfg
++;

748 if(!
	`°rcmp
(
nodeAâr
, "7")){

749 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

750 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

751 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

752 
cfg
++;

754 if(!
	`°rcmp
(
nodeAâr
, "8")){

755 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

756 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

757 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

758 
cfg
++;

760 if(!
	`°rcmp
(
nodeAâr
, "9")){

761 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

762 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

763 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

764 
cfg
++;

766 if(!
	`°rcmp
(
nodeAâr
, "10")){

767 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

768 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

769 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

770 
cfg
++;

772 if(!
	`°rcmp
(
nodeAâr
, "11")){

773 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

774 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

775 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

776 
cfg
++;

778 if(!
	`°rcmp
(
nodeAâr
, "12")){

779 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

780 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

781 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

782 
cfg
++;

784 if(!
	`°rcmp
(
nodeAâr
, "13")){

785 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

786 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

787 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

788 
cfg
++;

790 if(!
	`°rcmp
(
nodeAâr
, "14")){

791 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

792 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

793 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

794 
cfg
++;

796 if(!
	`°rcmp
(
nodeAâr
, "15")){

797 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

798 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

799 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

800 
cfg
++;

804 
node0
 = 
	`mxmlGëNextSiblög
(node0);

809 
node
 = 
	`mxmlGëNextSiblög
(node);

813 
node
){

814 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

815 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

816 if(!
	`°rcmp
(
nodeName
, "group")){

817 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

818 if(!
	`°rcmp
(
nodeAâr
, "Blues")){

819 
	`¥ötf
("group Blues found\n");

820 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

821 
node0
){

822 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

823 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

824 if(!
	`°rcmp
(
nodeName
, "configValue")){

825 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

826 if(!
	`°rcmp
(
nodeAâr
, "1")){

827 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

828 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

829 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

830 
cfg
++;

832 if(!
	`°rcmp
(
nodeAâr
, "2")){

833 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

834 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

835 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

836 
cfg
++;

838 if(!
	`°rcmp
(
nodeAâr
, "3")){

839 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

840 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

841 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

842 
cfg
++;

844 if(!
	`°rcmp
(
nodeAâr
, "4")){

845 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

846 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

847 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

848 
cfg
++;

850 if(!
	`°rcmp
(
nodeAâr
, "5")){

851 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

852 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

853 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

854 
cfg
++;

856 if(!
	`°rcmp
(
nodeAâr
, "6")){

857 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

858 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

859 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

860 
cfg
++;

862 if(!
	`°rcmp
(
nodeAâr
, "7")){

863 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

864 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

865 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

866 
cfg
++;

868 if(!
	`°rcmp
(
nodeAâr
, "8")){

869 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

870 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

871 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

872 
cfg
++;

874 if(!
	`°rcmp
(
nodeAâr
, "9")){

875 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

876 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

877 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

878 
cfg
++;

880 if(!
	`°rcmp
(
nodeAâr
, "10")){

881 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

882 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

883 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

884 
cfg
++;

886 if(!
	`°rcmp
(
nodeAâr
, "11")){

887 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

888 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

889 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

890 
cfg
++;

892 if(!
	`°rcmp
(
nodeAâr
, "12")){

893 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

894 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

895 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

896 
cfg
++;

898 if(!
	`°rcmp
(
nodeAâr
, "13")){

899 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

900 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

901 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

902 
cfg
++;

904 if(!
	`°rcmp
(
nodeAâr
, "14")){

905 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

906 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

907 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

908 
cfg
++;

910 if(!
	`°rcmp
(
nodeAâr
, "15")){

911 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

912 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

913 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

914 
cfg
++;

918 
node0
 = 
	`mxmlGëNextSiblög
(node0);

923 
node
 = 
	`mxmlGëNextSiblög
(node);

927 
node
){

928 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

929 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

930 if(!
	`°rcmp
(
nodeName
, "group")){

931 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

932 if(!
	`°rcmp
(
nodeAâr
, "Jazz")){

933 
	`¥ötf
("group Jazz found\n");

934 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

935 
node0
){

936 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

937 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

938 if(!
	`°rcmp
(
nodeName
, "configValue")){

939 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

940 if(!
	`°rcmp
(
nodeAâr
, "1")){

941 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

942 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

943 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

944 
cfg
++;

946 if(!
	`°rcmp
(
nodeAâr
, "2")){

947 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

948 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

949 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

950 
cfg
++;

952 if(!
	`°rcmp
(
nodeAâr
, "3")){

953 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

954 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

955 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

956 
cfg
++;

958 if(!
	`°rcmp
(
nodeAâr
, "4")){

959 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

960 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

961 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

962 
cfg
++;

964 if(!
	`°rcmp
(
nodeAâr
, "5")){

965 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

966 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

967 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

968 
cfg
++;

970 if(!
	`°rcmp
(
nodeAâr
, "6")){

971 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

972 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

973 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

974 
cfg
++;

976 if(!
	`°rcmp
(
nodeAâr
, "7")){

977 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

978 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

979 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

980 
cfg
++;

982 if(!
	`°rcmp
(
nodeAâr
, "8")){

983 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

984 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

985 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

986 
cfg
++;

988 if(!
	`°rcmp
(
nodeAâr
, "9")){

989 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

990 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

991 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

992 
cfg
++;

994 if(!
	`°rcmp
(
nodeAâr
, "10")){

995 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

996 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

997 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

998 
cfg
++;

1000 if(!
	`°rcmp
(
nodeAâr
, "11")){

1001 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1002 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1003 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1004 
cfg
++;

1006 if(!
	`°rcmp
(
nodeAâr
, "12")){

1007 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1008 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1009 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1010 
cfg
++;

1012 if(!
	`°rcmp
(
nodeAâr
, "13")){

1013 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1014 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1015 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1016 
cfg
++;

1018 if(!
	`°rcmp
(
nodeAâr
, "14")){

1019 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1020 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1021 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1022 
cfg
++;

1024 if(!
	`°rcmp
(
nodeAâr
, "15")){

1025 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1026 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1027 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1028 
cfg
++;

1032 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1037 
node
 = 
	`mxmlGëNextSiblög
(node);

1041 
node
){

1042 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1043 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1044 if(!
	`°rcmp
(
nodeName
, "group")){

1045 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1046 if(!
	`°rcmp
(
nodeAâr
, "Pop")){

1047 
	`¥ötf
("group Pop found\n");

1048 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1049 
node0
){

1050 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1051 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1052 if(!
	`°rcmp
(
nodeName
, "configValue")){

1053 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1054 if(!
	`°rcmp
(
nodeAâr
, "1")){

1055 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1056 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1057 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1058 
cfg
++;

1060 if(!
	`°rcmp
(
nodeAâr
, "2")){

1061 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1062 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1063 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1064 
cfg
++;

1066 if(!
	`°rcmp
(
nodeAâr
, "3")){

1067 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1068 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1069 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1070 
cfg
++;

1072 if(!
	`°rcmp
(
nodeAâr
, "4")){

1073 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1074 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1075 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1076 
cfg
++;

1078 if(!
	`°rcmp
(
nodeAâr
, "5")){

1079 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1080 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1081 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1082 
cfg
++;

1084 if(!
	`°rcmp
(
nodeAâr
, "6")){

1085 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1086 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1087 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1088 
cfg
++;

1090 if(!
	`°rcmp
(
nodeAâr
, "7")){

1091 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1092 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1093 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1094 
cfg
++;

1096 if(!
	`°rcmp
(
nodeAâr
, "8")){

1097 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1098 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1099 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1100 
cfg
++;

1102 if(!
	`°rcmp
(
nodeAâr
, "9")){

1103 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1104 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1105 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1106 
cfg
++;

1108 if(!
	`°rcmp
(
nodeAâr
, "10")){

1109 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1110 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1111 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1112 
cfg
++;

1114 if(!
	`°rcmp
(
nodeAâr
, "11")){

1115 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1116 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1117 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1118 
cfg
++;

1120 if(!
	`°rcmp
(
nodeAâr
, "12")){

1121 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1122 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1123 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1124 
cfg
++;

1126 if(!
	`°rcmp
(
nodeAâr
, "13")){

1127 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1128 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1129 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1130 
cfg
++;

1132 if(!
	`°rcmp
(
nodeAâr
, "14")){

1133 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1134 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1135 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1136 
cfg
++;

1138 if(!
	`°rcmp
(
nodeAâr
, "15")){

1139 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1140 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1141 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1142 
cfg
++;

1146 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1151 
node
 = 
	`mxmlGëNextSiblög
(node);

1155 
node
){

1156 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1157 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1158 if(!
	`°rcmp
(
nodeName
, "group")){

1159 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1160 if(!
	`°rcmp
(
nodeAâr
, "Rock")){

1161 
	`¥ötf
("group Rock found\n");

1162 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1163 
node0
){

1164 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1165 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1166 if(!
	`°rcmp
(
nodeName
, "configValue")){

1167 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1168 if(!
	`°rcmp
(
nodeAâr
, "1")){

1169 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1170 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1171 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1172 
cfg
++;

1174 if(!
	`°rcmp
(
nodeAâr
, "2")){

1175 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1176 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1177 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1178 
cfg
++;

1180 if(!
	`°rcmp
(
nodeAâr
, "3")){

1181 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1182 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1183 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1184 
cfg
++;

1186 if(!
	`°rcmp
(
nodeAâr
, "4")){

1187 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1188 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1189 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1190 
cfg
++;

1192 if(!
	`°rcmp
(
nodeAâr
, "5")){

1193 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1194 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1195 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1196 
cfg
++;

1198 if(!
	`°rcmp
(
nodeAâr
, "6")){

1199 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1200 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1201 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1202 
cfg
++;

1204 if(!
	`°rcmp
(
nodeAâr
, "7")){

1205 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1206 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1207 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1208 
cfg
++;

1210 if(!
	`°rcmp
(
nodeAâr
, "8")){

1211 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1212 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1213 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1214 
cfg
++;

1216 if(!
	`°rcmp
(
nodeAâr
, "9")){

1217 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1218 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1219 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1220 
cfg
++;

1222 if(!
	`°rcmp
(
nodeAâr
, "10")){

1223 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1224 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1225 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1226 
cfg
++;

1228 if(!
	`°rcmp
(
nodeAâr
, "11")){

1229 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1230 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1231 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1232 
cfg
++;

1234 if(!
	`°rcmp
(
nodeAâr
, "12")){

1235 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1236 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1237 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1238 
cfg
++;

1240 if(!
	`°rcmp
(
nodeAâr
, "13")){

1241 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1242 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1243 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1244 
cfg
++;

1246 if(!
	`°rcmp
(
nodeAâr
, "14")){

1247 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1248 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1249 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1250 
cfg
++;

1252 if(!
	`°rcmp
(
nodeAâr
, "15")){

1253 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1254 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1255 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1256 
cfg
++;

1260 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1265 
node
 = 
	`mxmlGëNextSiblög
(node);

1270 
node
){

1271 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1272 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1273 if(!
	`°rcmp
(
nodeName
, "group")){

1274 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1275 if(!
	`°rcmp
(
nodeAâr
, "Custom")){

1276 
	`¥ötf
("group Float Custom\n");

1277 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1278 
node0
){

1279 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1280 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1281 if(!
	`°rcmp
(
nodeName
, "configValue")){

1282 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1283 if(!
	`°rcmp
(
nodeAâr
, "1")){

1284 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1285 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1286 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1287 
cfg
++;

1289 if(!
	`°rcmp
(
nodeAâr
, "2")){

1290 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1291 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1292 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1293 
cfg
++;

1295 if(!
	`°rcmp
(
nodeAâr
, "3")){

1296 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1297 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1298 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1299 
cfg
++;

1301 if(!
	`°rcmp
(
nodeAâr
, "4")){

1302 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1303 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1304 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1305 
cfg
++;

1307 if(!
	`°rcmp
(
nodeAâr
, "5")){

1308 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1309 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1310 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1311 
cfg
++;

1313 if(!
	`°rcmp
(
nodeAâr
, "6")){

1314 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1315 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1316 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1317 
cfg
++;

1319 if(!
	`°rcmp
(
nodeAâr
, "7")){

1320 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1321 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1322 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1323 
cfg
++;

1325 if(!
	`°rcmp
(
nodeAâr
, "8")){

1326 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1327 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1328 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1329 
cfg
++;

1331 if(!
	`°rcmp
(
nodeAâr
, "9")){

1332 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1333 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1334 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1335 
cfg
++;

1337 if(!
	`°rcmp
(
nodeAâr
, "10")){

1338 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1339 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1340 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1341 
cfg
++;

1343 if(!
	`°rcmp
(
nodeAâr
, "11")){

1344 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1345 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1346 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1347 
cfg
++;

1349 if(!
	`°rcmp
(
nodeAâr
, "12")){

1350 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1351 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1352 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1353 
cfg
++;

1355 if(!
	`°rcmp
(
nodeAâr
, "13")){

1356 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1357 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1358 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1359 
cfg
++;

1361 if(!
	`°rcmp
(
nodeAâr
, "14")){

1362 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1363 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1364 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1365 
cfg
++;

1367 if(!
	`°rcmp
(
nodeAâr
, "15")){

1368 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1369 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1370 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1371 
cfg
++;

1375 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1380 
node
 = 
	`mxmlGëNextSiblög
(node);

1387 
node1
 = 
	`mxmlGëNextSiblög
(node1);

1389 
	`mxmlDñëe
(
åì
);

1391 
	}
}

	@PC_CENTRIST/CtImage.c

1 
	~"CtImage.h
"

2 
	~"svm.h
"

3 
	~"∑øm.h
"

5 c⁄° 
	gBHEIGHT
 = 
PHEIGHT
/9;

6 c⁄° 
	gBWIDTH
 = 
PWIDTH
/4;

7 c⁄° 
	gSBNUM_H
 = 8;

8 c⁄° 
	gSBNUM_W
 = 3;

10 
svm_modñ
* 
modñ
;

12 * 
	gsˇÀFótuª
;

13 * 
	g„©uª
;

14 * 
	gã°SV
;

16 *
Fótuª_Mö
;

17 *
Fótuª_Max
;

19 
	$CompuãSobñ
(
uch¨
* 
image
, uch¨* 
sobñImage
, 
height
, 
width
)

21 
i
 = 0, 
j
 = 0;

22 
uch¨
 
vÆue
 = 0;

23 
uch¨
 *
p
 = 
image
;

24 
uch¨
 *
¥
 = 
sobñImage
;

26  
i
=1;i< 
height
-1;i++)

28 
uch¨
* 
p1
 = &
p
[(
i
-1)*
width
];

29 
uch¨
* 
p2
 = &
p
[
i
*
width
];

30 
uch¨
* 
p3
 = &
p
[(
i
+1)*
width
];

31  
j
=1;j< 
width
-1;j++)

33 
gx
 = 
p1
[
j
-1] -Ö1[j+1]

34 + 2*(
p2
[
j
-1] -Ö2[j+1])

35 + 
p3
[
j
-1] -Ö3[j+1];

37 
gy
 = 
p1
[
j
-1] - 
p3
[j-1]

38 + 2*(
p1
[
j
] - 
p3
[j])

39 + 
p1
[
j
+1] - 
p3
[j+1];

41 
vÆue
 = (
uch¨
)
	`sqπ
(()(
gx
*gx+
gy
*gy));

42 
¥
[
i
*
width
+
j
] = 
vÆue
 * (vÆuê> 
THRESH
);

45 
	}
}

47 
	$CompuãCt
(
uch¨
* 
image
, uch¨* 
˘Image
, 
height
, 
width
)

49 
i
 = 0, 
j
 = 0;

50 
uch¨
* 
˘p
 = 
˘Image
;

51 
uch¨
* 
p
 = 
image
;

52  
i
=2;i<
height
-2;i++)

54 
uch¨
* 
p1
 = 
p
+(
i
-1)*
width
;

55 
uch¨
* 
p2
 = 
p
+
i
*
width
;

56 
uch¨
* 
p3
 = 
p
+(
i
+1)*
width
;

58  
j
=2;j<
width
-2;j++)

60 
ödex
 = 0;

61 if(
p2
[
j
]<=
p1
[j-1]Ë
ödex
 += 0x80;

62 if(
p2
[
j
]<=
p1
[j]Ë
ödex
 += 0x40;

63 if(
p2
[
j
]<=
p1
[j+1]Ë
ödex
 += 0x20;

64 if(
p2
[
j
]<ı2[j-1]Ë
ödex
 += 0x10;

65 if(
p2
[
j
]<ı2[j+1]Ë
ödex
 += 0x08;

66 if(
p2
[
j
]<=
p3
[j-1]Ë
ödex
 += 0x04;

67 if(
p2
[
j
]<=
p3
[j]Ë
ödex
 += 0x02;

68 if(
p2
[
j
]<=
p3
[j+1]Ë
ödex
 ++;

69 
˘p
[
i
*
width
+
j
] = 
ödex
;

72 
	}
}

74 
	$GëFótuªVe˘‹
(
uch¨
* 
˘Image
, 
t
, 
l
, 
width
)

76 
low
 = -1.0, 
up
 = 1.0;

77 
i
;

78 
tmp
;

80 
	`mem£t
(
„©uª
,0, 
DIM
*());

82 
uch¨
* 
˘p
 = 
˘Image
;

83 * 
wp
 = 
„©uª
;

84 
xdiv
 = 0, 
ydiv
 = 0, 
x
 = 0, 
y
 = 0;

85  
xdiv
 = 0; xdiv<
SBNUM_H
; xdiv++)

86  
ydiv
 = 0; ydiv<
SBNUM_W
; ydiv++)

88  
x
 = 1; x < 
BHEIGHT
*2-1; ++x)

90  
y
 = 1; y < 
BWIDTH
*2-1; ++y)

92 
ödex
 = (
xdiv
*
SBNUM_W
+
ydiv
)*256 + 
˘p
[(
t
+xdiv*
BHEIGHT
+
x
)*
width
+(
l
+ydiv*
BWIDTH
+
y
)];

93 
wp
[
ödex
]++;

99  
i
 = 0; i < 
DIM
; i++)

101 i‡(
„©uª
[
i
] =
Fótuª_Mö
[i])

102 
sˇÀFótuª
[
i
] = 
low
;

103 i‡(
„©uª
[
i
] =
Fótuª_Max
[i])

104 
sˇÀFótuª
[
i
] = 
up
;

106 
sˇÀFótuª
[
i
] = 
low


107 + (
up
 - 
low
Ë* ()(
„©uª
[
i
] - 
Fótuª_Mö
[i])

108 / (
Fótuª_Max
[
i
] - 
Fótuª_Mö
[i]);

109 
tmp
 = 
sˇÀFótuª
[
i
] * 
SCALE
;

110 
ã°SV
[
i
] = 
tmp
 >= 128 ? 127:tmp;

112 
	}
}

114 
	$FømeCíåi°
(*
nBuf„r
, 
IMAGE
 *
obje˘
)

116 
obje˘
->
˚nRecNum
 = 0;

118 
uch¨
* 
sobñImage
 = (uch¨ *)
	`mÆloc
(
FRAME_WIDTH
*
FRAME_HEIGHT
*(uchar));

119 
uch¨
* 
˘Image
 = (uch¨ *)
	`mÆloc
(
FRAME_WIDTH
*
FRAME_HEIGHT
*(uchar));

121 
	`CompuãSobñ
((
uch¨
 *)
nBuf„r
, 
sobñImage
, 
FRAME_HEIGHT
, 
FRAME_WIDTH
);

122 
	`CompuãCt
(
sobñImage
, 
˘Image
, 
FRAME_HEIGHT
, 
FRAME_WIDTH
);

124 
„©uª
 = (*Ë
	`mÆloc
(
DIM
*());

125 
sˇÀFótuª
 = (*)
	`mÆloc
(()*
DIM
);

126 
ã°SV
 = (*)
	`mÆloc
(()*
DIM
);

128 
x
 = 0, 
y
 = 0;

129 
°ïsizex
 = 
FRAME_HEIGHT
/12;

130 
°ïsizey
 = 
FRAME_WIDTH
/12;

132  
x
 = 2; x <
FRAME_HEIGHT
 - 
PHEIGHT
-2; x+=
°ïsizex
)

134  
y
 = 2; y <
FRAME_WIDTH
 - 
PWIDTH
-2; y+=
°ïsizey
)

136 
	`GëFótuªVe˘‹
(
˘Image
,
x
,
y
,
FRAME_WIDTH
);

138 
s
 = 
	`svm_¥edi˘
(
modñ
, 
ã°SV
);

139 i‡(
s
 != 0)

141 
obje˘
->
˚nCo‹d
[obje˘->
˚nRecNum
].
x1
 = 
y
;

142 
obje˘
->
˚nCo‹d
[obje˘->
˚nRecNum
].
y1
 = 
x
;

143 
obje˘
->
˚nCo‹d
[obje˘->
˚nRecNum
].
x2
 = 
y
 + 
PWIDTH
;

144 
obje˘
->
˚nCo‹d
[obje˘->
˚nRecNum
].
y2
 = 
x
 + 
PHEIGHT
;

145 
obje˘
->
˚nRecNum
++;

150 
	`‰ì
(
sˇÀFótuª
);

151 
	`‰ì
(
„©uª
);

152 
	`‰ì
(
ã°SV
);

153 
	`‰ì
(
sobñImage
);

154 
	`‰ì
(
˘Image
);

155 
	}
}

	@PC_CENTRIST/CtImage.h

1 #i‚de‡
_CTIMAGE_H_


2 
	#_CTIMAGE_H_


	)

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~<m©h.h
>

8 
	~<limôs.h
>

9 
	~"∑øm.h
"

11 
	tuch¨
;

13 
	sª˘


15 
	mx1
;

16 
	my1
;

17 
	mx2
;

18 
	my2
;

19 }
	tª˘
;

23 
	m‰ame_num
;

24 
	mªcNum
;

25 
	m˚nRecNum
;

26 
	mfú°Image
[
FRAME_WIDTH
*
FRAME_HEIGHT
];

27 
	mœ°Image
[
FRAME_WIDTH
*
FRAME_HEIGHT
];

28 
	mfûãrImage
[
FRAME_WIDTH
*
FRAME_HEIGHT
];

29 
	mdiffImage
[
FRAME_WIDTH
*
FRAME_HEIGHT
];

30 
	mh‹iz⁄èl
[
FRAME_HEIGHT
];

31 
	mvîtiˇl
[
FRAME_WIDTH
];

32 
ª˘
 
	mco‹dö©e
[
COOR_SIZE
];

33 
ª˘
 
	m˚nCo‹d
[
COOR_SIZE
];

34 
	mhas_obje˘
;

35 } 
	tIMAGE
;

37 c⁄° 
BHEIGHT
;

38 c⁄° 
BWIDTH
;

39 c⁄° 
SBNUM_H
;

40 c⁄° 
SBNUM_W
;

42 c⁄° 
VERTICAL_THRESH
;

43 c⁄° 
PIXEL_DIFF_THRESH
;

44 c⁄° 
OBJECT_SIZE
;

45 c⁄° 
DETECT_GAP
;

48 
CompuãSobñ
(
uch¨
* 
image
, uch¨* 
sobñImage
, 
height
, 
width
);

49 
CompuãCt
(
uch¨
* 
image
, uch¨* 
˘Image
, 
height
, 
width
);

51 
GëFótuªVe˘‹
(
uch¨
* 
˘Image
, 
t
, 
l
, 
width
);

52 
FømeCíåi°
(*
nBuf„r
, 
IMAGE
* 
obje˘
);

54 
InôImage
(
IMAGE
 *
obje˘
);

55 
VîtiˇlLöe
(
IMAGE
 *
obje˘
);

56 
FømeDiff
(*
Y_vÆue
, 
IMAGE
* 
obje˘
);

58 
IMAGE
 
obje˘
;

	@PC_CENTRIST/DetectFrame.c

1 
	~"Dëe˘Føme.h
"

3 
IMAGE
 
	gObje˘
;

6 
	$Dëe˘Føme
(* 
buf„r
, 
‰ame_num
)

8 
IMAGE
 *
obje˘
 = &
Obje˘
;

10 if(
‰ame_num
 == 0)

11 
	`InôImage
(
obje˘
);

13 
	`FømeCíåi°
(
buf„r
, 
obje˘
);

14 
	`FømeDiff
(
buf„r
, 
obje˘
);

15 
obje˘
->
‰ame_num
++;

17 
i
 = 0;

18 
ª˘
 
ªsu…
 = {0,0,0,0};

19 
ª˘
 
maxRe˘
 = {
INT_MAX
, 0, 
INT_MIN
, 
FRAME_HEIGHT
};

26 
ªsu…_Êag
 = 0;

28 if(
obje˘
->
ªcNum
 =0 && obje˘->
˚nRecNum
 != 0)

30 
i
 = 0; i < 
obje˘
->
˚nRecNum
; i++)

32 
ª˘
 
ôem
 = 
obje˘
->
˚nCo‹d
[
i
];

33 
ªsu…
.
x1
 +
ôem
.x1;

34 
ªsu…
.
y1
 +
ôem
.y1;

35 
ªsu…
.
x2
 +
ôem
.x2;

36 
ªsu…
.
y2
 +
ôem
.y2;

37 if(
maxRe˘
.
x1
 > 
ôem
.x1) maxRect.x1 = item.x1;

38 if(
maxRe˘
.
x2
 < 
ôem
.x2) maxRect.x2 = item.x2;

40 
ªsu…
.
x1
 =Ñesu….x1/
obje˘
->
˚nRecNum
;

41 
ªsu…
.
y1
 =Ñesu….y1/
obje˘
->
˚nRecNum
;

42 
ªsu…
.
x2
 =Ñesu….x2/
obje˘
->
˚nRecNum
;

43 
ªsu…
.
y2
 =Ñesu….y2/
obje˘
->
˚nRecNum
;

45 
ªsu…_Êag
 = 1;

46 }if(
obje˘
->
ªcNum
 != 0)

48 
À·
 = 
obje˘
->
co‹dö©e
[0].
x1
;

49 
right
 = 
obje˘
->
co‹dö©e
[obje˘->
ªcNum
-1].
x2
;

51 
num
 = 0;

52 
i
 = 0; i < 
obje˘
->
˚nRecNum
; i++)

54 
ª˘
 
ôem
 = 
obje˘
->
˚nCo‹d
[
i
];

55 if(
ôem
.
x1
 > (
À·
 - 
DETECT_GAP
Ë&& iãm.
x2
 < (
right
 + DETECT_GAP))

57 
ªsu…
.
x1
 +
ôem
.x1;

58 
ªsu…
.
y1
 +
ôem
.y1;

59 
ªsu…
.
x2
 +
ôem
.x2;

60 
ªsu…
.
y2
 +
ôem
.y2;

61 
num
++;

63 if(
maxRe˘
.
x1
 > 
ôem
.x1) maxRect.x1 = item.x1;

64 if(
maxRe˘
.
x2
 < 
ôem
.x2) maxRect.x2 = item.x2;

68 if(
num
 > 0)

70 
ªsu…
.
x1
 =Ñesu….x1/
num
;

71 
ªsu…
.
x2
 =Ñesu….x2/
num
;

72 
ªsu…
.
y1
 =Ñesu….y1/
num
;

73 
ªsu…
.
y2
 =Ñesu….y2/
num
;

75 
ªsu…_Êag
 = 3;

78 
ªsu…
.
x1
 = 
obje˘
->
co‹dö©e
[0].x1;

79 
ªsu…
.
x2
 = 
obje˘
->
co‹dö©e
[obje˘->
ªcNum
-1].x2;

80 
ªsu…
.
y1
 = 0;

81 
ªsu…
.
y2
 = 
FRAME_HEIGHT
;

83 if(
maxRe˘
.
x1
 > 
ªsu…
.x1) maxRect.x1 =Ñesult.x1;

84 if(
maxRe˘
.
x2
 < 
ªsu…
.x2) maxRect.x2 =Ñesult.x2;

86 
ªsu…_Êag
 = 2;

91 *
iPå
 = (*)
buf„r
;

92 if(
ªsu…
.
x2
 !0 &&Ñesu….
y2
 != 0)

93 
iPå
[0] = 
ªsu…_Êag
;

95 
iPå
[0] = 0;

97 
iPå
[1] = 
ªsu…
.
y1
;

98 
iPå
[2] = 
ªsu…
.
x1
;

99 
iPå
[3] = 
ªsu…
.
y2
;

100 
iPå
[4] = 
ªsu…
.
x2
;

102 
iPå
[5] = 
maxRe˘
.
y1
;

103 
iPå
[6] = 
maxRe˘
.
x1
;

104 
iPå
[7] = 
maxRe˘
.
y2
;

105 
iPå
[8] = 
maxRe˘
.
x2
;

106 
	}
}

	@PC_CENTRIST/DetectFrame.h

1 
	~"CtImage.h
"

2 
	~"svm.h
"

3 
Dëe˘Føme
(* 
buf„r
, 
‰ame_num
);

	@PC_CENTRIST/FrameDiff.c

1 ªø#ö˛udê
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<mem‹y.h
>

4 
	~"CtImage.h
"

6 c⁄° 
	gVERTICAL_THRESH
 = 20;

7 c⁄° 
	gPIXEL_DIFF_THRESH
 = 20;

8 c⁄° 
	gOBJECT_SIZE
 = 5;

9 c⁄° 
	gDETECT_GAP
 = 
PWIDTH
*2/3;

11 
	$InôImage
(
IMAGE
 *
obje˘
)

13 
obje˘
->
has_obje˘
 = 
Ál£
;

14 
obje˘
->
ªcNum
 = 0;

15 
obje˘
->
˚nRecNum
 = 0;

16 
obje˘
->
‰ame_num
 = 0;

17 
	}
}

19 
	$FømeDiff
(*
Y_vÆue
, 
IMAGE
* 
obje˘
)

21 if(
obje˘
->
‰ame_num
 == 0)

23 
	`mem˝y
(
obje˘
->
fú°Image
, 
Y_vÆue
, 
FRAME_WIDTH
*
FRAME_HEIGHT
);

25 
obje˘
->
ªcNum
 = 0;

27 
i
,
j
;

29 if(
obje˘
->
‰ame_num
 >= 1)

31  
i
=0;i<
FRAME_HEIGHT
;i++)

33  
j
=0;j<
FRAME_WIDTH
;++j)

35 if(
	`abs
(
Y_vÆue
[
i
*
FRAME_WIDTH
+
j
] - 
obje˘
->
œ°Image
[i*FRAME_WIDTH+j]Ë> 
PIXEL_DIFF_THRESH
)

36 
obje˘
->
diffImage
[
i
*
FRAME_WIDTH
+
j
] = 255;

37 
obje˘
->
diffImage
[
i
*
FRAME_WIDTH
+
j
] = 0;

42 
	`mem£t
(
obje˘
->
vîtiˇl
,0,
FRAME_WIDTH
*());

44 
ÊagVî
=0,
ãmp
=0;

46  
j
=0;j<
FRAME_WIDTH
;j++)

48  
i
=0;i<
FRAME_HEIGHT
;i++)

50 
obje˘
->
vîtiˇl
[
j
]+=obje˘->
diffImage
[j+
i
*
FRAME_WIDTH
]/255;

53 if(
obje˘
->
vîtiˇl
[
j
]>
VERTICAL_THRESH
 && 
ÊagVî
==0)

55 
ãmp
=
j
;

56 
ÊagVî
=1;

59 if((
obje˘
->
vîtiˇl
[
j
]<=
VERTICAL_THRESH
 && 
ÊagVî
==1 && j<
FRAME_WIDTH
-1)||(j==FRAME_WIDTH-1 && flagVer==1))

61 if((
j
-
ãmp
)>
OBJECT_SIZE
 && 
obje˘
->
ªcNum
 < 
COOR_SIZE
-4)

63 
obje˘
->
co‹dö©e
[obje˘->
ªcNum
].
x1
 = 
ãmp
;

64 
obje˘
->
co‹dö©e
[obje˘->
ªcNum
].
x2
 = 
j
;

65 
obje˘
->
co‹dö©e
[obje˘->
ªcNum
].
y1
 = 0;

66 
obje˘
->
co‹dö©e
[obje˘->
ªcNum
].
y2
 = 
FRAME_HEIGHT
;

67 
obje˘
->
ªcNum
++;

69 
ÊagVî
=0;

75 
	`mem˝y
(
obje˘
->
œ°Image
, 
Y_vÆue
, 
FRAME_WIDTH
*
FRAME_HEIGHT
);

76 
	}
}

	@PC_CENTRIST/param.h

1 #i‚de‡
_PARAM_H_


2 
	#_PARAM_H_


	)

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<m©h.h
>

7 
	#DIM
 6144

	)

8 
	#SCALE
 128

	)

10 
	#THRESH
 10

	)

12 
	#PHEIGHT
 72

	)

13 
	#PWIDTH
 52

	)

15 
	#FRAME_WIDTH
 256

	)

16 
	#FRAME_HEIGHT
 144

	)

17 
	#COOR_SIZE
 200

	)

19 
	#åue
 1

	)

20 
	#Ál£
 0

	)

	@PC_CENTRIST/svm.c

1 
	~<m©h.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<˘y≥.h
>

5 
	~<Êﬂt.h
>

6 
	~<°rög.h
>

7 
	~<°d¨g.h
>

8 
	~"svm.h
"

9 
	~"∑øm.h
"

11 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

13 c⁄° 
	gm_sˇÀ_øtio
 = 
SCALE
*SCALE;

15 *
Fótuª_Mö
;

16 *
Fótuª_Max
;

18 
	$lﬂdFótuª
(c⁄° *
„©uª_fûe_«me
)

20 
löe
 = 0;

21 
i
 = 0;

22 
FILE
 *
Â
 = 
	`f›í
(
„©uª_fûe_«me
,"rb");

23 if(
Â
==
NULL
)

25 
	`Ârötf
(
°dîr
, "Eº‹: InvÆid fótuªÑ™gêfûe-->%s\n", 
„©uª_fûe_«me
);

26 
	`exô
(-1);

29 
Fótuª_Mö
 = 
	`MÆloc
(, 
DIM
);

30 
Fótuª_Max
 = 
	`MÆloc
(, 
DIM
);

32 
i
 = 0; i < 
DIM
;)

34 
	`fsˇnf
(
Â
, "%d %d %d", &
löe
, &
Fótuª_Mö
[
i
], &
Fótuª_Max
[i]);

36 if(
löe
 !++
i
)

38 
	`Ârötf
(
°dîr
, "Missög %d dim fótuªÑ™ge\n", 
i
);

39 
	`exô
(-1);

43 
	`f˛o£
(
Â
);

44 
	}
}

47 
	$k_fun˘i⁄
(c⁄° 
svm_node
 *
x
, c⁄° svm_nodê*
y
)

49 
sum
 = 0;

50 
i
 = 0;

51 
i
 < 
DIM
)

53 
d
 = 
x
[
i
] - 
y
[i];

54 
sum
 +
d
*d;

55 ++
i
;

57  
sum
;

58 
	}
}

60 
	$svm_¥edi˘_vÆues
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
, * 
dec_vÆues
)

62 
i
;

63 
ƒ_˛ass
 = 
modñ
->nr_class;

64 
l
 = 
modñ
->l;

66 *
kvÆue
 = 
	`MÆloc
(,
l
);

67 
i
=0;i<
l
;i++)

69 
kvÆue
[
i
] = 
	`exp
(-
modñ
->
gamma
*
	`k_fun˘i⁄
(
x
,modñ->
SV
[i])/
m_sˇÀ_øtio
);

71 *
°¨t
 = 
	`MÆloc
(,
ƒ_˛ass
);

72 
°¨t
[0] = 0;

73 
i
=1;i<
ƒ_˛ass
;i++)

74 
°¨t
[
i
] = sèπ[i-1]+
modñ
->
nSV
[i-1];

76 
p
=0, 
j
;

77 
i
=0;i<
ƒ_˛ass
;i++)

78  
j
=
i
+1;j<
ƒ_˛ass
;j++)

80 
sum
 = 0;

81 
si
 = 
°¨t
[
i
];

82 
sj
 = 
°¨t
[
j
];

83 
ci
 = 
modñ
->
nSV
[
i
];

84 
cj
 = 
modñ
->
nSV
[
j
];

86 
k
;

87 *
c€f1
 = 
modñ
->
sv_c€f
[
j
-1];

88 *
c€f2
 = 
modñ
->
sv_c€f
[
i
];

89 
k
=0;k<
ci
;k++)

90 
sum
 +
c€f1
[
si
+
k
] * 
kvÆue
[si+k];

91 
k
=0;k<
cj
;k++)

92 
sum
 +
c€f2
[
sj
+
k
] * 
kvÆue
[sj+k];

93 
sum
 -
modñ
->
rho
[
p
];

94 
dec_vÆues
[
p
] = 
sum
;

95 
p
++;

98 
	`‰ì
(
kvÆue
);

99 
	`‰ì
(
°¨t
);

101 
	}
}

103 
	$svm_¥edi˘
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
)

105 
i
;

106 
ƒ_˛ass
 = 
modñ
->nr_class;

107 *
dec_vÆues
 = 
	`MÆloc
(, 
ƒ_˛ass
*(nr_class-1)/2);

108 
	`svm_¥edi˘_vÆues
(
modñ
, 
x
, 
dec_vÆues
);

110 *
vŸe
 = 
	`MÆloc
(,
ƒ_˛ass
);

111 
i
=0;i<
ƒ_˛ass
;i++)

112 
vŸe
[
i
] = 0;

113 
pos
=0, 
j
;

114 
i
=0;i<
ƒ_˛ass
;i++)

115  
j
=
i
+1;j<
ƒ_˛ass
;j++)

117 if(
dec_vÆues
[
pos
++] > 0)

118 ++
vŸe
[
i
];

120 ++
vŸe
[
j
];

123 
vŸe_max_idx
 = 0;

124 
i
=1;i<
ƒ_˛ass
;i++)

125 if(
vŸe
[
i
] > vŸe[
vŸe_max_idx
])

126 
vŸe_max_idx
 = 
i
;

127 
	`‰ì
(
vŸe
);

128 
	`‰ì
(
dec_vÆues
);

129  
modñ
->
œbñ
[
vŸe_max_idx
];

131 
	}
}

133 
svm_modñ
 *
	$svm_lﬂd_modñ
(c⁄° *
modñ_fûe_«me
)

135 
FILE
 *
Â
 = 
	`f›í
(
modñ_fûe_«me
,"rb");

136 if(
Â
==
NULL
)  NULL;

139 
svm_modñ
 *
modñ
 = 
	`MÆloc
(svm_model,1);

140 
modñ
->
rho
 = 
NULL
;

141 
modñ
->
œbñ
 = 
NULL
;

142 
modñ
->
nSV
 = 
NULL
;

144 
i
;

145 
cmd
[81];

148 
	`fsˇnf
(
Â
,"%80s",
cmd
);

149 if(
	`°rcmp
(
cmd
,"gamma")==0)

150 
	`fsˇnf
(
Â
,"%lf",&
modñ
->
gamma
);

151 if(
	`°rcmp
(
cmd
,"nr_class")==0)

152 
	`fsˇnf
(
Â
,"%d",&
modñ
->
ƒ_˛ass
);

153 if(
	`°rcmp
(
cmd
,"total_sv")==0)

154 
	`fsˇnf
(
Â
,"%d",&
modñ
->
l
);

155 if(
	`°rcmp
(
cmd
,"rho")==0)

157 
n
 = 
modñ
->
ƒ_˛ass
 * (model->nr_class-1)/2;

158 
modñ
->
rho
 = 
	`MÆloc
(,
n
);

159  
i
=0;i<
n
;i++)

160 
	`fsˇnf
(
Â
,"%lf",&
modñ
->
rho
[
i
]);

162 if(
	`°rcmp
(
cmd
,"label")==0)

164 
n
 = 
modñ
->
ƒ_˛ass
;

165 
modñ
->
œbñ
 = 
	`MÆloc
(,
n
);

166  
i
=0;i<
n
;i++)

167 
	`fsˇnf
(
Â
,"%d",&
modñ
->
œbñ
[
i
]);

169 if(
	`°rcmp
(
cmd
,"nr_sv")==0)

171 
n
 = 
modñ
->
ƒ_˛ass
;

172 
modñ
->
nSV
 = 
	`MÆloc
(,
n
);

173  
i
=0;i<
n
;i++)

174 
	`fsˇnf
(
Â
,"%d",&
modñ
->
nSV
[
i
]);

176 if(
	`°rcmp
(
cmd
,"SV")==0)

180 
c
 = 
	`gëc
(
Â
);

181 if(
c
==
EOF
 || c=='\n') ;

187 
	`Ârötf
(
°dîr
,"unknow¿ãxàö modñ fûe: [%s]\n",
cmd
);

188 
	`‰ì
(
modñ
->
rho
);

189 
	`‰ì
(
modñ
->
œbñ
);

190 
	`‰ì
(
modñ
->
nSV
);

191 
	`‰ì
(
modñ
);

192  
NULL
;

198 
ñemíts
 = 0;

199 
pos
 = 
	`·ñl
(
Â
);

203 
c
 = 
	`fgëc
(
Â
);

204 
c
)

209 ++
ñemíts
;

211 
EOF
:

212 
out
;

217 
out
:

218 
	`f£ek
(
Â
,
pos
,
SEEK_SET
);

220 
m
 = 
modñ
->
ƒ_˛ass
 - 1;

221 
l
 = 
modñ
->l;

222 
modñ
->
sv_c€f
 = 
	`MÆloc
(*,
m
);

224 
i
=0;i<
m
;i++)

225 
modñ
->
sv_c€f
[
i
] = 
	`MÆloc
(,
l
);

226 
modñ
->
SV
 = 
	`MÆloc
(
svm_node
*,
l
);

227 
svm_node
 *
x_•a˚
=
NULL
;

228 if(
l
>0Ë
x_•a˚
 = 
	`MÆloc
(
svm_node
,
ñemíts
);

230 
j
=0, 
k
;

231 
i
=0;i<
l
;i++)

233 
modñ
->
SV
[
i
] = &
x_•a˚
[
j
];

234  
k
=0;k<
m
;k++)

235 
	`fsˇnf
(
Â
,"%lf",&
modñ
->
sv_c€f
[
k
][
i
]);

238 
c
;

240 
c
 = 
	`gëc
(
Â
);

241 if(
c
=='\n'Ë
out2
;

242 } 
	`is•a˚
(
c
));

243 
	`ungëc
(
c
,
Â
);

244 
	`fsˇnf
(
Â
,":%hd", &(
x_•a˚
[
j
]));

245 ++
j
;

247 
out2
:

250 i‡(
	`„º‹
(
Â
Ë!0 || 
	`f˛o£
(ÂË!0Ë 
NULL
;

252  
modñ
;

253 
	}
}

255 
	$svm_de°roy_modñ
(
svm_modñ
* 
modñ
)

257 
i
;

258 if(
modñ
->
l
 > 0)

259 
	`‰ì
((*)(
modñ
->
SV
[0]));

260  
i
=0;i<
modñ
->
ƒ_˛ass
-1;i++)

261 
	`‰ì
(
modñ
->
sv_c€f
[
i
]);

262 
	`‰ì
(
modñ
->
SV
);

263 
	`‰ì
(
modñ
->
sv_c€f
);

264 
	`‰ì
(
modñ
->
rho
);

265 
	`‰ì
(
modñ
->
œbñ
);

266 
	`‰ì
(
modñ
->
nSV
);

267 
	`‰ì
(
modñ
);

269 
	`¥ötf
("=======free model done========\n");

270 
	}
}

	@PC_CENTRIST/svm.h

1 #i‚de‡
_LIBSVM_H


2 
	#_LIBSVM_H


	)

4 
	#LIBSVM_VERSION
 288

	)

5 
	~"∑øm.h
"

7 
	tsvm_node
;

12 
	ssvm_modñ


14 
	mgamma
;

15 
	mƒ_˛ass
;

16 
	ml
;

17 *
	mrho
;

18 *
	mœbñ
;

19 *
	mnSV
;

20 
svm_node
 **
	mSV
;

21 **
	msv_c€f
;

22 }
	tsvm_modñ
;

24 
svm_de°roy_modñ
(
svm_modñ
 *
modñ
);

25 
svm_modñ
 *
svm_lﬂd_modñ
(c⁄° *
modñ_fûe_«me
);

26 
svm_¥edi˘
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
);

27 
lﬂdFótuª
–c⁄° *
FótuªName
);

29 c⁄° 
m_sˇÀ_øtio
;

	@client_emulator.c

8 
	~<°dio.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<sys/sockë.h
>

11 
	~<√töë/ö.h
>

12 
	~<°rög.h
>

13 
	~<°dlib.h
>

14 
	~<uni°d.h
>

15 
	~<¨∑/öë.h
>

17 
	~"ªcbc_§v.h
"

19 
	#debug_¥ötf
(
x
...Ë
	`¥ötf
(x)

	)

21 
	#COMMAND_HELLO
 "0001"

	)

22 
	#COMMAND_SERVER
 "ffff"

	)

23 
	#COMMAND_CONFIG
 "0006"

	)

24 
	#COMMAND_SWITCHCTRL
 "0008"

	)

25 
	#COMMAND_GETDATA
 "0010"

	)

26 
	#COMMAND_GETDATA_ACK
 "0011"

	)

27 
	#COMMAND_EVENT_VID
 "0021"

	)

28 
	#COMMAND_EVENT_VGA
 "0023"

	)

29 
	#COMMAND_EVENT_AUX
 "0025"

	)

30 
	#COMMAND_CAMHLD_BYPASS
 "0012"

	)

31 
	#COMMAND_BYP_RSP
 "0013"

	)

32 
	#COMMAND_EVENT_UCI
 "0027"

	)

33 
	#COMMAND_EVENT_JPEG
 "0029"

	)

34 
	#COMMAND_EVENT_PIP
 "0031"

	)

35 
	#COMMAND_INTERNAL
 "0000"

	)

37 
	#TYPE_VIDEO
 0

	)

38 
	#TYPE_AUDIO
 1

	)

40 
	$ch¨2hex
(*
§c
, *
hex
, 
Àn
)

42 if(
Àn
 > 8)

44 
	`debug_¥ötf
("theÜength of char isÅooÜarge\n");

47 
i
,
j
;

48 *
hex
 = 0;

49 
i
 = 0;ò< 
Àn
; i++)

51 
j
 = 
Àn
 - 
i
 - 1;

52 *
hex
 &(~(0x‡<< (
j
*4)));

53 if((
§c
[
i
]>='0') && (src[i]<='9'))

55 *
hex
 |(
§c
[
i
]-0x30Ë<< (
j
*4);

57 if((
§c
[
i
]>='a') && (src[i]<='z'))

59 *
hex
 |(
§c
[
i
]-0x57Ë<< (
j
*4);

61 if((
§c
[
i
]>='A') && (src[i]<='Z'))

63 *
hex
 |(
§c
[
i
]-0x37Ë<< (
j
*4);

68 
	}
}

70 
	$add_©å_ch¨
(
t_cmd
 *
cmd
, *
«me
, *
vÆue
)

72 
d©Æí
[
DATA_LEN_SIZE
+1];

73 
	`•rötf
(
cmd
->
cmd_p
, "%01x%04x%s%s", 
	`°æí
(
«me
), såÀn(
vÆue
),Çame, value);

75 
cmd
->
cmd_p
 +(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
	`°æí
(
«me
Ë+ såÀn(
vÆue
));

76 
	`•rötf
(
d©Æí
, "%04x", 
cmd
->
cmd_p
-cmd->
d©a
);

77 
	`mem˝y
(
cmd
->
d©a_Àn
, 
d©Æí
, 
DATA_LEN_SIZE
);

78 
	}
}

80 
	$add_©å_öt
(
t_cmd
 *
cmd
, *
«me
, 
vÆue
)

82 
c
[10];

83 
	`mem£t
(
c
, 0, (c));

84 
	`•rötf
(
c
, "%x",
vÆue
);

85 
	`add_©å_ch¨
(
cmd
, 
«me
, 
c
);

86 
	}
}

88 
	$add_©å_bö
(
t_cmd
 *
cmd
, *
«me
, *
vÆue
, 
vÆuñí
)

90 
d©Æí
[
DATA_LEN_SIZE
+1];

91 
	`•rötf
(
cmd
->
cmd_p
, "%01x%04x%s", 
	`°æí
(
«me
), 
vÆuñí
,Çame);

93 
cmd
->
cmd_p
 +(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
	`°æí
(
«me
));

94 
	`mem˝y
(
cmd
->
cmd_p
, 
vÆue
, 
vÆuñí
);

95 
cmd
->
cmd_p
 +
vÆuñí
;

96 
	`•rötf
(
d©Æí
, "%04x", 
cmd
->
cmd_p
-cmd->
d©a
);

97 
	`mem˝y
(
cmd
->
d©a_Àn
, 
d©Æí
, 
DATA_LEN_SIZE
);

98 
	}
}

100 
	$fûl_cmd_hódî
(
t_cmd
 *
cmd
, *
cmd_p
)

102 
cmd
->
vîsi⁄
 = cmd->
fuŒbuf
;

103 
cmd
->cmd = &cmd->
fuŒbuf
[2];

104 
cmd
->
d©a_Àn
 = &cmd->
fuŒbuf
[6];

105 
cmd
->
d©a
 = &cmd->
fuŒbuf
[10];

106 
cmd
->
cmd_p
 =cmd->
d©a
;

107 
	`mem£t
(
cmd
, 0, (cmd));

108 
	`mem˝y
(
cmd
->
vîsi⁄
, 
COMMAND_VERSION
, 
VERSION_SIZE
);

109 
	`mem˝y
(
cmd
->cmd, 
cmd_p
, 
CMD_SIZE
);

110 
	}
}

113 
	$MsgDump
(*
msg
)

115 
buf
[
CMD_BUFSIZE
];

116 
Àn
;

117 *
±r
, *
vîsi⁄
, *
comm™d
, *
d©a_Àn
;

119 
	`debug_¥ötf
("\n");

120 
	`debug_¥ötf
("******************************************************************\n");

122 
vîsi⁄
 = 
msg
;

123 
comm™d
 = &
msg
[2];

124 
d©a_Àn
 = &
msg
[6];

125 
±r
 = &
msg
[10];

127 
	`mem˝y
(
buf
, 
vîsi⁄
, 
VERSION_SIZE
);

128 
buf
[
VERSION_SIZE
]='\0';

129 if(
	`°rcmp
(
buf
, "01")){

130 
	`debug_¥ötf
("Wrong msg format\n");

133 
	`debug_¥ötf
("Msg vîsi⁄: %s\n", 
buf
);

135 
	`mem˝y
(
buf
, 
comm™d
, 
CMD_SIZE
);

136 
buf
[
CMD_SIZE
] = '\0';

137 
	`debug_¥ötf
("Comm™d: %s\n", 
buf
);

139 
	`ch¨2hex
(
d©a_Àn
, &
Àn
, 
DATA_LEN_SIZE
);

140 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

142 
Àn
){

143 
«me_Àn
, 
vÆue_Àn
;

145 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

146 
±r
++;

148 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

149 
±r
 += 4;

151 
	`mem˝y
(
buf
, 
±r
, 
«me_Àn
);

152 
buf
[
«me_Àn
] = '\0';

153 
	`debug_¥ötf
("%s(öÜígth o‡%d): ", 
buf
, 
«me_Àn
);

154 
±r
 +
«me_Àn
;

156 
	`mem˝y
(
buf
, 
±r
, 
vÆue_Àn
);

157 
buf
[
vÆue_Àn
] = '\0';

158 
±r
 +
vÆue_Àn
;

159 
	`debug_¥ötf
("%s(öÜígth o‡%d)\n", 
buf
, 
vÆue_Àn
);

161 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

164 
	`debug_¥ötf
("******************************************************************\n");

165 
	`debug_¥ötf
("\n");

166 
	}
}

170 
	$gëMsg
(
sock
, * 
buf
)

172 
ªt
;

173 
Àn
;

175 
ªt
 = 
	`ªcv
(
sock
, 
buf
, 10, 
MSG_PEEK
);

177 if(
ªt
<=0){

181 if(
ªt
<10){

185 
	`ch¨2hex
(&
buf
[6], &
Àn
, 
DATA_LEN_SIZE
);

186 
Àn
 +
PACKET_HEADER_SIZE
;

188 
ªt
 = 
	`ªcv
(
sock
, 
buf
, 
Àn
, 
MSG_PEEK
);

190 if(
ªt
<
Àn
){

194 
	`ªcv
(
sock
, 
buf
, 
Àn
, 0);

196  
Àn
;

197 
	}
}

199 
	$gëMsg
(
sock
, * 
buf
, *
numbî_ö_buf
)

201 
ªt
;

202 
Àn
;

204 if(*
numbî_ö_buf
<10){

205 
nbuf„ªd
 = *
numbî_ö_buf
;

206 
¡‹ód
 = 10-
nbuf„ªd
;

207 
ªt
 = 
	`ªcv
(
sock
, &
buf
[
nbuf„ªd
], 
¡‹ód
, 0);

208 if(
ªt
<=0){

209 *
numbî_ö_buf
 = 0;

213 *
numbî_ö_buf
+=
ªt
;

217 if(*
numbî_ö_buf
>=10){

218 
	`ch¨2hex
(&
buf
[6], &
Àn
, 
DATA_LEN_SIZE
);

219 
Àn
 +
PACKET_HEADER_SIZE
;

220 
nbuf„ªd
 = *
numbî_ö_buf
;

221 
¡‹ód
 = 
Àn
-
nbuf„ªd
;

222 
ªt
 = 
	`ªcv
(
sock
, &
buf
[
nbuf„ªd
], 
¡‹ód
, 0);

223 if(
ªt
<=0){

224 *
numbî_ö_buf
 = 0;

228 *
numbî_ö_buf
+=
ªt
;

232 if(*
numbî_ö_buf
<10){

236 
	`ch¨2hex
(&
buf
[6], &
Àn
, 
DATA_LEN_SIZE
);

237 
Àn
 +
PACKET_HEADER_SIZE
;

238 if(*
numbî_ö_buf
<
Àn
){

242 *
numbî_ö_buf
 = 0;

243  
Àn
;

246 
	}
}

250 
	$EvítVGA
(
ch™ge
, 
sock
)

252 
t_cmd
 
cmd
;

253 
size_t
 
size
;

254 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_EVENT_VGA
);

255 
	`add_©å_öt
(&
cmd
, "Ch™ged", 
ch™ge
);

256 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

258 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

259 
size
 +
PACKET_HEADER_SIZE
;

260 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

261 
	`debug_¥ötf
("EventVGA msg sent\n");

262 
	}
}

264 
	$EvítVid
(
numbî
, 
sock
)

266 
t_cmd
 
cmd
;

267 
size_t
 
size
;

268 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_EVENT_VID
);

269 
	`add_©å_öt
(&
cmd
, "Dëe˘ed", 
numbî
);

271 if(
numbî
){

272 
	`add_©å_öt
(&
cmd
, "AvgTop", 36);

273 
	`add_©å_öt
(&
cmd
, "AvgLeft", 100);

274 
	`add_©å_öt
(&
cmd
, "AvgBottom", 108);

275 
	`add_©å_öt
(&
cmd
, "AvgRight", 152);

278 if(
numbî
==2){

279 
	`add_©å_öt
(&
cmd
, "MaxTop", 36);

280 
	`add_©å_öt
(&
cmd
, "MaxLeft", 48);

281 
	`add_©å_öt
(&
cmd
, "MaxBottom", 108);

282 
	`add_©å_öt
(&
cmd
, "MaxRight", 204);

284 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

286 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

287 
size
 +
PACKET_HEADER_SIZE
;

288 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

289 
	`debug_¥ötf
("EventVid msg sent\n");

290 
	}
}

292 
	$EvítAux
(
numbî
, 
sock
)

294 
t_cmd
 
cmd
;

295 
size_t
 
size
;

296 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_EVENT_AUX
);

298 
	`add_©å_öt
(&
cmd
, "Channel", 0);

299 
	`add_©å_öt
(&
cmd
, "T¨gës", 
numbî
);

300 if(!
numbî
){

301 
	`add_©å_öt
(&
cmd
, "MaxTop", 0);

302 
	`add_©å_öt
(&
cmd
, "MaxLeft", 0);

303 
	`add_©å_öt
(&
cmd
, "MaxBottom", 0);

304 
	`add_©å_öt
(&
cmd
, "MaxRight", 0);

306 if(
numbî
==1){

307 
	`add_©å_öt
(&
cmd
, "MaxTop", 72);

308 
	`add_©å_öt
(&
cmd
, "MaxLeft", 420);

309 
	`add_©å_öt
(&
cmd
, "MaxBottom", 144);

310 
	`add_©å_öt
(&
cmd
, "MaxRight", 420);

313 
	`add_©å_öt
(&
cmd
, "MaxTop", 72);

314 
	`add_©å_öt
(&
cmd
, "MaxLeft", 320);

315 
	`add_©å_öt
(&
cmd
, "MaxBottom", 144);

316 
	`add_©å_öt
(&
cmd
, "MaxRight", 420);

319 
	`add_©å_öt
(&
cmd
, "Channel", 1);

320 
	`add_©å_öt
(&
cmd
, "T¨gës", 
numbî
);

321 if(!
numbî
){

322 
	`add_©å_öt
(&
cmd
, "MaxTop", 0);

323 
	`add_©å_öt
(&
cmd
, "MaxLeft", 0);

324 
	`add_©å_öt
(&
cmd
, "MaxBottom", 0);

325 
	`add_©å_öt
(&
cmd
, "MaxRight", 0);

327 if(
numbî
==1){

328 
	`add_©å_öt
(&
cmd
, "MaxTop", 72);

329 
	`add_©å_öt
(&
cmd
, "MaxLeft", 360);

330 
	`add_©å_öt
(&
cmd
, "MaxBottom", 144);

331 
	`add_©å_öt
(&
cmd
, "MaxRight", 360);

334 
	`add_©å_öt
(&
cmd
, "MaxTop", 72);

335 
	`add_©å_öt
(&
cmd
, "MaxLeft", 360);

336 
	`add_©å_öt
(&
cmd
, "MaxBottom", 144);

337 
	`add_©å_öt
(&
cmd
, "MaxRight", 440);

340 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

342 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

343 
size
 +
PACKET_HEADER_SIZE
;

344 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

345 
	`debug_¥ötf
("EventVid msg sent\n");

346 
	}
}

348 
	$CamhldR•
(*
byã
, 
Àn
, 
sock
)

350 
t_cmd
 
cmd
;

351 
size_t
 
size
;

353 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_BYP_RSP
);

354 
	`add_©å_öt
(&
cmd
, "Channel", 0);

355 
	`add_©å_bö
(&
cmd
, "RawByãs", 
byã
, 
Àn
);

356 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

358 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

359 
size
 +
PACKET_HEADER_SIZE
;

360 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

361 
	`debug_¥ötf
("EventVid msg sent\n");

362 
	}
}

364 
	$CamhldAck
(
sock
)

366 
byã
[] = {0x90, 0x41, 0xff};

367 
	`CamhldR•
(
byã
, 3, 
sock
);

368 
	}
}

370 
	$CamhldC∂
(
sock
)

372 
byã
[] = {0x90, 0x51, 0xff};

373 
	`CamhldR•
(
byã
, 3, 
sock
);

374 
	}
}

377 
	$maö
(
¨gc
, **
¨gv
)

379 
p‹t
 = 2000;

380 
sock_˛õ¡
;

382 
sockaddr_ö
 
˛i
;

383 
fd_£t
 
fd§
;

385 
ªt
;

387 if(
¨gc
!=2){

388 
	`debug_¥ötf
("u£: %†IP_addr\n", 
¨gv
[0]);

392 
˛i
.
sö_Ámûy
 = 
AF_INET
;

393 
˛i
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

394 
˛i
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
¨gv
[1]);

396 
sock_˛õ¡
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

397 if(
sock_˛õ¡
<0){

398 
	`debug_¥ötf
("open socketÉrror\n");

402 
	`debug_¥ötf
("connectingÅo server...");

404 if(
	`c⁄√˘
(
sock_˛õ¡
, (
sockaddr
*)&
˛i
, (cli))<0){

405 
	`debug_¥ötf
("connectÉrror\n");

408 
	`debug_¥ötf
("connected\n");

410 
buf
[
CMD_BUFSIZE
];

411 
numbî_ö_buf
=0;

415 
	`¥ötf
("Command:\n");

416 
	`¥ötf
("[0] ExitÖrogram\n");

417 
	`¥ötf
("[1] VGAUNCHG\n");

418 
	`¥ötf
("[2] VGACHG\n");

419 
	`¥ötf
("[3] TEACHER_NONE\n");

420 
	`¥ötf
("[4] TEACHER_ONE\n");

421 
	`¥ötf
("[5] TEACHER_MULTIPLE\n");

422 
	`¥ötf
("[6] STUDENT_NONE\n");

423 
	`¥ötf
("[7] STUDENT_ONE\n");

424 
	`¥ötf
("[8] STUDENT_MULTIPLE\n");

425 
	`¥ötf
("[9] CAM FEED BACK\n");

427 
	`FD_ZERO
(&
fd§
);

428 
	`FD_SET
(
sock_˛õ¡
, &
fd§
);

429 
	`FD_SET
(0, &
fd§
);

431 
maxfd
 = (
sock_˛õ¡
>0)?sock_client:0;

437 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, NULL);

439 if(
ªt
<0){

440 
	`debug_¥ötf
("selectÉrror\n");

441 
	`exô
(1);

444 if(
ªt
==0){

448 if(
	`FD_ISSET
(
sock_˛õ¡
, &
fd§
)){

449 
	`debug_¥ötf
("socketÑeadable\n");

451 
MsgGŸ
;

453 
MsgGŸ
 = 
	`gëMsg
(
sock_˛õ¡
, 
buf
, &
numbî_ö_buf
);

455 if(
MsgGŸ
<0){

456 
	`debug_¥ötf
("socketÑecvÉrror\n");

457 
	`˛o£
(
sock_˛õ¡
);

458 
sock_˛õ¡
 = 0;

463 if(
MsgGŸ
 == 0){

464 
	`debug_¥ötf
("uncompleted message\n");

467 
	`MsgDump
(
buf
);

471 if(
	`FD_ISSET
(0, &
fd§
)){

473 
sbuf
[10];

474 
	`fgës
(
sbuf
, 10, 
°dö
);

475 
sbuf
[
	`°æí
(sbuf)-1]='\0';

477 if(!
	`°rcmp
(
sbuf
, "0")){

478 if(
sock_˛õ¡
){

479 
	`˛o£
(
sock_˛õ¡
);

484 if(!
	`°rcmp
(
sbuf
, "1")){

485 
	`EvítVGA
(0, 
sock_˛õ¡
);

488 if(!
	`°rcmp
(
sbuf
, "2")){

489 
	`EvítVGA
(1, 
sock_˛õ¡
);

492 if(!
	`°rcmp
(
sbuf
, "3")){

493 
	`EvítVid
(0, 
sock_˛õ¡
);

496 if(!
	`°rcmp
(
sbuf
, "4")){

497 
	`EvítVid
(1, 
sock_˛õ¡
);

500 if(!
	`°rcmp
(
sbuf
, "5")){

501 
	`EvítVid
(2, 
sock_˛õ¡
);

504 if(!
	`°rcmp
(
sbuf
, "6")){

505 
	`EvítAux
(0, 
sock_˛õ¡
);

508 if(!
	`°rcmp
(
sbuf
, "7")){

509 
	`EvítAux
(1, 
sock_˛õ¡
);

512 if(!
	`°rcmp
(
sbuf
, "8")){

513 
	`EvítAux
(2, 
sock_˛õ¡
);

516 if(!
	`°rcmp
(
sbuf
, "9")){

517 
	`CamhldAck
(
sock_˛õ¡
);

518 
	`CamhldC∂
(
sock_˛õ¡
);

524 
	}
}

	@datafifo.c

8 
	~"π_gíîic.h
"

9 
	~"d©afifo.h
"

14 
t_d©afifo_ôem
 * 
	$d©afifo_Æloc
(
t_d©afifo
 *
df
)

16 
i
;

19 
	`±hªad_muãx_lock
(&
df
->
muãx
);

21 
i
=0; i < 
df
->
ôem_˙t
; i++){

22 if(
df
->
ôems
[
i
].
°©us
 =
DATAFIFO_ITEM_STATUS_INIT
){

23 
df
->
ôems
[
i
].
¨g
.
Êags
 = 0;

24 
df
->
ôems
[
i
].
¨g
.
Àn
 = 0;

25 
df
->
ôems
[
i
].
√xt
 = 
NULL
;

26 
df
->
ôems
[
i
].
¥ev
 = 
NULL
;

27 
df
->
ôems
[
i
].
ªf
 = 
NULL
;

28 
df
->
ôems
[
i
].
ªf˙t
 = 0;

30 
df
->
ôems
[
i
].
°©us
 = 
DATAFIFO_ITEM_STATUS_FILLING
;

31 
	`±hªad_muãx_u∆ock
(&
df
->
muãx
);

32  &
df
->
ôems
[
i
];

36 
	`±hªad_c⁄d_waô
(&
df
->
fuŒ_c⁄d
, &df->
muãx
);

39  
NULL
;

40 
	}
}

44 
	$d©afifo_li°_addèû
(
t_d©afifo
 *
df
, 
t_d©afifo_ôem
 * 
f
)

46 
	`±hªad_muãx_lock
(&
df
->
muãx
);

48 if(
df
->
li°hód
 =
NULL
){

49 
df
->
li°hód
 = 
f
;

50 
df
->
li°èû
 = 
f
;

52 
df
->
li°èû
->
√xt
 = 
f
;

53 
f
->
¥ev
 = 
df
->
li°èû
 ;

54 
df
->
li°èû
 = 
f
;

57 
	`±hªad_c⁄d_brﬂdˇ°
(&
df
->
c⁄d
);

58 
	`±hªad_muãx_u∆ock
(&
df
->
muãx
);

59 
	}
}

63 
	$d©afifo_ªmove_hód_öã∫Æ_ªqlock
(
s_d©afifo
 *
df
)

65 
t_d©afifo_ôem
 * 
‹ig
 = 
df
->
li°hód
;

67 
df
->
li°hód
 = 
‹ig
->
√xt
;

69 if(
df
->
li°hód
 =
NULL
){

71 
df
->
li°èû
 = 
NULL
;

73 
df
->
li°hód
->
¥ev
 = 
NULL
;

77 
‹ig
->
°©us
 = 
DATAFIFO_ITEM_STATUS_INIT
;

79 
	`±hªad_c⁄d_brﬂdˇ°
(&
df
->
fuŒ_c⁄d
);

80 
	}
}

82 
	$d©afifo_¥odu˚r_ªmove_check
(
t_d©afifo
 * 
df
)

84 
	`±hªad_muãx_lock
(&
df
->
muãx
);

86 if(! 
df
->
li°hód
){

89 if(
df
->
li°hód
->
°©us
 !
DATAFIFO_ITEM_STATUS_DOING
){

92 if(
df
->
li°hód
->
ªf˙t
 != 0){

95 #ifde‡
DATAFIFO_DEBUG


96 
	`¥ötf
("P-");

99 
	`d©afifo_ªmove_hód_öã∫Æ_ªqlock
(
df
);

101 
	`±hªad_muãx_u∆ock
(&
df
->
muãx
);

104 
	}
}

106 
	$d©afifo_addto_c⁄sumîs
(
t_d©afifo
 * 
df
, 
t_d©afifo_ôem
 *
ôem
)

108 
t_d©afifo_c⁄
 * 
c⁄
 = 
df
->
c⁄sumîs
;

110 
c⁄
){

111 
t_d©afifo_ôem
 * 
cur
 = 
	`d©afifo_Æloc
(
c⁄
->
d©afifo
);

114 
cur
->
ªf
 = 
ôem
;

115 
cur
->
√xt
 = 
NULL
;

116 
cur
->
¥ev
 = 
NULL
;

117 
cur
->
¨g
.
d©a
 = &
ôem
->arg.data[0];

118 
cur
->
¨g
.
Àn
 = 
ôem
->arg.len;

119 
cur
->
¨g
.
Êags
 = 
ôem
->arg.flags;

120 
cur
->
¨g
.
time°amp
 = 
ôem
->arg.timestamp;

121 
cur
->
°©us
 = 
DATAFIFO_ITEM_STATUS_READY
;

123 #ifde‡
DATAFIFO_DEBUG


124 
	`¥ötf
("C+:%x:%x\n", 
c⁄
, 
ôem
);

127 
	`±hªad_muãx_lock
(&
df
->
muãx
);

128 
ôem
->
ªf˙t
 ++;

129 
	`±hªad_muãx_u∆ock
(&
df
->
muãx
);

131 
	`d©afifo_li°_addèû
(
c⁄
->
d©afifo
, 
cur
);

134 
c⁄
 = c⁄->
√xt
;

138 
ôem
->
°©us
 = 
DATAFIFO_ITEM_STATUS_DOING
;

142 
	`d©afifo_¥odu˚r_ªmove_check
(
df
);

145 
	}
}

147 
	$d©afifo_¥odu˚r_d©a_add
(
t_d©afifo
 * 
df
, *
d©a
, 
Àn
, 
Êags
, 
time°amp
)

149 if(
Êags
 & 
FRAME_FLAG_NEWFRAME
){

150 
t_d©afifo_ôem
 * 
cur
 = 
	`d©afifo_Æloc
(
df
);

153 
t_d©afifo_ôem
 * 
ﬁd_ôem
 = 
NULL
;

155 
	`±hªad_muãx_lock
(&
df
->
muãx
);

156 if(
df
->
li°èû
){

157 if(
df
->
li°èû
->
°©us
 =
DATAFIFO_ITEM_STATUS_FILLING
){

158 if(
Êags
 & 
FRAME_FLAG_FIRSTFRAME
){

160 
df
->
li°èû
->
¨g
.
Àn
 = 0;

162 
df
->
li°èû
->
°©us
 = 
DATAFIFO_ITEM_STATUS_READY
;

163 
ﬁd_ôem
 = 
df
->
li°èû
 ;

166 
	`±hªad_muãx_u∆ock
(&
df
->
muãx
);

168 if(
ﬁd_ôem
){

171 
	`d©afifo_addto_c⁄sumîs
(
df
, 
ﬁd_ôem
);

176 if(
Êags
 & 
FRAME_FLAG_FIRSTFRAME
){

177 
cur
->
¨g
.
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

179 if(
Êags
 & 
FRAME_FLAG_KEYFRAME
){

180 
cur
->
¨g
.
Êags
 |
FRAME_FLAG_KEYFRAME
;

184 
cur
->
¨g
.
time°amp
=timestamp;

187 #ifde‡
DATAFIFO_DEBUG


188 
	`¥ötf
("P+");

190 
	`d©afifo_li°_addèû
(
df
, 
cur
);

192 if(
df
->
li°èû
->
°©us
 !
DATAFIFO_ITEM_STATUS_FILLING
){

193 
	`¥ötf
("not first, butÇot filling\n");

199 if(
df
->
li°èû
->
¨g
.
Àn
 +Üí > df->
d©a_maxÀn
){

203 
	`mem˝y
(
df
->
li°èû
->
¨g
.
d©a
 + df->li°èû->¨g.
Àn
, data,Üen);

204 
df
->
li°èû
->
¨g
.
Àn
 +=Üen;

207 if(
Êags
 & 
FRAME_FLAG_FRAMEEND
){

208 
df
->
li°èû
->
°©us
 = 
DATAFIFO_ITEM_STATUS_READY
;

209 
	`d©afifo_addto_c⁄sumîs
(
df
, df->
li°èû
);

213 
	}
}

215 
	$d©afifo_öô
(
t_d©afifo
 *
df
, 
size
, 
˙t
)

217 
ôem_i
;

219 
	`mem£t
(
df
, 0, (
t_d©afifo
));

220 
df
->
d©a_maxÀn
 = 
size
;

221 
df
->
ôem_˙t
 = 
˙t
;

223 
df
->
ôems
 = (
t_d©afifo_ôem
 * )
	`mÆloc
(—_d©afifo_ôemË* 
˙t
);

224 if(
df
->
ôems
 =
NULL
){

225 
	`¥ötf
("alloc datafifo failed\n");

228 
	`mem£t
(
df
->
ôems
, 0, (
t_d©afifo_ôem
Ë* 
˙t
);

230 
ôem_i
 = 0; iãm_ò< 
˙t
; item_i ++){

231 if(
size
){

232 
df
->
ôems
[
ôem_i
].
¨g
.
d©a
 = (*)
	`mÆloc
(
size
 + 8 + 4);

233 if(
df
->
ôems
[
ôem_i
].
¨g
.
d©a
 =
NULL
){

234 
	`¥ötf
("alloc datafifo item failed\n");

237 
	`mem£t
(
df
->
ôems
[
ôem_i
].
¨g
.
d©a
 + 
size
, 0, 8);

239 
df
->
ôems
[
ôem_i
].
°©us
 = 
DATAFIFO_ITEM_STATUS_INIT
;

240 
df
->
ôems
[
ôem_i
].
d©afifo
 = df;

243 
	`±hªad_muãx_öô
(&
df
->
muãx
, 
NULL
);

244 
	`±hªad_c⁄d_öô
(&
df
->
c⁄d
, 
NULL
);

245 
	`±hªad_c⁄d_öô
(&
df
->
fuŒ_c⁄d
, 
NULL
);

247 
	}
}

250 
	$d©afifo_c⁄√˘
(
t_d©afifo
 * 
¥odu˚r
,Å_d©afifÿ* 
c⁄sumî
)

252 
t_d©afifo_c⁄
 * 
c⁄
 = 
	`mÆloc
((t_datafifo_con));

253 if(
c⁄
 =
NULL
){

254 
	`¥ötf
("datafifo_con malloc failed\n");

257 
c⁄
->
d©afifo
 = 
c⁄sumî
;

259 
	`±hªad_muãx_lock
(&
¥odu˚r
->
muãx
);

261 
c⁄
->
√xt
 = 
¥odu˚r
->
c⁄sumîs
;

262 
c⁄
->
¥ev
 = 
NULL
;

263 if(
¥odu˚r
->
c⁄sumîs
 !
NULL
){

264 
¥odu˚r
->
c⁄sumîs
->
¥ev
 = 
c⁄
;

266 
¥odu˚r
->
c⁄sumîs
 = 
c⁄
;

268 
	`±hªad_muãx_u∆ock
(&
¥odu˚r
->
muãx
);

271 
	}
}

273 
	$d©afifo_disc⁄√˘
(
t_d©afifo
 * 
¥odu˚r
,Å_d©afifÿ* 
c⁄sumî
)

275 
	`±hªad_muãx_lock
(&
¥odu˚r
->
muãx
);

277 
t_d©afifo_c⁄
 * 
tmp
 = 
¥odu˚r
->
c⁄sumîs
;

278 
tmp
){

279 if(
tmp
->
d©afifo
 =
c⁄sumî
){

282 
tmp
 =Åmp->
√xt
;

285 if(
tmp
 =
NULL
){

286 
	`¥ötf
("datafifo disconnectÇot found\n");

291 if(
tmp
->
¥ev
 =
NULL
){

292 
¥odu˚r
->
c⁄sumîs
 = 
tmp
->
√xt
;

294 
tmp
->
¥ev
->
√xt
 =Åmp->next;

296 if(
tmp
->
√xt
 !
NULL
){

297 
tmp
->
√xt
->
¥ev
 =Åmp->prev;

300 
	`‰ì
(
tmp
);

302 
	`±hªad_muãx_u∆ock
(&
¥odu˚r
->
muãx
);

305 
	}
}

307 
	$d©afifo_c⁄sumî_ªmove_hód
(
t_d©afifo
 *
df
)

309 #ifde‡
DATAFIFO_DEBUG


310 
	`¥ötf
("C-:%x:%x\n", 
df
, df->
li°hód
->
ªf
);

313 if(
df
->
li°hód
 =
NULL
){

317 
t_d©afifo
 * 
¥odu˚r
 = 
NULL
;

318 if(
df
->
li°hód
->
ªf
){

319 
¥odu˚r
 = 
df
->
li°hód
->
ªf
->
d©afifo
;

322 
	`±hªad_muãx_lock
(&
¥odu˚r
->
muãx
);

323 
df
->
li°hód
->
ªf
->
ªf˙t
 --;

324 
	`±hªad_muãx_u∆ock
(&
¥odu˚r
->
muãx
);

326 if(
¥odu˚r
){

328 
	`d©afifo_¥odu˚r_ªmove_check
(
¥odu˚r
);

331 
	`¥ötf
("consumerÑemove withoutÑef\n");

335 
	`±hªad_muãx_lock
(&
df
->
muãx
);

336 
	`d©afifo_ªmove_hód_öã∫Æ_ªqlock
(
df
);

337 
	`±hªad_muãx_u∆ock
(&
df
->
muãx
);

340 
	}
}

342 
	$d©afifo_c⁄sumî_˛ór
(
t_d©afifo
 *
df
)

344 
	`d©afifo_c⁄sumî_ªmove_hód
(
df
) == 0);

345 
	}
}

347 
	$d©afifo_¥öt
(
t_d©afifo
 *
df
)

349 #ifde‡
DATAFIFO_DEBUG


350 
i
;

351 
	`¥ötf
("D©afifo:%08x, iãms:%d\n", 
df
, df->
ôem_˙t
);

352 
i
=0; i < 
df
->
ôem_˙t
; i++){

353 
	`¥ötf
(" Iãm%d: %08x,%d,%08x,%d\n", 
i
, &
df
->
ôems
[i], df->ôems[i].
°©us
, df->ôems[i].
ªf
, df->ôems[i].
ªf˙t
);

355 
	`¥ötf
(" ListHead:\n");

356 
t_d©afifo_ôem
 * 
tmp
 = 
df
->
li°hód
;

357 
tmp
){

358 
	`¥ötf
(" %08x:\n", 
tmp
);

359 
tmp
 =Åmp->
√xt
;

361 
	`¥ötf
(" Muãx: %d\n", 
df
->
muãx
.
vÆue
);

362 
	`¥ötf
(" C⁄d: %d\n", 
df
->
c⁄d
.
vÆue
);

363 
	`¥ötf
(" FuŒC⁄d: %d\n", 
df
->
fuŒ_c⁄d
.
vÆue
);

365 
	}
}

	@datafifo.h

7 #i‚de‡
DATAFIFO_H_


8 
	#DATAFIFO_H_


	)

10 
	#DATAFIFO_ITEM_STATUS_INIT
 0

	)

11 
	#DATAFIFO_ITEM_STATUS_FILLING
 1

	)

12 
	#DATAFIFO_ITEM_STATUS_READY
 2

	)

13 
	#DATAFIFO_ITEM_STATUS_DOING
 3

	)

15 
	#FRAME_FLAG_NEWFRAME
 0x1

	)

16 
	#FRAME_FLAG_FRAMEEND
 0x2

	)

17 
	#FRAME_FLAG_FIRSTFRAME
 0x4

	)

18 
	#FRAME_FLAG_KEYFRAME
 0x8

	)

19 
	#FRAME_FLAG_AUDIOFRM
 0x10

	)

20 
	#FRAME_FLAG_USERDATA
 0x20

	)

21 
	#BIT31
 0x80000000

	)

24 
	ss_d©afifo_ôem


26 
s_d©afifo_ôem
 * 
	m√xt
;

27 
s_d©afifo_ôem
 * 
	m¥ev
;

28 
s_d©afifo
 * 
	md©afifo
;

30 
s_d©afifo_ôem
 * 
	mªf
;

31 
	mªf˙t
;

35 
	m°©us
;

38 * 
	md©a
;

39 
	mÀn
;

40 
	mÊags
;

41 
	mtime°amp
;

42 }
	m¨g
;

43 }
	tt_d©afifo_ôem
;

45 
	ss_d©afifo_c⁄


47 
s_d©afifo
 * 
	md©afifo
;

48 
s_d©afifo_c⁄
 * 
	m√xt
;

49 
s_d©afifo_c⁄
 * 
	m¥ev
;

50 }
	tt_d©afifo_c⁄
;

53 
	ss_d©afifo


55 
	md©a_maxÀn
;

57 
t_d©afifo_ôem
 * 
	môems
;

58 
	môem_˙t
;

60 
t_d©afifo_ôem
 * 
	mli°hód
;

61 
t_d©afifo_ôem
 * 
	mli°èû
;

63 
±hªad_muãx_t
 
	mmuãx
;

64 
±hªad_c⁄d_t
 
	mc⁄d
;

65 
±hªad_c⁄d_t
 
	mfuŒ_c⁄d
;

67 
s_d©afifo_c⁄
 * 
	mc⁄sumîs
;

68 }
	tt_d©afifo
;

70 
d©afifo_öô
(
t_d©afifo
 *
df
, 
size
, 
˙t
);

71 
d©afifo_c⁄√˘
(
t_d©afifo
 *
¥odu˚r
,Å_d©afifÿ* 
c⁄sumî
);

72 
d©afifo_disc⁄√˘
(
t_d©afifo
 * 
¥odu˚r
,Å_d©afifÿ* 
c⁄sumî
);

74 
d©afifo_¥odu˚r_d©a_add
(
t_d©afifo
 * 
df
, *
d©a
, 
Àn
, 
Êags
, 
time°amp
);

76 
d©afifo_c⁄sumî_ªmove_hód
(
t_d©afifo
 *
df
);

77 
d©afifo_c⁄sumî_˛ór
(
t_d©afifo
 *
df
);

79 
	#d©afifo_lock
(
d©afifo
Ë
	`±hªad_muãx_lock
(& (d©afifo)->
muãx
)

	)

80 
	#d©afifo_u∆ock
(
d©afifo
Ë
	`±hªad_muãx_u∆ock
(& (d©afifo)->
muãx
)

	)

81 
	#d©afifo_sig«l
(
d©afifo
Ë
	`±hªad_c⁄d_brﬂdˇ°
(& (d©afifo)->
c⁄d
);

	)

83 
	#d©afifo_waô
(
d©afifo
) \

85 
	`±hªad_muãx_lock
(& (
d©afifo
)->
muãx
); \

86 if(
	`d©afifo_hód
(
d©afifo
Ë!
NULL
 && d©afifo_hód(d©afifo)->
°©us
 =
DATAFIFO_ITEM_STATUS_READY
){ \

87 
	`±hªad_muãx_u∆ock
(& (
d©afifo
)->
muãx
); \

90 
	`±hªad_c⁄d_waô
(& (
d©afifo
)->
c⁄d
, & (d©afifo)->
muãx
); \

91 
	`±hªad_muãx_u∆ock
(& (
d©afifo
)->
muãx
); \

92 }0)

	)

94 
	#d©afifo_hód
(
d©afifo
Ë(d©afifo)->
li°hód


	)

	@jconfig.h

5 
	#HAVE_PROTOTYPES
 1

	)

6 
	#HAVE_UNSIGNED_CHAR
 1

	)

7 
	#HAVE_UNSIGNED_SHORT
 1

	)

11 
	#HAVE_STDDEF_H
 1

	)

12 
	#HAVE_STDLIB_H
 1

	)

13 
	#HAVE_LOCALE_H
 1

	)

22 #ifde‡
_WIN32


23 #i‚de‡
__RPCNDR_H__


24 
	tboﬁón
;

26 
	#HAVE_BOOLEAN


	)

29 #ifde‡
JPEG_INTERNALS


32 
	#INLINE
 
__ölöe__


	)

39 #ifde‡
JPEG_CJPEG_DJPEG


41 
	#BMP_SUPPORTED


	)

42 
	#GIF_SUPPORTED


	)

43 
	#PPM_SUPPORTED


	)

45 
	#TARGA_SUPPORTED


	)

	@jmorecfg.h

24 
	#BITS_IN_JSAMPLE
 8

	)

36 
	#MAX_COMPONENTS
 10

	)

53 #i‡
BITS_IN_JSAMPLE
 == 8

58 #ifde‡
HAVE_UNSIGNED_CHAR


60 
	tJSAMPLE
;

61 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆue))

	)

65 
	tJSAMPLE
;

66 #ifde‡
CHAR_IS_UNSIGNED


67 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆue))

	)

69 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆueË& 0xFF)

	)

74 
	#MAXJSAMPLE
 255

	)

75 
	#CENTERJSAMPLE
 128

	)

80 #i‡
BITS_IN_JSAMPLE
 == 12

85 
	tJSAMPLE
;

86 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆue))

	)

88 
	#MAXJSAMPLE
 4095

	)

89 
	#CENTERJSAMPLE
 2048

	)

100 
	tJCOEF
;

109 #ifde‡
HAVE_UNSIGNED_CHAR


111 
	tJOCTET
;

112 
	#GETJOCTET
(
vÆue
Ë(vÆue)

	)

116 
	tJOCTET
;

117 #ifde‡
CHAR_IS_UNSIGNED


118 
	#GETJOCTET
(
vÆue
Ë(vÆue)

	)

120 
	#GETJOCTET
(
vÆue
Ë((vÆueË& 0xFF)

	)

135 #ifde‡
HAVE_UNSIGNED_CHAR


136 
	tUINT8
;

138 #ifde‡
CHAR_IS_UNSIGNED


139 
	tUINT8
;

141 
	tUINT8
;

147 #ifde‡
HAVE_UNSIGNED_SHORT


148 
	tUINT16
;

150 
	tUINT16
;

155 #i‚de‡
XMD_H


156 
	tINT16
;

161 #i‚de‡
XMD_H


162 #i‚de‡
_BASETSD_H_


163 #i‚de‡
_BASETSD_H


164 #i‚de‡
QGLOBAL_H


165 
	tINT32
;

178 
	tJDIMENSION
;

180 
	#JPEG_MAX_DIMENSION
 65500L

	)

191 
	#METHODDEF
(
ty≥
Ë
	)
ty≥

193 
	#LOCAL
(
ty≥
Ë
	)
ty≥

195 
	#GLOBAL
(
ty≥
Ë
	)
ty≥

197 
	#EXTERN
(
ty≥
Ë
	)
ty≥

206 #ifde‡
HAVE_PROTOTYPES


207 
	#JMETHOD
(
ty≥
,
mëhod«me
,
¨gli°
Ë
	`ty≥
 (*mëhod«meË
	)
¨gli°

209 
	#JMETHOD
(
ty≥
,
mëhod«me
,
¨gli°
Ë
	`ty≥
 (*mëhod«meË()

	)

228 #i‚de‡
HAVE_NORETURN_T


229 
	tn‹ëu∫_t
;

239 #i‚de‡
FAR


240 #ifde‡
NEED_FAR_POINTERS


241 
	#FAR
 
Ár


	)

243 
	#FAR


	)

255 #ifde‡
HAVE_BOOLEAN


256 #i‚de‡
FALSE


257 
	#FALSE
 0

	)

259 #i‚de‡
TRUE


260 
	#TRUE
 1

	)

263 íum { 
	mFALSE
 = 0, 
	mTRUE
 = 1 } 
	tboﬁón
;

274 #ifde‡
JPEG_INTERNALS


275 
	#JPEG_INTERNAL_OPTIONS


	)

278 #ifde‡
JPEG_INTERNAL_OPTIONS


291 
	#DCT_ISLOW_SUPPORTED


	)

292 
	#DCT_IFAST_SUPPORTED


	)

293 
	#DCT_FLOAT_SUPPORTED


	)

297 
	#C_ARITH_CODING_SUPPORTED


	)

298 
	#C_MULTISCAN_FILES_SUPPORTED


	)

299 
	#C_PROGRESSIVE_SUPPORTED


	)

300 
	#DCT_SCALING_SUPPORTED


	)

301 
	#ENTROPY_OPT_SUPPORTED


	)

310 
	#INPUT_SMOOTHING_SUPPORTED


	)

314 
	#D_ARITH_CODING_SUPPORTED


	)

315 
	#D_MULTISCAN_FILES_SUPPORTED


	)

316 
	#D_PROGRESSIVE_SUPPORTED


	)

317 
	#IDCT_SCALING_SUPPORTED


	)

318 
	#SAVE_MARKERS_SUPPORTED


	)

319 
	#BLOCK_SMOOTHING_SUPPORTED


	)

320 #unde‡
UPSAMPLE_SCALING_SUPPORTED


321 
	#UPSAMPLE_MERGING_SUPPORTED


	)

322 
	#QUANT_1PASS_SUPPORTED


	)

323 
	#QUANT_2PASS_SUPPORTED


	)

341 
	#RGB_RED
 0

	)

342 
	#RGB_GREEN
 1

	)

343 
	#RGB_BLUE
 2

	)

344 
	#RGB_PIXELSIZE
 3

	)

354 #i‚de‡
INLINE


355 #ifde‡
__GNUC__


356 
	#INLINE
 
__ölöe__


	)

358 #i‚de‡
INLINE


359 
	#INLINE


	)

369 #i‚de‡
MULTIPLIER


370 
	#MULTIPLIER
 

	)

382 #i‚de‡
FAST_FLOAT


383 #ifde‡
HAVE_PROTOTYPES


384 
	#FAST_FLOAT
 

	)

386 
	#FAST_FLOAT
 

	)

	@jpeglib.h

14 #i‚de‡
JPEGLIB_H


15 
	#JPEGLIB_H


	)

24 #i‚de‡
JCONFIG_INCLUDED


25 
	~"jc⁄fig.h
"

27 
	~"jm‹ecfg.h
"

30 #ifde‡
__˝lu•lus


31 #i‚de‡
DONT_USE_EXTERN_C


40 
	#JPEG_LIB_VERSION
 90

	)

41 
	#JPEG_LIB_VERSION_MAJOR
 9

	)

42 
	#JPEG_LIB_VERSION_MINOR
 0

	)

50 
	#DCTSIZE
 8

	)

51 
	#DCTSIZE2
 64

	)

52 
	#NUM_QUANT_TBLS
 4

	)

53 
	#NUM_HUFF_TBLS
 4

	)

54 
	#NUM_ARITH_TBLS
 16

	)

55 
	#MAX_COMPS_IN_SCAN
 4

	)

56 
	#MAX_SAMP_FACTOR
 4

	)

64 
	#C_MAX_BLOCKS_IN_MCU
 10

	)

65 #i‚de‡
D_MAX_BLOCKS_IN_MCU


66 
	#D_MAX_BLOCKS_IN_MCU
 10

	)

75 
JSAMPLE
 
	tFAR
 *
	tJSAMPROW
;

76 
JSAMPROW
 *
	tJSAMPARRAY
;

77 
JSAMPARRAY
 *
	tJSAMPIMAGE
;

79 
JCOEF
 
	tJBLOCK
[
DCTSIZE2
];

80 
JBLOCK
 
	tFAR
 *
	tJBLOCKROW
;

81 
JBLOCKROW
 *
	tJBLOCKARRAY
;

82 
JBLOCKARRAY
 *
	tJBLOCKIMAGE
;

84 
JCOEF
 
	tFAR
 *
	tJCOEFPTR
;

97 
UINT16
 
qu™tvÆ
[
DCTSIZE2
];

103 
boﬁón
 
£¡_èbÀ
;

104 } 
	tJQUANT_TBL
;

111 
UINT8
 
bôs
[17];

113 
UINT8
 
huffvÆ
[256];

119 
boﬁón
 
£¡_èbÀ
;

120 } 
	tJHUFF_TBL
;

129 
comp⁄ít_id
;

130 
comp⁄ít_ödex
;

131 
h_ßmp_Á˘‹
;

132 
v_ßmp_Á˘‹
;

133 
qu™t_tbl_no
;

138 
dc_tbl_no
;

139 
ac_tbl_no
;

148 
JDIMENSION
 
width_ö_blocks
;

149 
JDIMENSION
 
height_ö_blocks
;

155 
DCT_h_sˇÀd_size
;

156 
DCT_v_sˇÀd_size
;

163 
JDIMENSION
 
downßm∂ed_width
;

164 
JDIMENSION
 
downßm∂ed_height
;

169 
boﬁón
 
comp⁄ít_√eded
;

173 
MCU_width
;

174 
MCU_height
;

175 
MCU_blocks
;

176 
MCU_ßm∂e_width
;

177 
œ°_cﬁ_width
;

178 
œ°_row_height
;

184 
JQUANT_TBL
 * 
qu™t_èbÀ
;

187 * 
d˘_èbÀ
;

188 } 
	tj≥g_comp⁄ít_öfo
;

194 
comps_ö_sˇn
;

195 
comp⁄ít_ödex
[
MAX_COMPS_IN_SCAN
];

196 
Ss
, 
Se
;

197 
Ah
, 
Al
;

198 } 
	tj≥g_sˇn_öfo
;

202 
j≥g_m¨kî_°ru˘
 
	tFAR
 * 
	tj≥g_ßved_m¨kî_±r
;

204 
	sj≥g_m¨kî_°ru˘
 {

205 
j≥g_ßved_m¨kî_±r
 
√xt
;

206 
UINT8
 
m¨kî
;

207 
‹igöÆ_Àngth
;

208 
d©a_Àngth
;

209 
JOCTET
 
FAR
 * 
d©a
;

216 
JCS_UNKNOWN
,

217 
JCS_GRAYSCALE
,

218 
JCS_RGB
,

219 
JCS_YCbCr
,

220 
JCS_CMYK
,

221 
JCS_YCCK


222 } 
	tJ_COLOR_SPACE
;

227 
JCT_NONE
 = 0,

228 
JCT_SUBTRACT_GREEN
 = 1

229 } 
	tJ_COLOR_TRANSFORM
;

234 
JDCT_ISLOW
,

235 
JDCT_IFAST
,

236 
JDCT_FLOAT


237 } 
	tJ_DCT_METHOD
;

239 #i‚de‡
JDCT_DEFAULT


240 
	#JDCT_DEFAULT
 
JDCT_ISLOW


	)

242 #i‚de‡
JDCT_FASTEST


243 
	#JDCT_FASTEST
 
JDCT_IFAST


	)

249 
JDITHER_NONE
,

250 
JDITHER_ORDERED
,

251 
JDITHER_FS


252 } 
	tJ_DITHER_MODE
;

257 
	#j≥g_comm⁄_fõlds
 \

258 
j≥g_îr‹_mgr
 * 
îr
; \

259 
j≥g_mem‹y_mgr
 * 
mem
; \

260 
j≥g_¥ogªss_mgr
 * 
¥ogªss
; \

261 * 
˛õ¡_d©a
; \

262 
boﬁón
 
is_decom¥ess‹
; \

263 
globÆ_°©e


	)

269 
	sj≥g_comm⁄_°ru˘
 {

270 
j≥g_comm⁄_fõlds
;

277 
j≥g_comm⁄_°ru˘
 * 
	tj_comm⁄_±r
;

278 
j≥g_com¥ess_°ru˘
 * 
	tj_com¥ess_±r
;

279 
j≥g_decom¥ess_°ru˘
 * 
	tj_decom¥ess_±r
;

284 
	sj≥g_com¥ess_°ru˘
 {

285 
j≥g_comm⁄_fõlds
;

288 
j≥g_de°ö©i⁄_mgr
 * 
de°
;

295 
JDIMENSION
 
image_width
;

296 
JDIMENSION
 
image_height
;

297 
öput_comp⁄íts
;

298 
J_COLOR_SPACE
 
ö_cﬁ‹_•a˚
;

300 
öput_gamma
;

310 
sˇÀ_num
, 
sˇÀ_díom
;

312 
JDIMENSION
 
j≥g_width
;

313 
JDIMENSION
 
j≥g_height
;

321 
d©a_¥ecisi⁄
;

323 
num_comp⁄íts
;

324 
J_COLOR_SPACE
 
j≥g_cﬁ‹_•a˚
;

326 
j≥g_comp⁄ít_öfo
 * 
comp_öfo
;

329 
JQUANT_TBL
 * 
qu™t_tbl_±rs
[
NUM_QUANT_TBLS
];

330 
q_sˇÀ_Á˘‹
[
NUM_QUANT_TBLS
];

335 
JHUFF_TBL
 * 
dc_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

336 
JHUFF_TBL
 * 
ac_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

339 
UINT8
 
¨ôh_dc_L
[
NUM_ARITH_TBLS
];

340 
UINT8
 
¨ôh_dc_U
[
NUM_ARITH_TBLS
];

341 
UINT8
 
¨ôh_ac_K
[
NUM_ARITH_TBLS
];

343 
num_sˇns
;

344 c⁄° 
j≥g_sˇn_öfo
 * 
sˇn_öfo
;

350 
boﬁón
 
øw_d©a_ö
;

351 
boﬁón
 
¨ôh_code
;

352 
boﬁón
 
›timize_codög
;

353 
boﬁón
 
CCIR601_ßm∂ög
;

354 
boﬁón
 
do_Áncy_downßm∂ög
;

355 
smoŸhög_Á˘‹
;

356 
J_DCT_METHOD
 
d˘_mëhod
;

363 
ª°¨t_öãrvÆ
;

364 
ª°¨t_ö_rows
;

368 
boﬁón
 
wrôe_JFIF_hódî
;

369 
UINT8
 
JFIF_maj‹_vîsi⁄
;

370 
UINT8
 
JFIF_mö‹_vîsi⁄
;

375 
UINT8
 
dísôy_unô
;

376 
UINT16
 
X_dísôy
;

377 
UINT16
 
Y_dísôy
;

378 
boﬁón
 
wrôe_Adobe_m¨kî
;

380 
J_COLOR_TRANSFORM
 
cﬁ‹_å™sf‹m
;

388 
JDIMENSION
 
√xt_sˇ∆öe
;

397 
boﬁón
 
¥ogªssive_mode
;

398 
max_h_ßmp_Á˘‹
;

399 
max_v_ßmp_Á˘‹
;

401 
mö_DCT_h_sˇÀd_size
;

402 
mö_DCT_v_sˇÀd_size
;

404 
JDIMENSION
 
tŸÆ_iMCU_rows
;

415 
comps_ö_sˇn
;

416 
j≥g_comp⁄ít_öfo
 * 
cur_comp_öfo
[
MAX_COMPS_IN_SCAN
];

419 
JDIMENSION
 
MCUs_≥r_row
;

420 
JDIMENSION
 
MCU_rows_ö_sˇn
;

422 
blocks_ö_MCU
;

423 
MCU_membîshù
[
C_MAX_BLOCKS_IN_MCU
];

427 
Ss
, 
Se
, 
Ah
, 
Al
;

429 
block_size
;

430 c⁄° * 
«tuøl_‹dî
;

431 
lim_Se
;

436 
j≥g_comp_ma°î
 * 
ma°î
;

437 
j≥g_c_maö_c⁄åﬁÀr
 * 
maö
;

438 
j≥g_c_¥ï_c⁄åﬁÀr
 * 
¥ï
;

439 
j≥g_c_c€f_c⁄åﬁÀr
 * 
c€f
;

440 
j≥g_m¨kî_wrôî
 * 
m¨kî
;

441 
j≥g_cﬁ‹_c⁄vîãr
 * 
cc⁄vît
;

442 
j≥g_downßm∂î
 * 
downßm∂e
;

443 
j≥g_f‹w¨d_d˘
 * 
fd˘
;

444 
j≥g_íå›y_ícodî
 * 
íå›y
;

445 
j≥g_sˇn_öfo
 * 
s¸ùt_•a˚
;

446 
s¸ùt_•a˚_size
;

452 
	sj≥g_decom¥ess_°ru˘
 {

453 
j≥g_comm⁄_fõlds
;

456 
j≥g_sour˚_mgr
 * 
§c
;

461 
JDIMENSION
 
image_width
;

462 
JDIMENSION
 
image_height
;

463 
num_comp⁄íts
;

464 
J_COLOR_SPACE
 
j≥g_cﬁ‹_•a˚
;

471 
J_COLOR_SPACE
 
out_cﬁ‹_•a˚
;

473 
sˇÀ_num
, 
sˇÀ_díom
;

475 
ouçut_gamma
;

477 
boﬁón
 
buf„ªd_image
;

478 
boﬁón
 
øw_d©a_out
;

480 
J_DCT_METHOD
 
d˘_mëhod
;

481 
boﬁón
 
do_Áncy_upßm∂ög
;

482 
boﬁón
 
do_block_smoŸhög
;

484 
boﬁón
 
qu™tize_cﬁ‹s
;

486 
J_DITHER_MODE
 
dôhî_mode
;

487 
boﬁón
 
two_∑ss_qu™tize
;

488 
desúed_numbî_of_cﬁ‹s
;

490 
boﬁón
 
íabÀ_1∑ss_qu™t
;

491 
boﬁón
 
íabÀ_exã∫Æ_qu™t
;

492 
boﬁón
 
íabÀ_2∑ss_qu™t
;

500 
JDIMENSION
 
ouçut_width
;

501 
JDIMENSION
 
ouçut_height
;

502 
out_cﬁ‹_comp⁄íts
;

503 
ouçut_comp⁄íts
;

507 
ªc_outbuf_height
;

519 
a˘uÆ_numbî_of_cﬁ‹s
;

520 
JSAMPARRAY
 
cﬁ‹m≠
;

530 
JDIMENSION
 
ouçut_sˇ∆öe
;

535 
öput_sˇn_numbî
;

536 
JDIMENSION
 
öput_iMCU_row
;

542 
ouçut_sˇn_numbî
;

543 
JDIMENSION
 
ouçut_iMCU_row
;

552 (*
c€f_bôs
)[
DCTSIZE2
];

563 
JQUANT_TBL
 * 
qu™t_tbl_±rs
[
NUM_QUANT_TBLS
];

566 
JHUFF_TBL
 * 
dc_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

567 
JHUFF_TBL
 * 
ac_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

574 
d©a_¥ecisi⁄
;

576 
j≥g_comp⁄ít_öfo
 * 
comp_öfo
;

579 
boﬁón
 
is_ba£löe
;

580 
boﬁón
 
¥ogªssive_mode
;

581 
boﬁón
 
¨ôh_code
;

583 
UINT8
 
¨ôh_dc_L
[
NUM_ARITH_TBLS
];

584 
UINT8
 
¨ôh_dc_U
[
NUM_ARITH_TBLS
];

585 
UINT8
 
¨ôh_ac_K
[
NUM_ARITH_TBLS
];

587 
ª°¨t_öãrvÆ
;

592 
boﬁón
 
ßw_JFIF_m¨kî
;

594 
UINT8
 
JFIF_maj‹_vîsi⁄
;

595 
UINT8
 
JFIF_mö‹_vîsi⁄
;

596 
UINT8
 
dísôy_unô
;

597 
UINT16
 
X_dísôy
;

598 
UINT16
 
Y_dísôy
;

599 
boﬁón
 
ßw_Adobe_m¨kî
;

600 
UINT8
 
Adobe_å™sf‹m
;

602 
J_COLOR_TRANSFORM
 
cﬁ‹_å™sf‹m
;

605 
boﬁón
 
CCIR601_ßm∂ög
;

611 
j≥g_ßved_m¨kî_±r
 
m¨kî_li°
;

620 
max_h_ßmp_Á˘‹
;

621 
max_v_ßmp_Á˘‹
;

623 
mö_DCT_h_sˇÀd_size
;

624 
mö_DCT_v_sˇÀd_size
;

626 
JDIMENSION
 
tŸÆ_iMCU_rows
;

635 
JSAMPLE
 * 
ßm∂e_ønge_limô
;

642 
comps_ö_sˇn
;

643 
j≥g_comp⁄ít_öfo
 * 
cur_comp_öfo
[
MAX_COMPS_IN_SCAN
];

646 
JDIMENSION
 
MCUs_≥r_row
;

647 
JDIMENSION
 
MCU_rows_ö_sˇn
;

649 
blocks_ö_MCU
;

650 
MCU_membîshù
[
D_MAX_BLOCKS_IN_MCU
];

654 
Ss
, 
Se
, 
Ah
, 
Al
;

658 
block_size
;

659 c⁄° * 
«tuøl_‹dî
;

660 
lim_Se
;

666 
uƒód_m¨kî
;

671 
j≥g_decomp_ma°î
 * 
ma°î
;

672 
j≥g_d_maö_c⁄åﬁÀr
 * 
maö
;

673 
j≥g_d_c€f_c⁄åﬁÀr
 * 
c€f
;

674 
j≥g_d_po°_c⁄åﬁÀr
 * 
po°
;

675 
j≥g_öput_c⁄åﬁÀr
 * 
öput˘l
;

676 
j≥g_m¨kî_ªadî
 * 
m¨kî
;

677 
j≥g_íå›y_decodî
 * 
íå›y
;

678 
j≥g_övî£_d˘
 * 
id˘
;

679 
j≥g_upßm∂î
 * 
upßm∂e
;

680 
j≥g_cﬁ‹_dec⁄vîãr
 * 
cc⁄vît
;

681 
j≥g_cﬁ‹_qu™tizî
 * 
cqu™tize
;

695 
	sj≥g_îr‹_mgr
 {

697 
JMETHOD
(
n‹ëu∫_t
, 
îr‹_exô
, (
j_comm⁄_±r
 
cöfo
));

699 
JMETHOD
(, 
emô_mesßge
, (
j_comm⁄_±r
 
cöfo
, 
msg_Àvñ
));

701 
JMETHOD
(, 
ouçut_mesßge
, (
j_comm⁄_±r
 
cöfo
));

703 
JMETHOD
(, 
f‹m©_mesßge
, (
j_comm⁄_±r
 
cöfo
, * 
buf„r
));

704 
	#JMSG_LENGTH_MAX
 200

	)

706 
JMETHOD
(, 
ª£t_îr‹_mgr
, (
j_comm⁄_±r
 
cöfo
));

711 
msg_code
;

712 
	#JMSG_STR_PARM_MAX
 80

	)

714 
i
[8];

715 
s
[
JMSG_STR_PARM_MAX
];

716 } 
msg_∑rm
;

720 
åa˚_Àvñ
;

728 
num_w¨nögs
;

740 c⁄° * c⁄° * 
j≥g_mesßge_èbÀ
;

741 
œ°_j≥g_mesßge
;

745 c⁄° * c⁄° * 
add⁄_mesßge_èbÀ
;

746 
fú°_add⁄_mesßge
;

747 
œ°_add⁄_mesßge
;

753 
	sj≥g_¥ogªss_mgr
 {

754 
JMETHOD
(, 
¥ogªss_m⁄ô‹
, (
j_comm⁄_±r
 
cöfo
));

756 
∑ss_cou¡î
;

757 
∑ss_limô
;

758 
com∂ëed_∑s£s
;

759 
tŸÆ_∑s£s
;

765 
	sj≥g_de°ö©i⁄_mgr
 {

766 
JOCTET
 * 
√xt_ouçut_byã
;

767 
size_t
 
‰ì_ö_buf„r
;

769 
JMETHOD
(, 
öô_de°ö©i⁄
, (
j_com¥ess_±r
 
cöfo
));

770 
JMETHOD
(
boﬁón
, 
em±y_ouçut_buf„r
, (
j_com¥ess_±r
 
cöfo
));

771 
JMETHOD
(, 
ãrm_de°ö©i⁄
, (
j_com¥ess_±r
 
cöfo
));

777 
	sj≥g_sour˚_mgr
 {

778 c⁄° 
JOCTET
 * 
√xt_öput_byã
;

779 
size_t
 
byãs_ö_buf„r
;

781 
JMETHOD
(, 
öô_sour˚
, (
j_decom¥ess_±r
 
cöfo
));

782 
JMETHOD
(
boﬁón
, 
fûl_öput_buf„r
, (
j_decom¥ess_±r
 
cöfo
));

783 
JMETHOD
(, 
skù_öput_d©a
, (
j_decom¥ess_±r
 
cöfo
, 
num_byãs
));

784 
JMETHOD
(
boﬁón
, 
ªsync_to_ª°¨t
, (
j_decom¥ess_±r
 
cöfo
, 
desúed
));

785 
JMETHOD
(, 
ãrm_sour˚
, (
j_decom¥ess_±r
 
cöfo
));

800 
	#JPOOL_PERMANENT
 0

	)

801 
	#JPOOL_IMAGE
 1

	)

802 
	#JPOOL_NUMPOOLS
 2

	)

804 
jvút_ßºay_c⁄åﬁ
 * 
	tjvút_ßºay_±r
;

805 
jvút_b¨øy_c⁄åﬁ
 * 
	tjvút_b¨øy_±r
;

808 
	sj≥g_mem‹y_mgr
 {

810 
JMETHOD
(*, 
Æloc_smÆl
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

811 
size_t
 
sizeofobje˘
));

812 
JMETHOD
(
FAR
 *, 
Æloc_œrge
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

813 
size_t
 
sizeofobje˘
));

814 
JMETHOD
(
JSAMPARRAY
, 
Æloc_ßºay
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

815 
JDIMENSION
 
ßm∂e•îrow
,

816 
JDIMENSION
 
numrows
));

817 
JMETHOD
(
JBLOCKARRAY
, 
Æloc_b¨øy
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

818 
JDIMENSION
 
block•îrow
,

819 
JDIMENSION
 
numrows
));

820 
JMETHOD
(
jvút_ßºay_±r
, 
ªque°_vút_ßºay
, (
j_comm⁄_±r
 
cöfo
,

821 
poﬁ_id
,

822 
boﬁón
 
¥e_zîo
,

823 
JDIMENSION
 
ßm∂e•îrow
,

824 
JDIMENSION
 
numrows
,

825 
JDIMENSION
 
maxac˚ss
));

826 
JMETHOD
(
jvút_b¨øy_±r
, 
ªque°_vút_b¨øy
, (
j_comm⁄_±r
 
cöfo
,

827 
poﬁ_id
,

828 
boﬁón
 
¥e_zîo
,

829 
JDIMENSION
 
block•îrow
,

830 
JDIMENSION
 
numrows
,

831 
JDIMENSION
 
maxac˚ss
));

832 
JMETHOD
(, 
ªÆize_vút_¨øys
, (
j_comm⁄_±r
 
cöfo
));

833 
JMETHOD
(
JSAMPARRAY
, 
ac˚ss_vút_ßºay
, (
j_comm⁄_±r
 
cöfo
,

834 
jvút_ßºay_±r
 
±r
,

835 
JDIMENSION
 
°¨t_row
,

836 
JDIMENSION
 
num_rows
,

837 
boﬁón
 
wrôabÀ
));

838 
JMETHOD
(
JBLOCKARRAY
, 
ac˚ss_vút_b¨øy
, (
j_comm⁄_±r
 
cöfo
,

839 
jvút_b¨øy_±r
 
±r
,

840 
JDIMENSION
 
°¨t_row
,

841 
JDIMENSION
 
num_rows
,

842 
boﬁón
 
wrôabÀ
));

843 
JMETHOD
(, 
‰ì_poﬁ
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
));

844 
JMETHOD
(, 
£lf_de°ru˘
, (
j_comm⁄_±r
 
cöfo
));

851 
max_mem‹y_to_u£
;

854 
max_Æloc_chunk
;

861 
JMETHOD
(
	tboﬁón
, 
	tj≥g_m¨kî_∑r£r_mëhod
, (
	tj_decom¥ess_±r
 
	tcöfo
));

869 #ifde‡
HAVE_PROTOTYPES


870 
	#JPP
(
¨gli°
Ë
	)
¨gli°

872 
	#JPP
(
¨gli°
Ë()

	)

883 #ifde‡
NEED_SHORT_EXTERNAL_NAMES


884 
	#j≥g_°d_îr‹
 
jStdEº‹


	)

885 
	#j≥g_Cª©eCom¥ess
 
jCªaCom¥ess


	)

886 
	#j≥g_Cª©eDecom¥ess
 
jCªaDecom¥ess


	)

887 
	#j≥g_de°roy_com¥ess
 
jDe°Com¥ess


	)

888 
	#j≥g_de°roy_decom¥ess
 
jDe°Decom¥ess


	)

889 
	#j≥g_°dio_de°
 
jStdDe°


	)

890 
	#j≥g_°dio_§c
 
jStdSrc


	)

891 
	#j≥g_mem_de°
 
jMemDe°


	)

892 
	#j≥g_mem_§c
 
jMemSrc


	)

893 
	#j≥g_£t_deÁu…s
 
jSëDeÁu…s


	)

894 
	#j≥g_£t_cﬁ‹•a˚
 
jSëCﬁ‹•a˚


	)

895 
	#j≥g_deÁu…_cﬁ‹•a˚
 
jDefCﬁ‹•a˚


	)

896 
	#j≥g_£t_quÆôy
 
jSëQuÆôy


	)

897 
	#j≥g_£t_löór_quÆôy
 
jSëLQuÆôy


	)

898 
	#j≥g_deÁu…_qèbÀs
 
jDefQTabÀs


	)

899 
	#j≥g_add_qu™t_èbÀ
 
jAddQu™tTabÀ


	)

900 
	#j≥g_quÆôy_sˇlög
 
jQuÆôySˇlög


	)

901 
	#j≥g_sim∂e_¥ogªssi⁄
 
jSimProgªss


	)

902 
	#j≥g_suµªss_èbÀs
 
jSuµªssTabÀs


	)

903 
	#j≥g_Æloc_qu™t_èbÀ
 
jAlcQTabÀ


	)

904 
	#j≥g_Æloc_huff_èbÀ
 
jAlcHTabÀ


	)

905 
	#j≥g_°¨t_com¥ess
 
jSåtCom¥ess


	)

906 
	#j≥g_wrôe_sˇ∆öes
 
jWπSˇ∆öes


	)

907 
	#j≥g_föish_com¥ess
 
jFöCom¥ess


	)

908 
	#j≥g_ˇlc_j≥g_dimísi⁄s
 
jCj≥gDimísi⁄s


	)

909 
	#j≥g_wrôe_øw_d©a
 
jWπRawD©a


	)

910 
	#j≥g_wrôe_m¨kî
 
jWπM¨kî


	)

911 
	#j≥g_wrôe_m_hódî
 
jWπMHódî


	)

912 
	#j≥g_wrôe_m_byã
 
jWπMByã


	)

913 
	#j≥g_wrôe_èbÀs
 
jWπTabÀs


	)

914 
	#j≥g_ªad_hódî
 
jRódHódî


	)

915 
	#j≥g_°¨t_decom¥ess
 
jSåtDecom¥ess


	)

916 
	#j≥g_ªad_sˇ∆öes
 
jRódSˇ∆öes


	)

917 
	#j≥g_föish_decom¥ess
 
jFöDecom¥ess


	)

918 
	#j≥g_ªad_øw_d©a
 
jRódRawD©a


	)

919 
	#j≥g_has_mu…ùÀ_sˇns
 
jHasMu…S˙


	)

920 
	#j≥g_°¨t_ouçut
 
jSåtOuçut


	)

921 
	#j≥g_föish_ouçut
 
jFöOuçut


	)

922 
	#j≥g_öput_com∂ëe
 
jInCom∂ëe


	)

923 
	#j≥g_√w_cﬁ‹m≠
 
jNewCM≠


	)

924 
	#j≥g_c⁄sume_öput
 
jC⁄sumeI≈ut


	)

925 
	#j≥g_c‹e_ouçut_dimísi⁄s
 
jC‹eDimísi⁄s


	)

926 
	#j≥g_ˇlc_ouçut_dimísi⁄s
 
jCÆcDimísi⁄s


	)

927 
	#j≥g_ßve_m¨kîs
 
jSaveM¨kîs


	)

928 
	#j≥g_£t_m¨kî_¥o˚ss‹
 
jSëM¨kî


	)

929 
	#j≥g_ªad_c€fficõ¡s
 
jRódC€fs


	)

930 
	#j≥g_wrôe_c€fficõ¡s
 
jWπC€fs


	)

931 
	#j≥g_c›y_¸ôiˇl_∑ømëîs
 
jC›yCrô


	)

932 
	#j≥g_ab‹t_com¥ess
 
jAbπCom¥ess


	)

933 
	#j≥g_ab‹t_decom¥ess
 
jAbπDecom¥ess


	)

934 
	#j≥g_ab‹t
 
jAb‹t


	)

935 
	#j≥g_de°roy
 
jDe°roy


	)

936 
	#j≥g_ªsync_to_ª°¨t
 
jResyncRe°¨t


	)

941 
EXTERN
(
j≥g_îr‹_mgr
 *Ë
j≥g_°d_îr‹


942 
JPP
((
j≥g_îr‹_mgr
 * 
îr
));

951 
	#j≥g_¸óã_com¥ess
(
cöfo
) \

952 
	`j≥g_Cª©eCom¥ess
((
cöfo
), 
JPEG_LIB_VERSION
, \

953 (
size_t
Ë(
j≥g_com¥ess_°ru˘
))

	)

954 
	#j≥g_¸óã_decom¥ess
(
cöfo
) \

955 
	`j≥g_Cª©eDecom¥ess
((
cöfo
), 
JPEG_LIB_VERSION
, \

956 (
size_t
Ë(
j≥g_decom¥ess_°ru˘
))

	)

957 
EXTERN
(Ë
j≥g_Cª©eCom¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
,

958 
vîsi⁄
, 
size_t
 
°ru˘size
));

959 
EXTERN
(Ë
j≥g_Cª©eDecom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

960 
vîsi⁄
, 
size_t
 
°ru˘size
));

962 
EXTERN
(Ë
j≥g_de°roy_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
));

963 
EXTERN
(Ë
j≥g_de°roy_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

967 
EXTERN
(Ë
j≥g_°dio_de°
 
JPP
((
j_com¥ess_±r
 
cöfo
, 
FILE
 * 
outfûe
));

968 
EXTERN
(Ë
j≥g_°dio_§c
 
JPP
((
j_decom¥ess_±r
 
cöfo
, 
FILE
 * 
öfûe
));

971 
EXTERN
(Ë
j≥g_mem_de°
 
JPP
((
j_com¥ess_±r
 
cöfo
,

972 ** 
outbuf„r
,

973 * 
outsize
));

974 
EXTERN
(Ë
j≥g_mem_§c
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

975 * 
öbuf„r
,

976 
ösize
));

979 
EXTERN
(Ë
j≥g_£t_deÁu…s
 
JPP
((
j_com¥ess_±r
 
cöfo
));

981 
EXTERN
(Ë
j≥g_£t_cﬁ‹•a˚
 
JPP
((
j_com¥ess_±r
 
cöfo
,

982 
J_COLOR_SPACE
 
cﬁ‹•a˚
));

983 
EXTERN
(Ë
j≥g_deÁu…_cﬁ‹•a˚
 
JPP
((
j_com¥ess_±r
 
cöfo
));

984 
EXTERN
(Ë
j≥g_£t_quÆôy
 
JPP
((
j_com¥ess_±r
 
cöfo
, 
quÆôy
,

985 
boﬁón
 
f‹˚_ba£löe
));

986 
EXTERN
(Ë
j≥g_£t_löór_quÆôy
 
JPP
((
j_com¥ess_±r
 
cöfo
,

987 
sˇÀ_Á˘‹
,

988 
boﬁón
 
f‹˚_ba£löe
));

989 
EXTERN
(Ë
j≥g_deÁu…_qèbÀs
 
JPP
((
j_com¥ess_±r
 
cöfo
,

990 
boﬁón
 
f‹˚_ba£löe
));

991 
EXTERN
(Ë
j≥g_add_qu™t_èbÀ
 
JPP
((
j_com¥ess_±r
 
cöfo
, 
which_tbl
,

992 c⁄° *
basic_èbÀ
,

993 
sˇÀ_Á˘‹
,

994 
boﬁón
 
f‹˚_ba£löe
));

995 
EXTERN
(Ë
j≥g_quÆôy_sˇlög
 
JPP
((
quÆôy
));

996 
EXTERN
(Ë
j≥g_sim∂e_¥ogªssi⁄
 
JPP
((
j_com¥ess_±r
 
cöfo
));

997 
EXTERN
(Ë
j≥g_suµªss_èbÀs
 
JPP
((
j_com¥ess_±r
 
cöfo
,

998 
boﬁón
 
suµªss
));

999 
EXTERN
(
JQUANT_TBL
 *Ë
j≥g_Æloc_qu™t_èbÀ
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1000 
EXTERN
(
JHUFF_TBL
 *Ë
j≥g_Æloc_huff_èbÀ
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1003 
EXTERN
(Ë
j≥g_°¨t_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1004 
boﬁón
 
wrôe_Æl_èbÀs
));

1005 
EXTERN
(
JDIMENSION
Ë
j≥g_wrôe_sˇ∆öes
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1006 
JSAMPARRAY
 
sˇ∆öes
,

1007 
JDIMENSION
 
num_löes
));

1008 
EXTERN
(Ë
j≥g_föish_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1011 
EXTERN
(Ë
j≥g_ˇlc_j≥g_dimísi⁄s
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1014 
EXTERN
(
JDIMENSION
Ë
j≥g_wrôe_øw_d©a
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1015 
JSAMPIMAGE
 
d©a
,

1016 
JDIMENSION
 
num_löes
));

1019 
EXTERN
(Ë
j≥g_wrôe_m¨kî


1020 
JPP
((
j_com¥ess_±r
 
cöfo
, 
m¨kî
,

1021 c⁄° 
JOCTET
 * 
d©≠å
, 
d©Æí
));

1023 
EXTERN
(Ë
j≥g_wrôe_m_hódî


1024 
JPP
((
j_com¥ess_±r
 
cöfo
, 
m¨kî
, 
d©Æí
));

1025 
EXTERN
(Ë
j≥g_wrôe_m_byã


1026 
JPP
((
j_com¥ess_±r
 
cöfo
, 
vÆ
));

1029 
EXTERN
(Ë
j≥g_wrôe_èbÀs
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1032 
EXTERN
(Ë
j≥g_ªad_hódî
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1033 
boﬁón
 
ªquúe_image
));

1035 
	#JPEG_SUSPENDED
 0

	)

1036 
	#JPEG_HEADER_OK
 1

	)

1037 
	#JPEG_HEADER_TABLES_ONLY
 2

	)

1045 
EXTERN
(
boﬁón
Ë
j≥g_°¨t_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1046 
EXTERN
(
JDIMENSION
Ë
j≥g_ªad_sˇ∆öes
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1047 
JSAMPARRAY
 
sˇ∆öes
,

1048 
JDIMENSION
 
max_löes
));

1049 
EXTERN
(
boﬁón
Ë
j≥g_föish_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1052 
EXTERN
(
JDIMENSION
Ë
j≥g_ªad_øw_d©a
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1053 
JSAMPIMAGE
 
d©a
,

1054 
JDIMENSION
 
max_löes
));

1057 
EXTERN
(
boﬁón
Ë
j≥g_has_mu…ùÀ_sˇns
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1058 
EXTERN
(
boﬁón
Ë
j≥g_°¨t_ouçut
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1059 
sˇn_numbî
));

1060 
EXTERN
(
boﬁón
Ë
j≥g_föish_ouçut
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1061 
EXTERN
(
boﬁón
Ë
j≥g_öput_com∂ëe
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1062 
EXTERN
(Ë
j≥g_√w_cﬁ‹m≠
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1063 
EXTERN
(Ë
j≥g_c⁄sume_öput
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1066 
	#JPEG_REACHED_SOS
 1

	)

1067 
	#JPEG_REACHED_EOI
 2

	)

1068 
	#JPEG_ROW_COMPLETED
 3

	)

1069 
	#JPEG_SCAN_COMPLETED
 4

	)

1072 
EXTERN
(Ë
j≥g_c‹e_ouçut_dimísi⁄s
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1073 
EXTERN
(Ë
j≥g_ˇlc_ouçut_dimísi⁄s
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1076 
EXTERN
(Ë
j≥g_ßve_m¨kîs


1077 
JPP
((
j_decom¥ess_±r
 
cöfo
, 
m¨kî_code
,

1078 
Àngth_limô
));

1081 
EXTERN
(Ë
j≥g_£t_m¨kî_¥o˚ss‹


1082 
JPP
((
j_decom¥ess_±r
 
cöfo
, 
m¨kî_code
,

1083 
j≥g_m¨kî_∑r£r_mëhod
 
routöe
));

1086 
EXTERN
(
jvút_b¨øy_±r
 *Ë
j≥g_ªad_c€fficõ¡s
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1087 
EXTERN
(Ë
j≥g_wrôe_c€fficõ¡s
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1088 
jvút_b¨øy_±r
 * 
c€f_¨øys
));

1089 
EXTERN
(Ë
j≥g_c›y_¸ôiˇl_∑ømëîs
 
JPP
((
j_decom¥ess_±r
 
§cöfo
,

1090 
j_com¥ess_±r
 
d°öfo
));

1098 
EXTERN
(Ë
j≥g_ab‹t_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1099 
EXTERN
(Ë
j≥g_ab‹t_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1104 
EXTERN
(Ë
j≥g_ab‹t
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1105 
EXTERN
(Ë
j≥g_de°roy
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1108 
EXTERN
(
boﬁón
Ë
j≥g_ªsync_to_ª°¨t
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1109 
desúed
));

1116 
	#JPEG_RST0
 0xD0

	)

1117 
	#JPEG_EOI
 0xD9

	)

1118 
	#JPEG_APP0
 0xE0

	)

1119 
	#JPEG_COM
 0xFE

	)

1127 #ifde‡
INCOMPLETE_TYPES_BROKEN


1128 #i‚de‡
JPEG_INTERNALS


1129 
	sjvút_ßºay_c⁄åﬁ
 { 
dummy
; };

1130 
	sjvút_b¨øy_c⁄åﬁ
 { 
dummy
; };

1131 
	sj≥g_comp_ma°î
 { 
dummy
; };

1132 
	sj≥g_c_maö_c⁄åﬁÀr
 { 
dummy
; };

1133 
	sj≥g_c_¥ï_c⁄åﬁÀr
 { 
dummy
; };

1134 
	sj≥g_c_c€f_c⁄åﬁÀr
 { 
dummy
; };

1135 
	sj≥g_m¨kî_wrôî
 { 
dummy
; };

1136 
	sj≥g_cﬁ‹_c⁄vîãr
 { 
dummy
; };

1137 
	sj≥g_downßm∂î
 { 
dummy
; };

1138 
	sj≥g_f‹w¨d_d˘
 { 
dummy
; };

1139 
	sj≥g_íå›y_ícodî
 { 
dummy
; };

1140 
	sj≥g_decomp_ma°î
 { 
dummy
; };

1141 
	sj≥g_d_maö_c⁄åﬁÀr
 { 
dummy
; };

1142 
	sj≥g_d_c€f_c⁄åﬁÀr
 { 
dummy
; };

1143 
	sj≥g_d_po°_c⁄åﬁÀr
 { 
dummy
; };

1144 
	sj≥g_öput_c⁄åﬁÀr
 { 
dummy
; };

1145 
	sj≥g_m¨kî_ªadî
 { 
dummy
; };

1146 
	sj≥g_íå›y_decodî
 { 
dummy
; };

1147 
	sj≥g_övî£_d˘
 { 
dummy
; };

1148 
	sj≥g_upßm∂î
 { 
dummy
; };

1149 
	sj≥g_cﬁ‹_dec⁄vîãr
 { 
dummy
; };

1150 
	sj≥g_cﬁ‹_qu™tizî
 { 
dummy
; };

1162 #ifde‡
JPEG_INTERNALS


1163 
	~"j≥göt.h
"

1164 
	~"jîr‹.h
"

1167 #ifde‡
__˝lu•lus


1168 #i‚de‡
DONT_USE_EXTERN_C


	@mxml.h

21 #i‚de‡
_mxml_h_


22 
	#_mxml_h_


	)

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<˘y≥.h
>

32 
	~<î∫o.h
>

39 
	#MXML_TAB
 8

	)

41 
	#MXML_NO_CALLBACK
 0

	)

42 
	#MXML_INTEGER_CALLBACK
 
mxml_öãgî_cb


	)

44 
	#MXML_OPAQUE_CALLBACK
 
mxml_›aque_cb


	)

46 
	#MXML_REAL_CALLBACK
 
mxml_ªÆ_cb


	)

48 
	#MXML_TEXT_CALLBACK
 0

	)

49 
	#MXML_IGNORE_CALLBACK
 
mxml_ign‹e_cb


	)

52 
	#MXML_NO_PARENT
 0

	)

54 
	#MXML_DESCEND
 1

	)

55 
	#MXML_NO_DESCEND
 0

	)

56 
	#MXML_DESCEND_FIRST
 -1

	)

58 
	#MXML_WS_BEFORE_OPEN
 0

	)

59 
	#MXML_WS_AFTER_OPEN
 1

	)

60 
	#MXML_WS_BEFORE_CLOSE
 2

	)

61 
	#MXML_WS_AFTER_CLOSE
 3

	)

63 
	#MXML_ADD_BEFORE
 0

	)

64 
	#MXML_ADD_AFTER
 1

	)

65 
	#MXML_ADD_TO_PARENT
 
NULL


	)

72 
mxml_ßx_evít_e


74 
	gMXML_SAX_CDATA
,

75 
	gMXML_SAX_COMMENT
,

76 
	gMXML_SAX_DATA
,

77 
	gMXML_SAX_DIRECTIVE
,

78 
	gMXML_SAX_ELEMENT_CLOSE
,

79 
	gMXML_SAX_ELEMENT_OPEN


80 } 
	tmxml_ßx_evít_t
;

82 
mxml_ty≥_e


84 
	gMXML_IGNORE
 = -1,

85 
	gMXML_ELEMENT
,

86 
	gMXML_INTEGER
,

87 
	gMXML_OPAQUE
,

88 
	gMXML_REAL
,

89 
	gMXML_TEXT
,

90 
	gMXML_CUSTOM


91 } 
	tmxml_ty≥_t
;

93 (*
	tmxml_cu°om_de°roy_cb_t
)(*);

96 (*
	tmxml_îr‹_cb_t
)(const *);

99 
mxml_©å_s


101 *
«me
;

102 *
vÆue
;

103 
	}
} 
	tmxml_©å_t
;

105 
mxml_ñemít_s


107 *
	g«me
;

108 
	gnum_©ås
;

109 
mxml_©å_t
 *
	g©ås
;

110 } 
	tmxml_ñemít_t
;

112 
mxml_ãxt_s


114 
	gwhôe•a˚
;

115 *
	g°rög
;

116 } 
	tmxml_ãxt_t
;

118 
mxml_cu°om_s


120 *
	gd©a
;

121 
mxml_cu°om_de°roy_cb_t
 
	gde°roy
;

122 } 
	tmxml_cu°om_t
;

124 
mxml_vÆue_u


126 
mxml_ñemít_t
 
	gñemít
;

127 
	göãgî
;

128 *
	g›aque
;

129 
	gªÆ
;

130 
mxml_ãxt_t
 
	gãxt
;

131 
mxml_cu°om_t
 
	gcu°om
;

132 } 
	tmxml_vÆue_t
;

134 
mxml_node_s


136 
mxml_ty≥_t
 
	gty≥
;

137 
mxml_node_s
 *
	g√xt
;

138 
mxml_node_s
 *
	g¥ev
;

139 
mxml_node_s
 *
	g∑ª¡
;

140 
mxml_node_s
 *
	gchûd
;

141 
mxml_node_s
 *
	gœ°_chûd
;

142 
mxml_vÆue_t
 
	gvÆue
;

143 
	gªf_cou¡
;

144 *
	gu£r_d©a
;

147 
mxml_node_s
 
	tmxml_node_t
;

149 
mxml_ödex_s


151 *
	g©å
;

152 
	gnum_nodes
;

153 
	gÆloc_nodes
;

154 
	gcur_node
;

155 
mxml_node_t
 **
	gnodes
;

158 
mxml_ödex_s
 
	tmxml_ödex_t
;

161 (*
	tmxml_cu°om_lﬂd_cb_t
)(
	tmxml_node_t
 *, const *);

164 *(*
	tmxml_cu°om_ßve_cb_t
)(
	tmxml_node_t
 *);

167 (*
	tmxml_ítôy_cb_t
)(const *);

170 
	$mxml_ty≥_t
 (*
	tmxml_lﬂd_cb_t
)(
	tmxml_node_t
 *);

173 c⁄° *(*
	tmxml_ßve_cb_t
)(
	tmxml_node_t
 *, );

176 (*
	tmxml_ßx_cb_t
)(
	tmxml_node_t
 *, 
	tmxml_ßx_evít_t
, *);

184 #ifde‡
__˝lu•lus


192 
	`mxmlAdd
(
mxml_node_t
 *
∑ª¡
, 
whîe
,

193 
mxml_node_t
 *
chûd
, mxml_node_à*
node
);

194 
	`mxmlDñëe
(
mxml_node_t
 *
node
);

195 
	`mxmlEÀmítDñëeAâr
(
mxml_node_t
 *
node
,

196 c⁄° *
«me
);

197 c⁄° *
	`mxmlEÀmítGëAâr
(
mxml_node_t
 *
node
, c⁄° *
«me
);

198 
	`mxmlEÀmítSëAâr
(
mxml_node_t
 *
node
, c⁄° *
«me
,

199 c⁄° *
vÆue
);

200 
	`mxmlEÀmítSëAârf
(
mxml_node_t
 *
node
, c⁄° *
«me
,

201 c⁄° *
f‹m©
, ...)

202 #ifde‡
__GNUC__


203 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)))

206 
	`mxmlE¡ôyAddCÆlback
(
mxml_ítôy_cb_t
 
cb
);

207 c⁄° *
	`mxmlE¡ôyGëName
(
vÆ
);

208 
	`mxmlE¡ôyGëVÆue
(c⁄° *
«me
);

209 
	`mxmlE¡ôyRemoveCÆlback
(
mxml_ítôy_cb_t
 
cb
);

210 
mxml_node_t
 *
	`mxmlFödEÀmít
(mxml_node_à*
node
, mxml_node_à*
t›
,

211 c⁄° *
«me
, c⁄° *
©å
,

212 c⁄° *
vÆue
, 
des˚nd
);

213 
mxml_node_t
 *
	`mxmlFödP©h
(mxml_node_à*
node
, c⁄° *
∑th
);

214 c⁄° *
	`mxmlGëCDATA
(
mxml_node_t
 *
node
);

215 c⁄° *
	`mxmlGëCu°om
(
mxml_node_t
 *
node
);

216 c⁄° *
	`mxmlGëEÀmít
(
mxml_node_t
 *
node
);

217 
mxml_node_t
 *
	`mxmlGëFú°Chûd
(mxml_node_à*
node
);

218 
	`mxmlGëI¡egî
(
mxml_node_t
 *
node
);

219 
mxml_node_t
 *
	`mxmlGëLa°Chûd
(mxml_node_à*
node
);

220 
mxml_node_t
 *
	`mxmlGëNextSiblög
(mxml_node_à*
node
);

221 c⁄° *
	`mxmlGëO∑que
(
mxml_node_t
 *
node
);

222 
mxml_node_t
 *
	`mxmlGëP¨ít
(mxml_node_à*
node
);

223 
mxml_node_t
 *
	`mxmlGëPªvSiblög
(mxml_node_à*
node
);

224 
	`mxmlGëRól
(
mxml_node_t
 *
node
);

225 
	`mxmlGëRefCou¡
(
mxml_node_t
 *
node
);

226 c⁄° *
	`mxmlGëText
(
mxml_node_t
 *
node
, *
whôe•a˚
);

227 
mxml_ty≥_t
 
	`mxmlGëTy≥
(
mxml_node_t
 *
node
);

228 *
	`mxmlGëU£rD©a
(
mxml_node_t
 *
node
);

229 
	`mxmlIndexDñëe
(
mxml_ödex_t
 *
öd
);

230 
mxml_node_t
 *
	`mxmlIndexEnum
(
mxml_ödex_t
 *
öd
);

231 
mxml_node_t
 *
	`mxmlIndexFöd
(
mxml_ödex_t
 *
öd
,

232 c⁄° *
ñemít
,

233 c⁄° *
vÆue
);

234 
	`mxmlIndexGëCou¡
(
mxml_ödex_t
 *
öd
);

235 
mxml_ödex_t
 *
	`mxmlIndexNew
(
mxml_node_t
 *
node
, c⁄° *
ñemít
,

236 c⁄° *
©å
);

237 
mxml_node_t
 *
	`mxmlIndexRe£t
(
mxml_ödex_t
 *
öd
);

238 
mxml_node_t
 *
	`mxmlLﬂdFd
(mxml_node_à*
t›
, 
fd
,

239 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *));

240 
mxml_node_t
 *
	`mxmlLﬂdFûe
(mxml_node_à*
t›
, 
FILE
 *
Â
,

241 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *));

242 
mxml_node_t
 *
	`mxmlLﬂdSåög
(mxml_node_à*
t›
, c⁄° *
s
,

243 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *));

244 
mxml_node_t
 *
	`mxmlNewCDATA
(mxml_node_à*
∑ª¡
, c⁄° *
°rög
);

245 
mxml_node_t
 *
	`mxmlNewCu°om
(mxml_node_à*
∑ª¡
, *
d©a
,

246 
mxml_cu°om_de°roy_cb_t
 
de°roy
);

247 
mxml_node_t
 *
	`mxmlNewEÀmít
(mxml_node_à*
∑ª¡
, c⁄° *
«me
);

248 
mxml_node_t
 *
	`mxmlNewI¡egî
(mxml_node_à*
∑ª¡
, 
öãgî
);

249 
mxml_node_t
 *
	`mxmlNewO∑que
(mxml_node_à*
∑ª¡
, c⁄° *
›aque
);

250 
mxml_node_t
 *
	`mxmlNewRól
(mxml_node_à*
∑ª¡
, 
ªÆ
);

251 
mxml_node_t
 *
	`mxmlNewText
(mxml_node_à*
∑ª¡
, 
whôe•a˚
,

252 c⁄° *
°rög
);

253 
mxml_node_t
 *
	`mxmlNewTextf
(mxml_node_à*
∑ª¡
, 
whôe•a˚
,

254 c⁄° *
f‹m©
, ...)

255 #ifde‡
__GNUC__


256 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)))

259 
mxml_node_t
 *
	`mxmlNewXML
(c⁄° *
vîsi⁄
);

260 
	`mxmlRñó£
(
mxml_node_t
 *
node
);

261 
	`mxmlRemove
(
mxml_node_t
 *
node
);

262 
	`mxmlRëaö
(
mxml_node_t
 *
node
);

263 *
	`mxmlSaveAŒocSåög
(
mxml_node_t
 *
node
,

264 
mxml_ßve_cb_t
 
cb
);

265 
	`mxmlSaveFd
(
mxml_node_t
 *
node
, 
fd
,

266 
mxml_ßve_cb_t
 
cb
);

267 
	`mxmlSaveFûe
(
mxml_node_t
 *
node
, 
FILE
 *
Â
,

268 
mxml_ßve_cb_t
 
cb
);

269 
	`mxmlSaveSåög
(
mxml_node_t
 *
node
, *
buf„r
,

270 
bufsize
, 
mxml_ßve_cb_t
 
cb
);

271 
mxml_node_t
 *
	`mxmlSAXLﬂdFd
(mxml_node_à*
t›
, 
fd
,

272 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *),

273 
mxml_ßx_cb_t
 
ßx
, *
ßx_d©a
);

274 
mxml_node_t
 *
	`mxmlSAXLﬂdFûe
(mxml_node_à*
t›
, 
FILE
 *
Â
,

275 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *),

276 
mxml_ßx_cb_t
 
ßx
, *
ßx_d©a
);

277 
mxml_node_t
 *
	`mxmlSAXLﬂdSåög
(mxml_node_à*
t›
, c⁄° *
s
,

278 
	`mxml_ty≥_t
 (*
cb
)(
mxml_node_t
 *),

279 
mxml_ßx_cb_t
 
ßx
, *
ßx_d©a
);

280 
	`mxmlSëCDATA
(
mxml_node_t
 *
node
, c⁄° *
d©a
);

281 
	`mxmlSëCu°om
(
mxml_node_t
 *
node
, *
d©a
,

282 
mxml_cu°om_de°roy_cb_t
 
de°roy
);

283 
	`mxmlSëCu°omH™dÀrs
(
mxml_cu°om_lﬂd_cb_t
 
lﬂd
,

284 
mxml_cu°om_ßve_cb_t
 
ßve
);

285 
	`mxmlSëEÀmít
(
mxml_node_t
 *
node
, c⁄° *
«me
);

286 
	`mxmlSëEº‹CÆlback
(
mxml_îr‹_cb_t
 
cb
);

287 
	`mxmlSëI¡egî
(
mxml_node_t
 *
node
, 
öãgî
);

288 
	`mxmlSëO∑que
(
mxml_node_t
 *
node
, c⁄° *
›aque
);

289 
	`mxmlSëRól
(
mxml_node_t
 *
node
, 
ªÆ
);

290 
	`mxmlSëText
(
mxml_node_t
 *
node
, 
whôe•a˚
,

291 c⁄° *
°rög
);

292 
	`mxmlSëTextf
(
mxml_node_t
 *
node
, 
whôe•a˚
,

293 c⁄° *
f‹m©
, ...)

294 #ifde‡
__GNUC__


295 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)))

298 
	`mxmlSëU£rD©a
(
mxml_node_t
 *
node
, *
d©a
);

299 
	`mxmlSëWøpM¨gö
(
cﬁumn
);

300 
mxml_node_t
 *
	`mxmlWÆkNext
(mxml_node_à*
node
, mxml_node_à*
t›
,

301 
des˚nd
);

302 
mxml_node_t
 *
	`mxmlWÆkPªv
(mxml_node_à*
node
, mxml_node_à*
t›
,

303 
des˚nd
);

310 
	`mxml_îr‹
(c⁄° *
f‹m©
, ...);

311 
mxml_ty≥_t
 
	`mxml_ign‹e_cb
(
mxml_node_t
 *
node
);

312 
mxml_ty≥_t
 
	`mxml_öãgî_cb
(
mxml_node_t
 *
node
);

313 
mxml_ty≥_t
 
	`mxml_›aque_cb
(
mxml_node_t
 *
node
);

314 
mxml_ty≥_t
 
	`mxml_ªÆ_cb
(
mxml_node_t
 *
node
);

321 #ifde‡
__˝lu•lus


322 
	}
}

	@recbc_srv.c

7 
	~<°dio.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/sockë.h
>

10 
	~<√töë/ö.h
>

11 
	~<°rög.h
>

12 
	~<°dlib.h
>

13 
	~<uni°d.h
>

14 
	~<¨∑/öë.h
>

15 
	~<±hªad.h
>

16 
	~<sys/time.h
>

17 
	~<m©h.h
>

18 
	~<sys/°©.h
>

19 
	~<sig«l.h
>

21 
	~"ªcbc_§v.h
"

22 
	~"d©afifo.h
"

23 
	~"°ªamög_§v.h
"

25 
	~"PC_CENTRIST/svm.h
"

27 
	~"PC_CENTRIST/Dëe˘Føme.h
"

29 
	~"j≥glib.h
"

30 
	~<mem‹y.h
>

32 
	~"xmÕ¨£r.h
"

34 
	#COMMAND_HELLO
 "0001"

	)

35 
	#COMMAND_SERVER
 "ffff"

	)

36 
	#COMMAND_CONFIG
 "0006"

	)

37 
	#COMMAND_SWITCHCTRL
 "0008"

	)

38 
	#COMMAND_GETDATA
 "0010"

	)

39 
	#COMMAND_GETDATA_ACK
 "0011"

	)

40 
	#COMMAND_EVENT_VID
 "0021"

	)

41 
	#COMMAND_EVENT_VGA
 "0023"

	)

42 
	#COMMAND_EVENT_AUX
 "0025"

	)

43 
	#COMMAND_CAMHLD_BYPASS
 "0012"

	)

44 
	#COMMAND_BYP_RSP
 "0013"

	)

45 
	#COMMAND_EVENT_UCI
 "0027"

	)

46 
	#COMMAND_EVENT_JPEG
 "0029"

	)

47 
	#COMMAND_EVENT_PIP
 "0031"

	)

48 
	#COMMAND_INTERNAL
 "0000"

	)

49 
	#COMMAND_SET_LED
 "0014"

	)

52 
	#debug_¥ötf
(
x
...Ë
	`¥ötf
(x)

	)

54 
	#debug_¥ötf
(
x
...) do{\

55 
m_buf
[1024];\

56 
m_buf1
[1024];\

57 
time_t
 
m_time
;\

58 
m_time
 = 
	`time
(
NULL
);\

59 
	`•rötf
(
m_buf
, "%s", 
	`˘ime
(&
m_time
));\

60 
	`•rötf
(
m_buf1
, 
x
);\

61 
	`°rˇt
(
m_buf
, 
m_buf1
);\

62 
	`¥ötf
("%s\n", 
m_buf
);\

63 }0)

	)

66 
	#SYS_CONFIG_FILE_NAME
 "../tomˇt/≠ache-tomˇt-6.0.39/web≠ps/ROOT/c⁄f/sys-c⁄fig.xml"

	)

67 
	#PTZ_CONFIG_FILE_NAME
 "../tomˇt/≠ache-tomˇt-6.0.39/web≠ps/ROOT/c⁄f/±z-c⁄fig.xml"

	)

68 
	#POLICY_FILE_NAME
 "../tomˇt/≠ache-tomˇt-6.0.39/web≠ps/ROOT/c⁄f/pﬁicy/pﬁicy.xml"

	)

71 
	gCfgDú
[256]= "";

73 c⁄° *
	gMODEL_FILE
 = "PC_CENTRIST/model_int_s";

74 c⁄° *
	gFEATURE_FILE
 = "PC_CENTRIST/FeatureRange";

76 
svm_modñ
 *
	gmodñ
;

78 *
	gFótuª_Mö
 = 
NULL
;

79 *
	gFótuª_Max
 = 
NULL
;

83 
t_video_m≠
 
	gg_vm≠_èbÀ
[6];

84 *
	gg_vm≠_fûe
 = "./configure/vmap_file";

85 *
	gg_c⁄fig_fûe
 = "configure/config_file";

86 
t_ªcbc_cfg
 
	gg_cfg
;

87 
t_f‹w¨d_èbÀ
 
	gg_f‹w¨d_èbÀ
;

89 
	gg_ªg_09
 = 0;

90 
	gg_ˇmhﬁdî_°ûl
 = 1;

91 
	gg_™Æyze_‰ame_num
 = 0;

92 
	gg_num_ö_group
 = 0;

93 
±hªad_muãx_t
 
	gg_ˇ±uª_sync_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

96 
	$ch¨2hex
(*
§c
, *
hex
, 
Àn
)

98 if(
Àn
 > 8)

100 
	`debug_¥ötf
("theÜength of char isÅooÜarge\n");

103 
i
,
j
;

104 *
hex
 = 0;

105 
i
 = 0;ò< 
Àn
; i++)

107 
j
 = 
Àn
 - 
i
 - 1;

108 *
hex
 &(~(0x‡<< (
j
*4)));

109 if((
§c
[
i
]>='0') && (src[i]<='9'))

111 *
hex
 |(
§c
[
i
]-0x30Ë<< (
j
*4);

113 if((
§c
[
i
]>='a') && (src[i]<='z'))

115 *
hex
 |(
§c
[
i
]-0x57Ë<< (
j
*4);

117 if((
§c
[
i
]>='A') && (src[i]<='Z'))

119 *
hex
 |(
§c
[
i
]-0x37Ë<< (
j
*4);

124 
	}
}

126 
	$add_©å_ch¨
(
t_cmd
 *
cmd
, *
«me
, *
vÆue
)

128 
d©Æí
[
DATA_LEN_SIZE
+1];

129 
	`•rötf
(
cmd
->
cmd_p
, "%01x%04x%s%s", 
	`°æí
(
«me
), såÀn(
vÆue
),Çame, value);

131 
cmd
->
cmd_p
 +(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
	`°æí
(
«me
Ë+ såÀn(
vÆue
));

132 
	`•rötf
(
d©Æí
, "%04x", 
cmd
->
cmd_p
-cmd->
d©a
);

133 
	`mem˝y
(
cmd
->
d©a_Àn
, 
d©Æí
, 
DATA_LEN_SIZE
);

134 
	}
}

136 
	$add_©å_öt
(
t_cmd
 *
cmd
, *
«me
, 
vÆue
)

138 
c
[10];

139 
	`mem£t
(
c
, 0, (c));

140 
	`•rötf
(
c
, "%x",
vÆue
);

141 
	`add_©å_ch¨
(
cmd
, 
«me
, 
c
);

142 
	}
}

144 
	$add_©å_bö
(
t_cmd
 *
cmd
, *
«me
, *
vÆue
, 
vÆuñí
)

146 
d©Æí
[
DATA_LEN_SIZE
+1];

147 
	`•rötf
(
cmd
->
cmd_p
, "%01x%04x%s", 
	`°æí
(
«me
), 
vÆuñí
,Çame);

149 
cmd
->
cmd_p
 +(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
	`°æí
(
«me
));

150 
	`mem˝y
(
cmd
->
cmd_p
, 
vÆue
, 
vÆuñí
);

151 
cmd
->
cmd_p
 +
vÆuñí
;

152 
	`•rötf
(
d©Æí
, "%04x", 
cmd
->
cmd_p
-cmd->
d©a
);

153 
	`mem˝y
(
cmd
->
d©a_Àn
, 
d©Æí
, 
DATA_LEN_SIZE
);

154 
	}
}

156 
	$fûl_cmd_hódî
(
t_cmd
 *
cmd
, *
cmd_p
)

158 
cmd
->
vîsi⁄
 = cmd->
fuŒbuf
;

159 
cmd
->cmd = &cmd->
fuŒbuf
[2];

160 
cmd
->
d©a_Àn
 = &cmd->
fuŒbuf
[6];

161 
cmd
->
d©a
 = &cmd->
fuŒbuf
[10];

162 
cmd
->
cmd_p
 =cmd->
d©a
;

163 
	`mem£t
(
cmd
, 0, (cmd));

164 
	`mem˝y
(
cmd
->
vîsi⁄
, 
COMMAND_VERSION
, 
VERSION_SIZE
);

165 
	`mem˝y
(
cmd
->cmd, 
cmd_p
, 
CMD_SIZE
);

166 
	`mem˝y
(
cmd
->
d©a_Àn
, "0000", 
DATA_LEN_SIZE
);

167 
	}
}

170 
	$MsgDump
(*
msg
)

172 
buf
[
CMD_BUFSIZE
];

173 
Àn
;

174 *
±r
, *
vîsi⁄
, *
comm™d
, *
d©a_Àn
;

176 
	`¥ötf
("\n");

177 
	`¥ötf
("******************************************************************\n");

179 
vîsi⁄
 = 
msg
;

180 
comm™d
 = &
msg
[
VERSION_SIZE
];

181 
d©a_Àn
 = &
msg
[
VERSION_SIZE
+
CMD_SIZE
];

182 
±r
 = &
msg
[
PACKET_HEADER_SIZE
];

184 
	`mem˝y
(
buf
, 
vîsi⁄
, 
VERSION_SIZE
);

185 
buf
[
VERSION_SIZE
]='\0';

186 if(
	`°rcmp
(
buf
, "01")){

187 
	`¥ötf
("Wrong msg format\n");

190 
	`¥ötf
("Msg vîsi⁄: %s\n", 
buf
);

192 
	`mem˝y
(
buf
, 
comm™d
, 
CMD_SIZE
);

193 
buf
[
CMD_SIZE
] = '\0';

194 
	`¥ötf
("Comm™d: %s\n", 
buf
);

196 
	`ch¨2hex
(
d©a_Àn
, &
Àn
, 
DATA_LEN_SIZE
);

197 
	`¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

199 
Àn
){

200 
«me_Àn
, 
vÆue_Àn
;

202 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

203 
±r
++;

205 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

206 
±r
 += 4;

208 
	`mem˝y
(
buf
, 
±r
, 
«me_Àn
);

209 
buf
[
«me_Àn
] = '\0';

210 
	`¥ötf
("%s(öÜígth o‡%d): ", 
buf
, 
«me_Àn
);

211 
±r
 +
«me_Àn
;

213 
	`mem˝y
(
buf
, 
±r
, 
vÆue_Àn
);

214 
buf
[
vÆue_Àn
] = '\0';

215 
±r
 +
vÆue_Àn
;

216 
	`¥ötf
("%s(öÜígth o‡%d)\n", 
buf
, 
vÆue_Àn
);

218 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

221 
	`¥ötf
("******************************************************************\n");

222 
	`¥ötf
("\n");

223 
	}
}

226 
	$gëMsg
(
sock
, * 
buf
)

228 
ªt
;

229 
Àn
;

231 
ªt
 = 
	`ªcv
(
sock
, 
buf
, 10, 
MSG_PEEK
);

233 if(
ªt
<=0){

237 if(
ªt
<10){

241 
	`ch¨2hex
(&
buf
[6], &
Àn
, 
DATA_LEN_SIZE
);

242 
Àn
 +
PACKET_HEADER_SIZE
;

244 
ªt
 = 
	`ªcv
(
sock
, 
buf
, 
Àn
, 
MSG_PEEK
);

246 if(
ªt
<
Àn
){

250 
	`ªcv
(
sock
, 
buf
, 
Àn
, 0);

252  
Àn
;

253 
	}
}

256 
	$LﬂdVideoCfg
()

260 
	}
}

262 
	$P¨£VideoCfg
()

265 
	}
}

268 
	$thªad_videŸøckög_£tmode
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
mode
)

271 
	}
}

273 * 
	$thªad_videŸøckög
(* 
¨g
)

276 
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
 = (t_SwôchTøckög_thªad_∑øm *)
¨g
;

277 
R•Buf
[16];

278 *
R•Buf_p
 = 
R•Buf
;

279 
InqPT_≥ndög
 = 0;

280 
InqZ_≥ndög
 = 0;

281 
AbsPosPídög
 = 0;

282 
R•Lí
;

283 
P™Pos
, 
TûtPos
, 
ZoomPos
;

284 
ö_¥o˚ssög
 = 0;

285 
t_Dëe˘Resu…
 
Dëe˘Resu…
;

286 
acc_of_lo°
 = 0;

287 
limô_À·
 = -400;

288 
limô_right
 = 400;

290 
	`±hªad_dëach
(
	`±hªad_£lf
());

294 
	`debug_¥ötf
("Thread camholder contrlÑunning...\n");

298 if(
p_ˇmhld˘æ
->
thªad_ˇn˚Àd
){

303 if(
p_ˇmhld˘æ
->
öô
 == 0){

304 
	`ReˇŒ
(
p_ˇmhld˘æ
, 0);

305 
p_ˇmhld˘æ
->
öô
 = -1;

308 if(
p_ˇmhld˘æ
->
öô
 == 1){

309 
InqPT_≥ndög
 = 0;

310 
InqZ_≥ndög
 = 0;

311 
P™Pos
 = 0;

312 
TûtPos
 = 0;

313 
ZoomPos
 = 0;

317 
	`ReˇŒ
(
p_ˇmhld˘æ
, 0);

319 
p_ˇmhld˘æ
->
öô
 = 2;

323 if(
	`d©afifo_hód
(&
p_ˇmhld˘æ
->
r•_fifo
)){

324 
	`debug_¥ötf
("%x", 
	`d©afifo_hód
(&
p_ˇmhld˘æ
->
r•_fifo
)->
¨g
.
d©a
[0]);

327 *
R•Buf_p
 = 
	`d©afifo_hód
(&
p_ˇmhld˘æ
->
r•_fifo
)->
¨g
.
d©a
[0];

328 
R•Buf_p
++;

329 
	`d©afifo_c⁄sumî_ªmove_hód
(&
p_ˇmhld˘æ
->
r•_fifo
);

332 if(
R•Buf
[
R•Buf_p
 - RspBuf - 1]==()0xff){

333 
	`debug_¥ötf
("\n");

334 
	`debug_¥ötf
("uartÑesponseÑeceived\n");

336 
R•Lí
 = 
R•Buf_p
 - 
R•Buf
;

337 
R•Buf_p
 = 
R•Buf
;

339 if(
R•Lí
==11){

340 if(
R•Buf
[0]==()0x90 && RspBuf[1]==()0x50){

341 
P™Pos
 = 
	`byã2öt
(&
R•Buf
[2]);

342 
TûtPos
 = 
	`byã2öt
(&
R•Buf
[6]);

343 if(
InqPT_≥ndög
 == 1){

344 
InqPT_≥ndög
 = 2;

345 
	`debug_¥ötf
("PT inqÑeturned\n");

350 if(
R•Lí
 == 7){

351 if(
R•Buf
[0]==()0x90 && RspBuf[1]==()0x50){

352 
ZoomPos
 = 
	`byã2öt
(&
R•Buf
[2]);

353 if(
InqZ_≥ndög
 == 1){

354 
InqZ_≥ndög
 = 2;

355 
	`debug_¥ötf
("Zoom inqÑeturned\n");

360 if(
R•Lí
 == 3){

361 if(
R•Buf
[0]==()0x90 && RspBuf[1]==()0x51){

362 if(
AbsPosPídög
 == 1){

363 
AbsPosPídög
 = 2;

367 if(
R•Lí
 == 4){

368 if(
R•Buf
[0]==()0x90 && RspBuf[1]==()0x60){

369 
AbsPosPídög
 = 0;

370 
InqZ_≥ndög
 = 0;

371 
InqPT_≥ndög
 = 0;

372 
ö_¥o˚ssög
 = 0;

380 if(
InqZ_≥ndög
 =2 && 
InqPT_≥ndög
 == 2){

381 
InqZ_≥ndög
 = 0;

382 
InqPT_≥ndög
 = 0;

385 
off£t
 = ()(
Dëe˘Resu…
.
avg_À·
 + Dëe˘Resu….
avg_right
 -256)/2;

386 
	`debug_¥ötf
("À· = %d,Ñighà%d\n", 
Dëe˘Resu…
.
avg_À·
, Dëe˘Resu….
avg_right
);

387 
võw_™gÀ
 = -(52*
ZoomPos
/16384)+55.2;

388 
∑n_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/100);

389 
ªœtive_pos
 = 1600*
∑n_™gÀ
*180/
M_PI
/120;

390 
de°∑n_pos
 = 
P™Pos
 + 
ªœtive_pos
;

391 
	`debug_¥ötf
("off£à%d, võw_™gÀ = %f,Ö™_™gÀ = %f\n", 
off£t
, 
võw_™gÀ
, 
∑n_™gÀ
*180/
M_PI
);

392 
	`debug_¥ötf
("ªœtive_pos=%d, P™Pos=%d\n", 
ªœtive_pos
, 
P™Pos
);

393 if(
de°∑n_pos
>
limô_right
){

394 
de°∑n_pos
 = 
limô_right
;

397 if(
de°∑n_pos
<
limô_À·
){

398 
de°∑n_pos
 = 
limô_À·
;

401 
	`debug_¥ötf
("£nd AbsPo†comm™d wôh de°∑n_po†0x%x\n", 
de°∑n_pos
);

402 
	`AbsPos
(
p_ˇmhld˘æ
, 
de°∑n_pos
, 
TûtPos
);

403 
AbsPosPídög
 = 1;

406 
ö_¥o˚ssög
 = 2;

410 if(
AbsPosPídög
 =2 && 
ö_¥o˚ssög
 == 2){

411 
AbsPosPídög
 = 0;

412 
ö_¥o˚ssög
 = 3;

416 if(
	`d©afifo_hód
(&
p_ˇmhld˘æ
->
ªq_fifo
)){

419 if(
p_ˇmhld˘æ
->
öô
 != 2){

420 
	`d©afifo_c⁄sumî_ªmove_hód
(&
p_ˇmhld˘æ
->
ªq_fifo
);

427 if(
ö_¥o˚ssög
 == 0){

428 
	`debug_¥ötf
("Thread camhldctrl getá message from fifo\n");

429 
	`MsgDump
((*)
	`d©afifo_hód
(&
p_ˇmhld˘æ
->
ªq_fifo
)->
¨g
.
d©a
);

431 
ö_¥o˚ssög
 = 1;

434 
	`GëDëe˘Resu…
(&
Dëe˘Resu…
, (*)
	`d©afifo_hód
(&
p_ˇmhld˘æ
->
ªq_fifo
)->
¨g
.
d©a
);

437 if(
Dëe˘Resu…
.
dëe˘ed
){

438 
acc_of_lo°
 = 0;

439 
	`GëZoom
(
p_ˇmhld˘æ
);

440 
InqZ_≥ndög
 = 1;

441 
	`GëPos
(
p_ˇmhld˘æ
);

442 
InqPT_≥ndög
 = 1;

445 
acc_of_lo°
++;

446 if(
acc_of_lo°
 == 10){

447 
	`ReˇŒ
(
p_ˇmhld˘æ
, 0);

449 
acc_of_lo°
 = 0;

451 
ö_¥o˚ssög
 = 3;

454 
ö_¥o˚ssög
 = 3;

459 
	`debug_¥ötf
("camholder inÖrocessing\n");

462 
	`d©afifo_c⁄sumî_ªmove_hód
(&
p_ˇmhld˘æ
->
ªq_fifo
);

463 if(
ö_¥o˚ssög
 == 3){

464 
ö_¥o˚ssög
 = 0;

469 
	`u¶ìp
(100*1000);

472 
	`debug_¥ötf
("thread camholder controlÉxit\n");

473 
p_ˇmhld˘æ
->
thªad_ˇn˚Àd
 = 2;

475 
	`±hªad_exô
(0);

476 
	}
}

479 
	$AµInô
()

482 i‡((
modñ
 = 
	`svm_lﬂd_modñ
(
MODEL_FILE
)) == 0) {

483 
	`Ârötf
(
°dîr
, "ˇn'à›í modñ fûê%s\n", 
MODEL_FILE
);

484 
	`exô
(1);

487 
	`lﬂdFótuª
(
FEATURE_FILE
);

488 
	}
}

490 
	$AµDeöô
()

492 
	`svm_de°roy_modñ
(
modñ
);

493 i‡(
Fótuª_Max
 !
NULL
Ë
	`‰ì
(Feature_Max);

494 i‡(
Fótuª_Mö
 !
NULL
Ë
	`‰ì
(Feature_Min);

495 
	}
}

497 
	$EvítVID2df
(
t_d©afifo
* 
df
, *
PåI¡
)

499 
ª˘
 = 
PåI¡
[0];

500 
AvgT›
 = 
PåI¡
[1];

501 
AvgLe·
 = 
PåI¡
[2];

502 
AvgBŸtom
 = 
PåI¡
[3];

503 
AvgRight
 = 
PåI¡
[4];

504 
MaxT›
 = 
PåI¡
[5];

505 
MaxLe·
 = 
PåI¡
[6];

506 
MaxBŸtom
 = 
PåI¡
[7];

507 
MaxRight
 = 
PåI¡
[8];

509 
	`¥ötf
("-->Ñe˘ %d : (%d, %d), (%d, %d)\n", 
ª˘
, 
AvgT›
, 
AvgLe·
, 
AvgBŸtom
, 
AvgRight
);

511 
t_cmd
 
cmd
;

512 
size_t
 
size
;

513 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_EVENT_VID
);

514 i‡(
ª˘
 > 0)

516 
	`add_©å_öt
(&
cmd
, "Detected", 1);

517 
	`add_©å_öt
(&
cmd
, "AvgT›", 
AvgT›
);

518 
	`add_©å_öt
(&
cmd
, "AvgLe·", 
AvgLe·
);

519 
	`add_©å_öt
(&
cmd
, "AvgBŸtom", 
AvgBŸtom
);

520 
	`add_©å_öt
(&
cmd
, "AvgRight", 
AvgRight
);

522 
	`add_©å_öt
(&
cmd
, "MaxT›", 
MaxT›
);

523 
	`add_©å_öt
(&
cmd
, "MaxLe·", 
MaxLe·
);

524 
	`add_©å_öt
(&
cmd
, "MaxBŸtom", 
MaxBŸtom
);

525 
	`add_©å_öt
(&
cmd
, "MaxRight", 
MaxRight
);

530 
	`add_©å_öt
(&
cmd
, "Detected", 0);

533 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

535 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

536 
size
 +
PACKET_HEADER_SIZE
;

539 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

540 
	`d©afifo_¥odu˚r_d©a_add
(
df
, (*)
cmd
.
fuŒbuf
, ()
size
, 
Êags
, 0);

542 
	`debug_¥ötf
("EventVid msg sent\n");

543 
	}
}

545 
	$CamZoom2öã∫Æ
(*
Msg
, 
t_cmd
 *
outmsg
)

547 
t_öã∫Æ_abbr_cmd
 
öã∫Æ_ˇm_cmd
;

548 
	`mem£t
(&
öã∫Æ_ˇm_cmd
, 0, (internal_cam_cmd));

549 
abbr_«me
[16];

551 
cmd
[
CMD_SIZE
+1];

552 
Àn
;

553 *
±r
;

556 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

557 
cmd
[
CMD_SIZE
] = '\0';

559 if(
	`°rcmp
(
cmd
, 
COMMAND_SERVER
)){

560 
	`debug_¥ötf
("Illegal command\n");

564 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

565 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

567 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

569 
Àn
){

570 
«me_Àn
, 
vÆue_Àn
;

571 
©å_«me
[16];

572 
©å_vÆue
[256];

574 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

575 
±r
++;

577 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

578 
±r
 += 4;

580 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

581 
©å_«me
[
«me_Àn
] = '\0';

582 
±r
 +
«me_Àn
;

584 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

585 
©å_vÆue
[
vÆue_Àn
] = '\0';

586 
±r
 +
vÆue_Àn
;

588 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

590 if(!
	`°rcmp
(
©å_«me
, "CamZoom")){

591 if(!
	`°rcmp
(
©å_vÆue
, "Wide")){

592 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CZW");

594 if(!
	`°rcmp
(
©å_vÆue
, "Tele")){

595 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CZT");

599 if(!
	`°rcmp
(
©å_«me
, "Camera")){

600 if(!
	`°rcmp
(
©å_vÆue
, "TeacherSpecial")){

601 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "T");

603 if(!
	`°rcmp
(
©å_vÆue
, "StudentSpecial")){

604 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "S");

609 
	`°r˝y
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
cmd
);

610 
	`°rˇt
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
∑ø1
);

611 
	`debug_¥ötf
("%s\n", 
abbr_«me
);

613 
	`fûl_cmd_hódî
(
outmsg
, 
COMMAND_INTERNAL
);

614 
	`add_©å_öt
(
outmsg
, 
abbr_«me
, 0);

615 
	}
}

617 
	$CamP™Tût2öã∫Æ
(*
Msg
, 
t_cmd
 *
outmsg
)

619 
t_öã∫Æ_abbr_cmd
 
öã∫Æ_ˇm_cmd
;

620 
	`mem£t
(&
öã∫Æ_ˇm_cmd
, 0, (internal_cam_cmd));

621 
abbr_«me
[16];

623 
cmd
[
CMD_SIZE
+1];

624 
Àn
;

625 *
±r
;

628 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

629 
cmd
[
CMD_SIZE
] = '\0';

631 if(
	`°rcmp
(
cmd
, 
COMMAND_SERVER
)){

632 
	`debug_¥ötf
("Illegal command\n");

636 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

637 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

639 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

641 
Àn
){

642 
«me_Àn
, 
vÆue_Àn
;

643 
©å_«me
[16];

644 
©å_vÆue
[256];

646 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

647 
±r
++;

649 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

650 
±r
 += 4;

652 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

653 
©å_«me
[
«me_Àn
] = '\0';

654 
±r
 +
«me_Àn
;

656 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

657 
©å_vÆue
[
vÆue_Àn
] = '\0';

658 
±r
 +
vÆue_Àn
;

660 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

662 if(!
	`°rcmp
(
©å_«me
, "CamPanTilt")){

663 if(!
	`°rcmp
(
©å_vÆue
, "Left")){

664 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CPTL");

666 if(!
	`°rcmp
(
©å_vÆue
, "Right")){

667 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CPTR");

669 if(!
	`°rcmp
(
©å_vÆue
, "Up")){

670 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CPTU");

672 if(!
	`°rcmp
(
©å_vÆue
, "Down")){

673 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CPTD");

677 if(!
	`°rcmp
(
©å_«me
, "Camera")){

678 if(!
	`°rcmp
(
©å_vÆue
, "TeacherSpecial")){

679 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "T");

681 if(!
	`°rcmp
(
©å_vÆue
, "StudentSpecial")){

682 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "S");

687 
	`°r˝y
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
cmd
);

688 
	`°rˇt
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
∑ø1
);

689 
	`debug_¥ötf
("%s\n", 
abbr_«me
);

691 
	`fûl_cmd_hódî
(
outmsg
, 
COMMAND_INTERNAL
);

692 
	`add_©å_öt
(
outmsg
, 
abbr_«me
, 0);

693 
	}
}

695 
	$CamMem‹yInq2öã∫Æ
(*
Msg
, 
t_cmd
 *
outmsg
)

697 
t_öã∫Æ_abbr_cmd
 
öã∫Æ_ˇm_cmd
;

698 
	`mem£t
(&
öã∫Æ_ˇm_cmd
, 0, (internal_cam_cmd));

699 
abbr_«me
[16];

701 
cmd
[
CMD_SIZE
+1];

702 
Àn
;

703 *
±r
;

706 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

707 
cmd
[
CMD_SIZE
] = '\0';

709 if(
	`°rcmp
(
cmd
, 
COMMAND_SERVER
)){

710 
	`debug_¥ötf
("Illegal command\n");

714 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

715 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

717 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

719 
Àn
){

720 
«me_Àn
, 
vÆue_Àn
;

721 
©å_«me
[16];

722 
©å_vÆue
[256];

724 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

725 
±r
++;

727 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

728 
±r
 += 4;

730 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

731 
©å_«me
[
«me_Àn
] = '\0';

732 
±r
 +
«me_Àn
;

734 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

735 
©å_vÆue
[
vÆue_Àn
] = '\0';

736 
±r
 +
vÆue_Àn
;

738 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

740 if(!
	`°rcmp
(
©å_«me
, "CamMemoryInq")){

741 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CMI");

742 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
ötvÆue
, 
©å_vÆue
);

745 if(!
	`°rcmp
(
©å_«me
, "Camera")){

746 if(!
	`°rcmp
(
©å_vÆue
, "TeacherSpecial")){

747 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "T");

749 if(!
	`°rcmp
(
©å_vÆue
, "StudentSpecial")){

750 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "S");

755 
	`°r˝y
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
cmd
);

756 
	`°rˇt
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
∑ø1
);

757 
	`debug_¥ötf
("%s\n", 
abbr_«me
);

759 
	`fûl_cmd_hódî
(
outmsg
, 
COMMAND_INTERNAL
);

760 
	`add_©å_ch¨
(
outmsg
, 
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
ötvÆue
);

761 
	}
}

763 
	$CamMem‹ySave2öã∫Æ
(*
Msg
, 
t_cmd
 *
outmsg
)

765 
t_öã∫Æ_abbr_cmd
 
öã∫Æ_ˇm_cmd
;

766 
	`mem£t
(&
öã∫Æ_ˇm_cmd
, 0, (internal_cam_cmd));

767 
abbr_«me
[16];

769 
cmd
[
CMD_SIZE
+1];

770 
Àn
;

771 *
±r
;

774 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

775 
cmd
[
CMD_SIZE
] = '\0';

777 if(
	`°rcmp
(
cmd
, 
COMMAND_SERVER
)){

778 
	`debug_¥ötf
("Illegal command\n");

782 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

783 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

785 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

787 
Àn
){

788 
«me_Àn
, 
vÆue_Àn
;

789 
©å_«me
[16];

790 
©å_vÆue
[256];

792 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

793 
±r
++;

795 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

796 
±r
 += 4;

798 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

799 
©å_«me
[
«me_Àn
] = '\0';

800 
±r
 +
«me_Àn
;

802 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

803 
©å_vÆue
[
vÆue_Àn
] = '\0';

804 
±r
 +
vÆue_Àn
;

806 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

808 if(!
	`°rcmp
(
©å_«me
, "CamMemorySave")){

809 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
cmd
, "CMS");

810 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
ötvÆue
, 
©å_vÆue
);

813 if(!
	`°rcmp
(
©å_«me
, "Camera")){

814 if(!
	`°rcmp
(
©å_vÆue
, "TeacherSpecial")){

815 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "T");

817 if(!
	`°rcmp
(
©å_vÆue
, "StudentSpecial")){

818 
	`°r˝y
(
öã∫Æ_ˇm_cmd
.
∑ø1
, "S");

823 
	`°r˝y
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
cmd
);

824 
	`°rˇt
(
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
∑ø1
);

825 
	`debug_¥ötf
("%s\n", 
abbr_«me
);

827 
	`fûl_cmd_hódî
(
outmsg
, 
COMMAND_INTERNAL
);

828 
	`add_©å_ch¨
(
outmsg
, 
abbr_«me
, 
öã∫Æ_ˇm_cmd
.
ötvÆue
);

829 
	}
}

831 
	$In°ru˘‹MsgH™dÀ
(
t_ö°ru˘‹_thªad_∑øm
 *
ö°ru˘‹_thªad_∑øm
, *
Msg
)

833 
cmd
[
CMD_SIZE
+1];

834 
Àn
;

835 *
±r
;

836 
Êags
;

838 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

839 
cmd
[
CMD_SIZE
] = '\0';

841 if(
	`°rcmp
(
cmd
, 
COMMAND_SERVER
)){

842 
	`debug_¥ötf
("Illegal command\n");

846 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

847 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

849 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

851 
Àn
){

852 
«me_Àn
, 
vÆue_Àn
;

853 
©å_«me
[16];

854 
©å_vÆue
[256];

856 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

857 
±r
++;

859 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

860 
±r
 += 4;

862 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

863 
©å_«me
[
«me_Àn
] = '\0';

864 
±r
 +
«me_Àn
;

866 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

867 
©å_vÆue
[
vÆue_Àn
] = '\0';

868 
±r
 +
vÆue_Àn
;

870 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

872 if(!
	`°rcmp
(
©å_«me
, "Start")){

873 if(
ö°ru˘‹_thªad_∑øm
->
°©us
 =
RECBC_IDLE
){

874 
size_t
 
size
;

875 
t_cmd
 
outmsg
;

877 
RegVÆ
;

878 
RegVÆ
 = 0;

879 if(
ö°ru˘‹_thªad_∑øm
->
c‹eA_thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 != -1){

880 
RegVÆ
 |= 1;

882 if(
ö°ru˘‹_thªad_∑øm
->
c‹eB_thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 != -1){

883 
RegVÆ
 |= 2;

885 if(
ö°ru˘‹_thªad_∑øm
->
c‹eC_thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 != -1){

886 
RegVÆ
 |= 4;

888 if(
ö°ru˘‹_thªad_∑øm
->
c‹eD_thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 != -1){

889 
RegVÆ
 |= 8;

891 
	`debug_¥ötf
("RegVÆ=%x\n", 
RegVÆ
);

893 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SET_LED
);

894 
	`add_©å_öt
(&
outmsg
, "Reg", 
RegVÆ
);

895 
	`add_©å_öt
(&
outmsg
, "Reg_09", 
g_ªg_09
);

896 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

897 
size
 +
PACKET_HEADER_SIZE
;

898 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

899 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

901 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_INTERNAL
);

902 
	`add_©å_öt
(&
outmsg
, "Start", 1);

903 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

904 
size
 +
PACKET_HEADER_SIZE
;

906 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

907 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

909 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_CONFIG
);

912 
	`add_©å_öt
(&
outmsg
, "FrameWidth", 1920);

913 
	`add_©å_öt
(&
outmsg
, "FrameHeight", 1080);

914 
	`add_©å_öt
(&
outmsg
, "FømeR©e", 
g_cfg
.
‰ame_øã
);

915 
	`add_©å_öt
(&
outmsg
, "BôR©e", 
g_cfg
.
bôøã
);

916 
	`add_©å_öt
(&
outmsg
, "LBôR©e", 
g_cfg
.
live_bôøã
);

925 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

927 
size
 +
PACKET_HEADER_SIZE
;

929 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

930 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

932 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_GETDATA
);

933 
	`add_©å_ch¨
(&
outmsg
, "Type", "All");

935 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

936 
size
 +
PACKET_HEADER_SIZE
;

938 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

939 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

940 
ö°ru˘‹_thªad_∑øm
->
°©us
 = 
RECBC_WORKING
;

944 if(!
	`°rcmp
(
©å_«me
, "Stop")){

945 if(
ö°ru˘‹_thªad_∑øm
->
°©us
 =
RECBC_WORKING
){

946 
size_t
 
size
;

947 
t_cmd
 
outmsg
;

949 
RegVÆ
 = 0;

950 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SET_LED
);

951 
	`add_©å_öt
(&
outmsg
, "Reg", 
RegVÆ
);

952 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

953 
size
 +
PACKET_HEADER_SIZE
;

954 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

955 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

957 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_INTERNAL
);

958 
	`add_©å_öt
(&
outmsg
, "Stop", 1);

959 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

960 
size
 +
PACKET_HEADER_SIZE
;

962 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

963 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

965 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_GETDATA
);

966 
	`add_©å_ch¨
(&
outmsg
, "Type", "None");

968 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

969 
size
 +
PACKET_HEADER_SIZE
;

971 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

972 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

973 
ö°ru˘‹_thªad_∑øm
->
°©us
 = 
RECBC_IDLE
;

977 if(!
	`°rcmp
(
©å_«me
, "Pause")){

978 if(
ö°ru˘‹_thªad_∑øm
->
°©us
 =
RECBC_WORKING
){

979 
size_t
 
size
;

980 
t_cmd
 
outmsg
;

982 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_INTERNAL
);

983 
	`add_©å_öt
(&
outmsg
, "Pause", 1);

985 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

986 
size
 +
PACKET_HEADER_SIZE
;

988 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

989 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

993 if(!
	`°rcmp
(
©å_«me
, "Resume")){

994 if(
ö°ru˘‹_thªad_∑øm
->
°©us
 =
RECBC_WORKING
){

995 
size_t
 
size
;

996 
t_cmd
 
outmsg
;

998 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_INTERNAL
);

999 
	`add_©å_öt
(&
outmsg
, "Resume", 1);

1001 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

1002 
size
 +
PACKET_HEADER_SIZE
;

1004 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1005 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

1009 if(!
	`°rcmp
(
©å_«me
, "SwitchVideo")){

1010 
size_t
 
size
;

1011 
t_cmd
 
outmsg
;

1013 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_INTERNAL
);

1014 
	`add_©å_ch¨
(&
outmsg
, 
©å_«me
, 
©å_vÆue
);

1016 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

1017 
size
 +
PACKET_HEADER_SIZE
;

1019 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1020 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

1023 if(!
	`°rcmp
(
©å_«me
, "SetRecordMode")){

1024 
size_t
 
size
;

1025 
t_cmd
 
outmsg
;

1027 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_INTERNAL
);

1028 
	`add_©å_ch¨
(&
outmsg
, 
©å_«me
, 
©å_vÆue
);

1030 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

1031 
size
 +
PACKET_HEADER_SIZE
;

1033 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1034 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

1037 if(!
	`°rcmp
(
©å_«me
, "CamZoom")){

1038 
size_t
 
size
;

1039 
t_cmd
 
outmsg
;

1041 
	`CamZoom2öã∫Æ
(
Msg
, &
outmsg
);

1043 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

1044 
size
 +
PACKET_HEADER_SIZE
;

1046 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1047 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

1050 if(!
	`°rcmp
(
©å_«me
, "CamPanTilt")){

1051 
size_t
 
size
;

1052 
t_cmd
 
outmsg
;

1054 
	`CamP™Tût2öã∫Æ
(
Msg
, &
outmsg
);

1056 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

1057 
size
 +
PACKET_HEADER_SIZE
;

1059 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1060 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

1063 if(!
	`°rcmp
(
©å_«me
, "CamMemoryInq")){

1064 
size_t
 
size
;

1065 
t_cmd
 
outmsg
;

1067 
	`CamMem‹yInq2öã∫Æ
(
Msg
, &
outmsg
);

1069 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

1070 
size
 +
PACKET_HEADER_SIZE
;

1072 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1073 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

1076 if(!
	`°rcmp
(
©å_«me
, "CamMemorySave")){

1077 
size_t
 
size
;

1078 
t_cmd
 
outmsg
;

1080 
	`CamMem‹ySave2öã∫Æ
(
Msg
, &
outmsg
);

1082 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

1083 
size
 +
PACKET_HEADER_SIZE
;

1085 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1086 
	`d©afifo_¥odu˚r_d©a_add
(
ö°ru˘‹_thªad_∑øm
->
¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

1090 
	`debug_¥ötf
("Server message handled\n");

1091 
	}
}

1093 
	$DevAMsgH™dÀ
(
t_c‹eA_thªad_∑øm
 *
thªad_∑øm
, *
Msg
)

1095 
cmd
[
CMD_SIZE
+1];

1096 
Àn
;

1097 *
±r
;

1099 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

1100 
cmd
[
CMD_SIZE
] = '\0';

1102 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

1105 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

1107 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_UCI
)){

1109 
ch™√l
 = 0;

1110 
Àn
){

1111 
«me_Àn
, 
vÆue_Àn
;

1112 
©å_«me
[16];

1113 
©å_vÆue
[1536];

1114 
t_‰ame_öfo
 
‰ame_öfo
;

1116 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1117 
±r
++;

1119 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1120 
±r
 += 4;

1122 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1123 
©å_«me
[
«me_Àn
] = '\0';

1124 
±r
 +
«me_Àn
;

1126 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1127 
©å_vÆue
[
vÆue_Àn
] = '\0';

1128 
±r
 +
vÆue_Àn
;

1130 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1132 if(!
	`°rcmp
(
©å_«me
, "Info")){

1139 
	`mem˝y
(&
‰ame_öfo
, 
©å_vÆue
, 
vÆue_Àn
);

1154 if(!
	`°rcmp
(
©å_«me
, "StreamId")){

1155 if(!
	`°rcmp
(
©å_vÆue
, "00")){

1156 
ch™√l
 = 0;

1159 
ch™√l
 =1;

1163 if(!
	`°rcmp
(
©å_«me
, "Data")){

1164 
Êags
 = 0;

1166 if(
‰ame_öfo
.
∑ckë_num
 == 0){

1167 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1168 if(
‰ame_öfo
.
‰ame_num
 == 0){

1169 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1173 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1174 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1177 
ªt
;

1178 if(
ch™√l
){

1179 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
ImgM_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, 0);

1182 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
ImgV_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, 0);

1185 if(
ªt
 < 0){

1186 
	`debug_¥ötf
("ucòadd faû:%d, %x, %d\n", 
ªt
, 
Êags
, 
vÆue_Àn
);

1192 if(!
	`°rcmp
(
cmd
, 
COMMAND_GETDATA_ACK
)){

1193 
ch™√l
 = 0;

1194 
Àn
){

1195 
«me_Àn
, 
vÆue_Àn
;

1196 
©å_«me
[16];

1197 
©å_vÆue
[1536];

1198 
t_‰ame_öfo
 
‰ame_öfo
;

1200 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1201 
±r
++;

1203 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1204 
±r
 += 4;

1206 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1207 
©å_«me
[
«me_Àn
] = '\0';

1208 
±r
 +
«me_Àn
;

1210 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1211 
©å_vÆue
[
vÆue_Àn
] = '\0';

1212 
±r
 +
vÆue_Àn
;

1214 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1216 if(!
	`°rcmp
(
©å_«me
, "StreamId")){

1217 if(!
	`°rcmp
(
©å_vÆue
, "00")){

1218 
ch™√l
 = 0;

1221 
ch™√l
 = 1;

1225 if(!
	`°rcmp
(
©å_«me
, "Info")){

1232 
	`mem˝y
(&
‰ame_öfo
, 
©å_vÆue
, 
vÆue_Àn
);

1247 if(!
	`°rcmp
(
©å_«me
, "Data")){

1248 
Êags
 = 0;

1250 if(
‰ame_öfo
.
‰ame_ty≥
 =
FRMTYPE_AUDIO
)

1252 
Êags
 |
FRAME_FLAG_AUDIOFRM
;

1253 if(
‰ame_öfo
.
∑ckë_num
 == 0)

1255 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1256 if(
‰ame_öfo
.
‰ame_num
 == 0)

1258 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1261 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1262 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1268 if(
‰ame_öfo
.
∑ckë_num
 == 0)

1270 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1271 if(
‰ame_öfo
.
‰ame_num
 == 0)

1273 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1275 if((
‰ame_öfo
.
‰ame_ty≥
 =
FRMTYPE_VIDEO_I
Ë||(‰ame_öfo.‰ame_ty≥ =
FRMTYPE_VIDEO_IDR
))

1277 
Êags
 |
FRAME_FLAG_KEYFRAME
;

1282 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1283 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1288 if(
Êags
 & 
FRAME_FLAG_AUDIOFRM
){

1290 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Audio_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, ()
‰ame_öfo
.
time_°amp
);

1291 if(
ªt
 < 0){

1292 
	`debug_¥ötf
("ad©®add faû:%d, %x, %d\n", 
ªt
, 
Êags
, 
vÆue_Àn
);

1297 
ªt
;

1298 if(
ch™√l
==0){

1299 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
V°‹e_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, ()
‰ame_öfo
.
time_°amp
);

1302 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Vlive_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, ()
‰ame_öfo
.
time_°amp
);

1304 if(
ªt
 < 0){

1305 
	`debug_¥ötf
("vd©®add faû:%d, %x, %d\n", 
ªt
, 
Êags
, 
vÆue_Àn
);

1312 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

1313 
Êags
;

1314 
	`debug_¥ötf
("Event videoÑeceived\n");

1315 
Àn
 +
PACKET_HEADER_SIZE
;

1316 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1317 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1320 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VGA
)){

1321 
Êags
;

1322 
	`debug_¥ötf
("Event VGAÑeceived\n");

1323 
Àn
 +
PACKET_HEADER_SIZE
;

1324 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1325 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1328 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_AUX
)){

1329 
Êags
;

1330 
	`debug_¥ötf
("Event AUXÑeceived\n");

1331 
Àn
 +
PACKET_HEADER_SIZE
;

1332 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1333 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1336 if(!
	`°rcmp
(
cmd
, 
COMMAND_BYP_RSP
)){

1338 
ch™√l
 = 0;

1339 
Àn
){

1340 
«me_Àn
, 
vÆue_Àn
;

1341 
©å_«me
[16];

1342 
©å_vÆue
[1536];

1344 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1345 
±r
++;

1347 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1348 
±r
 += 4;

1350 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1351 
©å_«me
[
«me_Àn
] = '\0';

1352 
±r
 +
«me_Àn
;

1354 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1355 
©å_vÆue
[
vÆue_Àn
] = '\0';

1356 
±r
 +
vÆue_Àn
;

1358 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1360 if(!
	`°rcmp
(
©å_«me
, "Channel")){

1361 if(!
	`°rcmp
(
©å_vÆue
, "0")){

1362 
ch™√l
 = 0;

1365 
ch™√l
 = 1;

1369 if(!
	`°rcmp
(
©å_«me
, "RawBytes")){

1370 
i
;

1371 if(
ch™√l
){

1372 
i
=0; i<
vÆue_Àn
; i++){

1373 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
UART_RX_¥odu˚r_fifo_2
, (*)&
©å_vÆue
[
i
], 1, 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
, 0);

1377 
i
=0; i<
vÆue_Àn
; i++){

1378 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
UART_RX_¥odu˚r_fifo_1
, (*)&
©å_vÆue
[
i
], 1, 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
, 0);

1386 
	}
}

1388 
	$DevBCMsgH™dÀ
(
t_c‹eBC_thªad_∑øm
 *
thªad_∑øm
, *
Msg
)

1390 
cmd
[
CMD_SIZE
+1];

1391 
Àn
;

1392 *
±r
;

1394 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

1395 
cmd
[
CMD_SIZE
] = '\0';

1397 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

1400 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

1402 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_UCI
)){

1403 
ch™√l
 = 0;

1404 
Àn
){

1405 
«me_Àn
, 
vÆue_Àn
;

1406 
©å_«me
[16];

1407 
©å_vÆue
[1536];

1408 
t_‰ame_öfo
 
‰ame_öfo
;

1410 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1411 
±r
++;

1413 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1414 
±r
 += 4;

1416 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1417 
©å_«me
[
«me_Àn
] = '\0';

1418 
±r
 +
«me_Àn
;

1420 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1421 
©å_vÆue
[
vÆue_Àn
] = '\0';

1422 
±r
 +
vÆue_Àn
;

1424 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1426 if(!
	`°rcmp
(
©å_«me
, "Info")){

1433 
	`mem˝y
(&
‰ame_öfo
, 
©å_vÆue
, 
vÆue_Àn
);

1448 if(!
	`°rcmp
(
©å_«me
, "StreamId")){

1449 if(!
	`°rcmp
(
©å_vÆue
, "00")){

1450 
ch™√l
 = 0;

1453 
ch™√l
 =1;

1457 if(!
	`°rcmp
(
©å_«me
, "Data")){

1458 
Êags
 = 0;

1460 if(
‰ame_öfo
.
∑ckë_num
 == 0){

1461 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1462 if(
‰ame_öfo
.
‰ame_num
 == 0){

1463 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1467 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1468 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1471 
ªt
=0;

1472 if(
ch™√l
){

1473 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Img2_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, 0);

1476 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Img1_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, 0);

1479 if(
ªt
 < 0){

1480 
	`debug_¥ötf
("ucòadd faû:%d, %x, %d\n", 
ªt
, 
Êags
, 
vÆue_Àn
);

1486 if(!
	`°rcmp
(
cmd
, 
COMMAND_GETDATA_ACK
)){

1487 
ch™√l
 = 0;

1488 
Àn
){

1489 
«me_Àn
, 
vÆue_Àn
;

1490 
©å_«me
[16];

1491 
©å_vÆue
[1536];

1492 
t_‰ame_öfo
 
‰ame_öfo
;

1494 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1495 
±r
++;

1497 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1498 
±r
 += 4;

1500 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1501 
©å_«me
[
«me_Àn
] = '\0';

1502 
±r
 +
«me_Àn
;

1504 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1505 
©å_vÆue
[
vÆue_Àn
] = '\0';

1506 
±r
 +
vÆue_Àn
;

1508 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1510 if(!
	`°rcmp
(
©å_«me
, "StreamId")){

1511 if(!
	`°rcmp
(
©å_vÆue
, "00")){

1512 
ch™√l
 = 0;

1515 
ch™√l
 = 1;

1519 if(!
	`°rcmp
(
©å_«me
, "Info")){

1526 
	`mem˝y
(&
‰ame_öfo
, 
©å_vÆue
, 
vÆue_Àn
);

1541 if(!
	`°rcmp
(
©å_«me
, "Data")){

1542 
Êags
 = 0;

1544 if(
‰ame_öfo
.
‰ame_ty≥
 =
FRMTYPE_AUDIO
)

1546 
Êags
 |
FRAME_FLAG_AUDIOFRM
;

1547 if(
‰ame_öfo
.
∑ckë_num
 == 0)

1549 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1550 if(
‰ame_öfo
.
‰ame_num
 == 0)

1552 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1555 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1556 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1562 if(
‰ame_öfo
.
∑ckë_num
 == 0)

1564 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1565 if(
‰ame_öfo
.
‰ame_num
 == 0)

1567 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1569 if((
‰ame_öfo
.
‰ame_ty≥
 =
FRMTYPE_VIDEO_I
Ë||(‰ame_öfo.‰ame_ty≥ =
FRMTYPE_VIDEO_IDR
))

1571 
Êags
 |
FRAME_FLAG_KEYFRAME
;

1576 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1577 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1582 if(
Êags
 & 
FRAME_FLAG_AUDIOFRM
){

1587 
ªt
;

1588 if(
ch™√l
){

1589 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
V2_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, ()
‰ame_öfo
.
time_°amp
);

1592 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
V1_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, ()
‰ame_öfo
.
time_°amp
);

1594 if(
ªt
 < 0){

1595 
	`debug_¥ötf
("vd©®add faû:%d, %x, %d\n", 
ªt
, 
Êags
, 
vÆue_Àn
);

1602 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

1603 
Êags
;

1604 
	`debug_¥ötf
("Event videoÑeceived\n");

1605 
Àn
 +
PACKET_HEADER_SIZE
;

1606 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1607 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1610 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VGA
)){

1611 
Êags
;

1612 
	`debug_¥ötf
("Event VGAÑeceived\n");

1613 
Àn
 +
PACKET_HEADER_SIZE
;

1614 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1615 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1618 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_AUX
)){

1619 
Êags
;

1620 
	`debug_¥ötf
("Event AUXÑeceived\n");

1621 
Àn
 +
PACKET_HEADER_SIZE
;

1622 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1623 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1626 if(!
	`°rcmp
(
cmd
, 
COMMAND_BYP_RSP
)){

1628 
ch™√l
 = 0;

1629 
Àn
){

1630 
«me_Àn
, 
vÆue_Àn
;

1631 
©å_«me
[16];

1632 
©å_vÆue
[1536];

1634 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1635 
±r
++;

1637 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1638 
±r
 += 4;

1640 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1641 
©å_«me
[
«me_Àn
] = '\0';

1642 
±r
 +
«me_Àn
;

1644 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1645 
©å_vÆue
[
vÆue_Àn
] = '\0';

1646 
±r
 +
vÆue_Àn
;

1648 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1650 if(!
	`°rcmp
(
©å_«me
, "Channel")){

1651 if(!
	`°rcmp
(
©å_vÆue
, "0")){

1652 
ch™√l
 = 0;

1655 
ch™√l
 = 1;

1659 if(!
	`°rcmp
(
©å_«me
, "RawBytes")){

1660 
i
;

1661 if(
ch™√l
){

1662 
i
=0; i<
vÆue_Àn
; i++){

1663 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
UART_RX_¥odu˚r_fifo_2
, (*)&
©å_vÆue
[
i
], 1, 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
, 0);

1667 
i
=0; i<
vÆue_Àn
; i++){

1668 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
UART_RX_¥odu˚r_fifo_1
, (*)&
©å_vÆue
[
i
], 1, 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
, 0);

1676 
	}
}

1678 
	$DevDMsgH™dÀ
(
t_c‹eD_thªad_∑øm
 *
thªad_∑øm
, *
Msg
)

1680 
cmd
[
CMD_SIZE
+1];

1681 
Àn
;

1682 *
±r
;

1684 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

1685 
cmd
[
CMD_SIZE
] = '\0';

1687 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

1690 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

1692 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_UCI
)){

1693 
ch™√l
 = 0;

1694 
Àn
){

1695 
«me_Àn
, 
vÆue_Àn
;

1696 
©å_«me
[16];

1697 
©å_vÆue
[1536];

1698 
t_‰ame_öfo
 
‰ame_öfo
;

1700 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1701 
±r
++;

1703 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1704 
±r
 += 4;

1706 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1707 
©å_«me
[
«me_Àn
] = '\0';

1708 
±r
 +
«me_Àn
;

1710 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1711 
©å_vÆue
[
vÆue_Àn
] = '\0';

1712 
±r
 +
vÆue_Àn
;

1714 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1716 if(!
	`°rcmp
(
©å_«me
, "Info")){

1723 
	`mem˝y
(&
‰ame_öfo
, 
©å_vÆue
, 
vÆue_Àn
);

1738 if(!
	`°rcmp
(
©å_«me
, "StreamId")){

1739 if(!
	`°rcmp
(
©å_vÆue
, "00")){

1740 
ch™√l
 = 0;

1743 
ch™√l
 =1;

1747 if(!
	`°rcmp
(
©å_«me
, "Data")){

1748 
Êags
 = 0;

1750 if(
‰ame_öfo
.
∑ckë_num
 == 0){

1751 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1752 if(
‰ame_öfo
.
‰ame_num
 == 0){

1753 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1757 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1758 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1761 
ªt
;

1762 if(
ch™√l
){

1763 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Img2_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, 0);

1766 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Img1_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, 0);

1769 if(
ªt
 < 0){

1770 
	`debug_¥ötf
("ucòadd faû:%d, %x, %d\n", 
ªt
, 
Êags
, 
vÆue_Àn
);

1776 if(!
	`°rcmp
(
cmd
, 
COMMAND_GETDATA_ACK
)){

1777 
ch™√l
 = 0;

1778 
Àn
){

1779 
«me_Àn
, 
vÆue_Àn
;

1780 
©å_«me
[16];

1781 
©å_vÆue
[1536];

1782 
t_‰ame_öfo
 
‰ame_öfo
;

1784 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

1785 
±r
++;

1787 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

1788 
±r
 += 4;

1790 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

1791 
©å_«me
[
«me_Àn
] = '\0';

1792 
±r
 +
«me_Àn
;

1794 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

1795 
©å_vÆue
[
vÆue_Àn
] = '\0';

1796 
±r
 +
vÆue_Àn
;

1798 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

1800 if(!
	`°rcmp
(
©å_«me
, "StreamId")){

1801 if(!
	`°rcmp
(
©å_vÆue
, "00")){

1802 
ch™√l
 = 0;

1805 
ch™√l
 = 1;

1809 if(!
	`°rcmp
(
©å_«me
, "Info")){

1816 
	`mem˝y
(&
‰ame_öfo
, 
©å_vÆue
, 
vÆue_Àn
);

1831 if(!
	`°rcmp
(
©å_«me
, "Data")){

1832 
Êags
 = 0;

1834 if(
‰ame_öfo
.
‰ame_ty≥
 =
FRMTYPE_AUDIO
)

1836 
Êags
 |
FRAME_FLAG_AUDIOFRM
;

1837 if(
‰ame_öfo
.
∑ckë_num
 == 0)

1839 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1840 if(
‰ame_öfo
.
‰ame_num
 == 0)

1842 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1845 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1846 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1852 if(
‰ame_öfo
.
∑ckë_num
 == 0)

1854 
Êags
 |
FRAME_FLAG_NEWFRAME
;

1855 if(
‰ame_öfo
.
‰ame_num
 == 0)

1857 
Êags
 |
FRAME_FLAG_FIRSTFRAME
;

1859 if((
‰ame_öfo
.
‰ame_ty≥
 =
FRMTYPE_VIDEO_I
Ë||(‰ame_öfo.‰ame_ty≥ =
FRMTYPE_VIDEO_IDR
))

1861 
Êags
 |
FRAME_FLAG_KEYFRAME
;

1866 if(
‰ame_öfo
.
∑ckë_num
 =‰ame_öfo.
pkts_ö_‰ame
-1){

1867 
Êags
 |
FRAME_FLAG_FRAMEEND
;

1872 if(
Êags
 & 
FRAME_FLAG_AUDIOFRM
){

1877 
ªt
;

1878 if(
ch™√l
){

1879 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
V2_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, ()
‰ame_öfo
.
time_°amp
);

1882 
ªt
 = 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
V1_¥odu˚r_fifo
, (*)
©å_vÆue
, ()
vÆue_Àn
, 
Êags
, ()
‰ame_öfo
.
time_°amp
);

1884 if(
ªt
 < 0){

1885 
	`debug_¥ötf
("vd©®add faû:%d, %x, %d\n", 
ªt
, 
Êags
, 
vÆue_Àn
);

1892 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

1893 
Êags
;

1894 
	`debug_¥ötf
("Event videoÑeceived\n");

1895 
Àn
 +
PACKET_HEADER_SIZE
;

1896 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1897 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1900 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VGA
)){

1901 
Êags
;

1902 
	`debug_¥ötf
("Event VGAÑeceived\n");

1903 
Àn
 +
PACKET_HEADER_SIZE
;

1904 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1905 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1908 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_AUX
)){

1909 
Êags
;

1910 
	`debug_¥ötf
("Event AUXÑeceived\n");

1911 
Àn
 +
PACKET_HEADER_SIZE
;

1912 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

1913 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Evít_¥odu˚r_fifo
, (*)
Msg
, ()
Àn
, 
Êags
, 0);

1917 
	}
}

1921 
	$RunDevi˚
()

1924 
p‹t
 = 3000;

1926 
sockaddr_ö
 
˛i
;

1927 
fd_£t
 
fd§
;

1928 
timevÆ
 
tv
;

1929 
ªt
;

1930 
devi˚_disc⁄√˘ed
=0, 
£rvî_disc⁄√˘ed
 =0;

1932 
t_rundevi˚
 
rundev
;

1933 
t_loˇlßve
 
loˇlßve
;

1934 
t_ˇmhﬁdî˘æ
 
ˇmhld˘æ
;

1935 
t_videﬂ«lyze
 
videﬂ«lyze
;

1937 
rundev
.
swôched
 = 0;

1938 
rundev
.
p_ˇmhld˘æ
 = &
ˇmhld˘æ
;

1940 
±hªad_t
 
±_loˇlßve_id
;

1941 
±hªad_t
 
±_ˇmhld˘æ_id
;

1942 
±hªad_t
 
±_videﬂ«lyze_id
;

1945 
rundev
.
sock_dev
 = 
sock_li°
[0];

1948 
	`d©afifo_öô
(&
rundev
.
mux_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

1949 
	`d©afifo_öô
(&
rundev
.
audio_fifo
, 
AINBUF_SIZE
, 
AINBUF_CNT
);

1950 
	`d©afifo_öô
(&
rundev
.
ˇmhldReq_fifo
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

1951 
	`d©afifo_öô
(&
rundev
.
ˇmhldR•_fifo
, 
BYPBUF_SIZE
, 
BYPBUF_CNT
);

1952 
	`d©afifo_öô
(&
rundev
.
uci_fifo
, 
VINBUF_SIZE
*36, 
EINBUF_CNT
);

1953 
	`d©afifo_öô
(&
ˇmhld˘æ
.
˘æ_fifo
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

1954 
	`d©afifo_öô
(&
videﬂ«lyze
.
™Æyze_¥odu˚r_fifo
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

1956 
	`d©afifo_öô
(&
rundev
.
c⁄sumî_fifo
, 0, 
EINBUF_CNT
);

1957 
	`d©afifo_c⁄√˘
(&
ˇmhld˘æ
.
˘æ_fifo
, &
rundev
.
c⁄sumî_fifo
);

1959 
	`d©afifo_öô
(&
loˇlßve
.
av_fifo
, 0, 
VINBUF_CNT
+
AINBUF_CNT
);

1960 
	`d©afifo_c⁄√˘
(&
rundev
.
mux_fifo
, &
loˇlßve
.
av_fifo
);

1961 
	`d©afifo_c⁄√˘
(&
rundev
.
audio_fifo
, &
loˇlßve
.
av_fifo
);

1963 
	`d©afifo_öô
(&
ˇmhld˘æ
.
ªq_fifo
, 0, 
EINBUF_CNT
);

1964 
	`d©afifo_c⁄√˘
(&
rundev
.
ˇmhldReq_fifo
, &
ˇmhld˘æ
.
ªq_fifo
);

1965 
	`d©afifo_c⁄√˘
(&
videﬂ«lyze
.
™Æyze_¥odu˚r_fifo
, &
ˇmhld˘æ
.
ªq_fifo
);

1967 
	`d©afifo_öô
(&
ˇmhld˘æ
.
r•_fifo
, 0, 
BYPBUF_CNT
);

1968 
	`d©afifo_c⁄√˘
(&
rundev
.
ˇmhldR•_fifo
, &
ˇmhld˘æ
.
r•_fifo
);

1970 
	`d©afifo_öô
(&
videﬂ«lyze
.
uci_c⁄sumî_fifo
, 0, 
EINBUF_CNT
);

1971 
	`d©afifo_c⁄√˘
(&
rundev
.
uci_fifo
, &
videﬂ«lyze
.
uci_c⁄sumî_fifo
);

1974 
loˇlßve
.
thªad_ˇn˚Àd
 = 0;

1975 
loˇlßve
.
df_a
 = &
rundev
.
audio_fifo
;

1976 
loˇlßve
.
df_v
 = &
rundev
.
mux_fifo
;

1977 
loˇlßve
.
sock
 = -1;

1978 
ªt
 = 
	`±hªad_¸óã
(&
±_loˇlßve_id
, 
NULL
, 
thªad_loˇlßve
, (*)&
loˇlßve
);

1979 if(
ªt
<0){

1980 
	`debug_¥ötf
("createÅhread_localsave failed\n");

1981 
	`exô
(0);

1984 
ˇmhld˘æ
.
thªad_ˇn˚Àd
 = 0;

1985 
ˇmhld˘æ
.
öô
 = 0;

1986 
ªt
 = 
	`±hªad_¸óã
(&
±_ˇmhld˘æ_id
, 
NULL
, 
thªad_videŸøckög
, (*)&
ˇmhld˘æ
);

1987 if(
ªt
<0){

1988 
	`debug_¥ötf
("createÅhread_camhldctrl failed\n");

1989 
	`exô
(0);

1992 
videﬂ«lyze
.
thªad_ˇn˚Àd
 = 0;

1993 
ªt
 = 
	`±hªad_¸óã
(&
±_videﬂ«lyze_id
, 
NULL
, 
thªad_™Æyze
, (*)&
videﬂ«lyze
);

1994 if(
ªt
<0){

1995 
	`debug_¥ötf
("createÅhread_videoanalyze failed\n");

1996 
	`exô
(0);

2000 
˛i
.
sö_Ámûy
 = 
AF_INET
;

2001 
˛i
.
sö_p‹t
 = 
	`ht⁄s
(3001);

2002 
˛i
.
sö_addr
.
s_addr
 = 
	`öë_addr
("127.0.0.1");

2004 
loˇlßve
.
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

2005 if(
loˇlßve
.
sock
<0){

2006 
	`debug_¥ötf
("open socketÉrror\n");

2007 
	`exô
(1);

2009 
	`debug_¥ötf
("connectingÅo streaming server...");

2012 
¢dbufsize
 = 500*1024;

2013 if(
	`£tsock›t
(
loˇlßve
.
sock
, 
SOL_SOCKET
, 
SO_SNDBUF
, (c⁄° *)&
¢dbufsize
, (sndbufsize))==-1){

2014 
	`debug_¥ötf
("setsockeopt failed\n");

2017 if(
	`c⁄√˘
(
loˇlßve
.
sock
, (
sockaddr
*)&
˛i
, (cli))<0){

2018 
	`debug_¥ötf
("couldÇot connectÅo streaming server\n");

2019 
	`˛o£
(
loˇlßve
.
sock
);

2020 
loˇlßve
.
sock
 = -1;

2023 
	`debug_¥ötf
("connected\n");

2024 
pkt_buf
[32];

2025 
t_°ªamög_∑ckë_hódî
 *
±r
 = (t_°ªamög_∑ckë_hódî *)
pkt_buf
;

2027 
±r
->
size
 = 
	`°æí
(
CfgDú
)+1;

2028 
±r
->
ty≥
 = 
PACKET_TYPE_ID
;

2029 
±r
->
time°amp
 = 0;

2030 
±r
->
Êag
 = 0;

2031 
	`°r˝y
(&
pkt_buf
[
STREAMING_PACKET_HEADER_LENGTH
], 
CfgDú
);

2032 
	`£nd
(
loˇlßve
.
sock
, 
pkt_buf
, 
±r
->
size
 + 
STREAMING_PACKET_HEADER_LENGTH
, 0);

2038 
˛i
.
sö_Ámûy
 = 
AF_INET
;

2039 
˛i
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

2040 
˛i
.
sö_addr
.
s_addr
 = 
	`öë_addr
("127.0.0.1");

2042 
rundev
.
sock_§v
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

2043 if(
rundev
.
sock_§v
<0){

2044 
	`debug_¥ötf
("open socketÉrror\n");

2045 
	`exô
(1);

2048 
	`debug_¥ötf
("connectingÅo server...");

2051 if(
	`c⁄√˘
(
rundev
.
sock_§v
, (
sockaddr
*)&
˛i
, (cli))<0){

2052 
	`debug_¥ötf
("connectÉrror\n");

2053 
	`˛o£
(
rundev
.
sock_§v
);

2054 
	`¶ìp
(30);

2061 
	`debug_¥ötf
("connected\n");

2063 
	`LﬂdVideoCfg
();

2070 if(
rundev
.
swôched
){

2071 
timevÆ
 
swi_tv
;

2072 
	`gëtimeofday
(&
swi_tv
, 
NULL
);

2073 
dë
 = (
swi_tv
.
tv_£c
 - 
rundev
.
tv
.tv_£c)+(swi_tv.
tv_u£c
 -Ñundev.tv.tv_usec)/1000000;

2074 
	`debug_¥ötf
("dë = %d\n", 
dë
);

2075 if(
dë
>=7){

2076 
size_t
 
size
;

2077 
t_cmd
 
outmsg
;

2078 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_MERGECTRL
);

2079 
	`add_©å_öt
(&
outmsg
, "MergeSrc", 0);

2081 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

2082 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

2083 
	`£nd
(
rundev
.
sock_dev
, 
outmsg
.
fuŒbuf
, 
size
, 0);

2085 
rundev
.
swôched
 = 0;

2086 
	`debug_¥ötf
("switch back from VGA\n");

2092 if(
	`d©afifo_hód
(&
rundev
.
c⁄sumî_fifo
Ë=
NULL
){

2096 
	`debug_¥ötf
("send message from consumer fifoÅo socket\n");

2097 
	`£nd
(
rundev
.
sock_dev
, 
	`d©afifo_hód
(&rundev.
c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód(&rundev.c⁄sumî_fifo)->¨g.
Àn
, 0);

2098 
	`d©afifo_c⁄sumî_ªmove_hód
(&
rundev
.
c⁄sumî_fifo
);

2103 
	`FD_ZERO
(&
fd§
);

2104 
	`FD_SET
(
rundev
.
sock_§v
, &
fd§
);

2105 
	`FD_SET
(
rundev
.
sock_dev
, &
fd§
);

2107 
maxfd
 = (
rundev
.
sock_§v
>rundev.
sock_dev
)?rundev.sock_srv:rundev.sock_dev;

2108 
tv
.
tv_£c
 = 0;

2109 
tv
.
tv_u£c
 = 1000;

2110 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

2113 if(
ªt
<0){

2114 
	`debug_¥ötf
("selectÉrror\n");

2115 
devi˚_disc⁄√˘ed
 = 1;

2119 if(
ªt
==0){

2124 if(
	`FD_ISSET
(
rundev
.
sock_§v
, &
fd§
)){

2125 
MsgGŸ
;

2127 
buf
[
CMD_BUFSIZE
];

2129 
MsgGŸ
 = 
	`gëMsg
(
rundev
.
sock_§v
, 
buf
);

2132 if(
MsgGŸ
<0){

2133 
	`debug_¥ötf
("disconnectedÅo server\n");

2134 
	`˛o£
(
rundev
.
sock_§v
);

2135 
£rvî_disc⁄√˘ed
 = 1;

2140 if(
MsgGŸ
 == 0){

2141 
	`debug_¥ötf
("Message from server uncompleted\n");

2142 
	`u¶ìp
(1000);

2145 if(
MsgGŸ
>0){

2146 
	`debug_¥ötf
("Message got from server\n");

2147 
	`MsgDump
(
buf
);

2149 
	`SrvMsgH™dÀ
(&
rundev
, 
buf
);

2155 if(
	`FD_ISSET
(
rundev
.
sock_dev
, &
fd§
)){

2156 
MsgGŸ
;

2158 
buf
[
CMD_BUFSIZE
];

2160 
MsgGŸ
 = 
	`gëMsg
(
rundev
.
sock_dev
, 
buf
);

2163 if(
MsgGŸ
<0){

2164 
	`debug_¥ötf
("disconnectedÅo device\n");

2165 
devi˚_disc⁄√˘ed
 = 1;

2170 if(
MsgGŸ
 == 0){

2172 
	`u¶ìp
(1000);

2175 if(
MsgGŸ
>0){

2179 
	`DevMsgH™dÀ
(&
rundev
, 
buf
);

2188 if(
£rvî_disc⁄√˘ed
){

2189 
£rvî_disc⁄√˘ed
 = 0;

2193 if(
devi˚_disc⁄√˘ed
){

2199 
ˇmhld˘æ_exôed
 = 0;

2200 
loˇlßve_exôed
 = 0;

2201 
videﬂ«lyze_exôed
 = 0;

2205 if(!
ˇmhld˘æ_exôed
){

2206 
	`thªad_videŸøckög_askexô
(&
ˇmhld˘æ
);

2207 
ˇmhld˘æ_exôed
 = 
	`thªad_videŸøckög_exôed
(&
ˇmhld˘æ
);

2211 if(!
loˇlßve_exôed
){

2212 
	`thªad_loˇlßve_askexô
(&
loˇlßve
);

2213 
loˇlßve_exôed
 = 
	`thªad_loˇlßve_exôed
(&
loˇlßve
);

2217 if(!
videﬂ«lyze_exôed
){

2218 
	`thªad_™Æyze_askexô
(&
videﬂ«lyze
);

2219 
videﬂ«lyze_exôed
 = 
	`thªad_™Æyze_exôed
(&
videﬂ«lyze
);

2224 
	`debug_¥ötf
("processÉxit\n");

2225 
	`exô
(0);

2228 
	`¶ìp
(30);

2229 
i
=0; i<4; i++){

2230 if(
sock_li°
[
i
]){

2231 
	`˛o£
(
sock_li°
[
i
]);

2232 
	`debug_¥ötf
("closeÅhe socket\n");

2235 
	`¶ìp
(30);

2236 
	`exô
(0);

2239 
	}
}

2242 
	$vm≠_èbÀ_öô
(*
vm≠_fûe
)

2244 
i
;

2245 
i
=0; i<6; i++){

2246 
g_vm≠_èbÀ
[
i
].
ödex
 = i+1;

2247 
g_vm≠_èbÀ
[
i
].
pù
 = 0;

2249 
g_vm≠_èbÀ
[
i
].
u¨t_ch™√l
 = 0;

2250 
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 = i+1;

2251 if(
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 == 1){

2252 
g_vm≠_èbÀ
[
i
].
u¨t_ch™√l
 = 1;

2254 if(
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 == 2){

2255 
g_vm≠_èbÀ
[
i
].
u¨t_ch™√l
 = 3;

2257 
g_vm≠_èbÀ
[
i
].
ˇp_id
 = i+1;

2259 
g_vm≠_èbÀ
[5].
ˇp_id
 = 0xB;

2261 
	}
}

2263 
	$vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
fun˘i⁄
)

2265 
i
;

2266 
i
=0; i<6; i++){

2267 if(
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 == function){

2268  
g_vm≠_èbÀ
[
i
].
ˇp_id
&0xf;

2272 
	}
}

2274 
	$vm≠_èbÀ_gë_ödex_by_fun˘i⁄
(
fun˘i⁄
)

2276 
i
;

2277 
i
=0; i<6; i++){

2278 if(
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 == function){

2279  
i
;

2283 
	}
}

2285 
	$vm≠_èbÀ_ª£t_pù
()

2287 
i
;

2288 
i
=0; i<6; i++){

2289 if(
g_vm≠_èbÀ
[
i
].
pù
){

2290 
g_vm≠_èbÀ
[
i
].
pù
 = 0;

2293 
	}
}

2295 
	$vm≠_èbÀ_£t_pù_by_fun˘i⁄
(
fun˘i⁄
)

2297 
	`vm≠_èbÀ_ª£t_pù
();

2298 
i
;

2299 
i
=0; i<6; i++){

2300 if(
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 == function){

2301 
g_vm≠_èbÀ
[
i
].
pù
 = 1;

2305 
	}
}

2307 
	$c⁄fig_öô
(*
c⁄fig_fûe
)

2309 
g_cfg
.
‰ame_width
 = 1920;

2310 
g_cfg
.
‰ame_height
 = 1080;

2311 
g_cfg
.
‰ame_øã
 = 30;

2312 
g_cfg
.
bôøã
 = 1024;

2313 
g_cfg
.
live_bôøã
 = 1024;

2314 
g_cfg
.
IsResou˚Mode
 = 1;

2315 
g_cfg
.
IsAutoIn°u˘
 = 0;

2316 
g_cfg
.
num_of_C‹eBﬂrd
 = 4;

2317 
g_cfg
.
VGADuøti⁄
 = 6;

2319 
	}
}

2321 
	$thªad_li°í_askexô
(
t_li°í_thªad_∑øm
 *
±r
)

2323 if(
±r
->
thªad_ˇn˚Àd
 == 0){

2324 
±r
->
thªad_ˇn˚Àd
 = 1;

2326 
	}
}

2328 
	$thªad_li°í_exôed
(
t_li°í_thªad_∑øm
 *
±r
)

2330  
±r
->
thªad_ˇn˚Àd
==2?1:0;

2331 
	}
}

2333 * 
	$thªad_li°í
(*
∑øm
)

2335 
	`±hªad_dëach
(
	`±hªad_£lf
());

2337 
t_li°í_thªad_∑øm
 *
∂i°í
 = (t_li°í_thªad_∑øm *)
∑øm
;

2338 
sock_li°í
;

2339 
sockaddr_ö
 
£rvî_addr
, 
˛õ¡_addr
;

2340 
›t
;

2341 
sockÀn_t
 
sö_size
;

2344 if(
∂i°í
->
thªad_ˇn˚Àd
){

2348 if(
∂i°í
->
sockë
<0){

2349 
∂i°í
->
£ndîr
 = 0;

2350 
∂i°í
->
ªcvîr
 = 0;

2351 
›t
 = 1;

2352 
sö_size
 = (
˛õ¡_addr
);

2355 if((
sock_li°í
=
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0))==-1){

2356 
	`debug_¥ötf
("open socketÉrror\n");

2357 
	`exô
(1);

2361 if(
	`£tsock›t
(
sock_li°í
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
›t
, ())==-1){

2362 
	`debug_¥ötf
("set socket optionÉrror\n");

2363 
	`exô
(1);

2368 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

2369 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(
∂i°í
->
p‹t
);

2370 
£rvî_addr
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

2371 
	`mem£t
(
£rvî_addr
.
sö_zîo
, '\0', (server_addr.sin_zero));

2374 if(
	`böd
(
sock_li°í
, (
sockaddr
 *)&
£rvî_addr
, (server_addr))==-1){

2375 
	`debug_¥ötf
("bödÉº‹ %d\n", 
∂i°í
->
p‹t
);

2376 
	`exô
(1);

2380 if(
	`li°í
(
sock_li°í
, 
SOMAXCONN
)==-1){

2381 
	`debug_¥ötf
("listenÉrror\n");

2382 
	`exô
(1);

2386 if((
∂i°í
->
sockë
=
	`ac˚±
(
sock_li°í
, (
sockaddr
 *)&
˛õ¡_addr
, &
sö_size
))==-1){

2387 
	`debug_¥ötf
("acceptÉrror\n");

2388 
	`exô
(1);

2391 if(
∂i°í
->
p‹t
==2000){

2392 
	`debug_¥ötf
("coreAáccepted\n");

2394 if(
∂i°í
->
p‹t
==2001){

2395 
	`debug_¥ötf
("coreBáccepted\n");

2397 if(
∂i°í
->
p‹t
==2002){

2398 
	`debug_¥ötf
("coreCáccepted\n");

2400 if(
∂i°í
->
p‹t
==2003){

2401 
	`debug_¥ötf
("coreDáccepted\n");

2403 if(
∂i°í
->
p‹t
==3000){

2404 
	`debug_¥ötf
("instructoráccepted\n");

2407 
	`˛o£
(
sock_li°í
);

2410 
	`¶ìp
(1);

2413 
∂i°í
->
thªad_ˇn˚Àd
 = 2;

2414 
	`±hªad_exô
(0);

2415 
	}
}

2417 
	$thªad_c‹eA_askexô
(
t_c‹eA_thªad_∑øm
 *
±r
)

2419 if(
±r
->
thªad_ˇn˚Àd
 == 0){

2420 
±r
->
thªad_ˇn˚Àd
 = 1;

2422 
	}
}

2424 
	$thªad_c‹eA_exôed
(
t_c‹eA_thªad_∑øm
 *
±r
)

2426  
±r
->
thªad_ˇn˚Àd
==2?1:0;

2427 
	}
}

2429 * 
	$thªad_c‹eA_£nd
(*
∑øm
)

2432 
	`±hªad_dëach
(
	`±hªad_£lf
());

2434 
t_c‹eA_thªad_∑øm
 *
thªad_∑øm
 = (t_c‹eA_thªad_∑øm *)
∑øm
;

2435 
ªt
;

2436 
busy
;

2439 
busy
 = 0;

2441 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

2447 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)){

2450 
cmd
[
CMD_SIZE
+1];

2451 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

2452 
cmd
[
CMD_SIZE
] = '\0';

2454 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

2455 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0 && (!thªad_∑øm->thªad_li°í_∑øm.
£ndîr
)){

2456 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

2457 if(
ªt
<0){

2458 
thªad_∑øm
->
thªad_li°í_∑øm
.
£ndîr
 = 1;

2462 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

2463 
busy
++;

2467 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
Ë=
NULL
){

2472 
cmd
[
CMD_SIZE
+1];

2473 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

2474 
cmd
[
CMD_SIZE
] = '\0';

2476 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

2477 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2478 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

2479 if(
ªt
<0){

2480 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2481 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2485 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

2491 if(
	`d©afifo_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
)){

2494 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0 && (!thªad_∑øm->thªad_li°í_∑øm.
£ndîr
)){

2495 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
UART_TX_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->UART_TX_c⁄sumî_fifo)->¨g.
Àn
, 0);

2496 if(
ªt
<0){

2497 
thªad_∑øm
->
thªad_li°í_∑øm
.
£ndîr
 = 1;

2500 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
);

2501 
busy
++;

2505 if(
	`d©afifo_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
Ë=
NULL
){

2510 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2511 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
UART_TX_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->UART_TX_c⁄sumî_fifo)->¨g.
Àn
, 0);

2512 if(
ªt
<0){

2513 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2514 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2517 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
);

2522 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
ªcvîr
){

2523 
thªad_∑øm
->
thªad_li°í_∑øm
.
£ndîr
 = 1;

2525 if(!
busy
){

2526 
	`u¶ìp
(1000);

2529 
	`±hªad_exô
(0);

2530 
	}
}

2531 * 
	$thªad_c‹eA
(* 
∑øm
)

2533 
	`±hªad_dëach
(
	`±hªad_£lf
());

2535 
t_c‹eA_thªad_∑øm
 *
thªad_∑øm
 = (t_c‹eA_thªad_∑øm *)
∑øm
;

2536 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2537 
thªad_∑øm
->
thªad_li°í_∑øm
.
p‹t
 = 2000;

2538 
thªad_∑øm
->
thªad_li°í_∑øm
.
thªad_ˇn˚Àd
 = 0;

2539 
thªad_∑øm
->
thªad_li°í_∑øm
.
£ndîr
 = 0;

2540 
thªad_∑øm
->
thªad_li°í_∑øm
.
ªcvîr
 = 0;

2543 
ªt
;

2544 
±hªad_t
 
thªad_id
;

2546 
ªt
 = 
	`±hªad_¸óã
(&
thªad_id
, 
NULL
, 
thªad_c‹eA_£nd
, (*)
thªad_∑øm
);

2547 if(
ªt
<0){

2548 
	`debug_¥ötf
("createÅhread_coreA_send failed\n");

2549 
	`exô
(0);

2552 
ªt
 = 
	`±hªad_¸óã
(&
thªad_id
, 
NULL
, 
thªad_li°í
, (*)&
thªad_∑øm
->
thªad_li°í_∑øm
);

2553 if(
ªt
<0){

2554 
	`debug_¥ötf
("createÅhread_listen for coreA failed\n");

2555 
	`exô
(0);

2558 
fd_£t
 
fd§
;

2559 
timevÆ
 
tv
;

2560 
busy
;

2563 
busy
 = 0;

2565 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

2572 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0 &&Åhªad_∑øm->thªad_li°í_∑øm.
ªcvîr
==0){

2573 
	`FD_ZERO
(&
fd§
);

2574 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

2576 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

2577 
tv
.
tv_£c
 = 0;

2578 
tv
.
tv_u£c
 = 0;

2579 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

2582 if(
ªt
<0){

2583 
	`debug_¥ötf
("coreA selectÉrror\n");

2584 
thªad_∑øm
->
thªad_li°í_∑øm
.
ªcvîr
 = 1;

2588 if(
ªt
==0){

2593 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

2594 
MsgGŸ
;

2596 
buf
[
CMD_BUFSIZE
];

2598 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

2601 if(
MsgGŸ
<0){

2602 
	`debug_¥ötf
("coreA disconnectedÅo server\n");

2603 
thªad_∑øm
->
thªad_li°í_∑øm
.
ªcvîr
 = 1;

2608 if(
MsgGŸ
 == 0){

2614 if(
MsgGŸ
>0){

2618 
	`DevAMsgH™dÀ
(
thªad_∑øm
, 
buf
);

2619 
busy
++;

2625 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
£ndîr
 &&Åhªad_∑øm->thªad_li°í_∑øm.
ªcvîr
){

2626 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2627 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2632 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2633 
	`FD_ZERO
(&
fd§
);

2634 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

2636 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

2637 
tv
.
tv_£c
 = 0;

2638 
tv
.
tv_u£c
 = 1000;

2639 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

2642 if(
ªt
<0){

2643 
	`debug_¥ötf
("selectÉrror\n");

2644 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2645 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2649 if(
ªt
==0){

2654 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

2655 
MsgGŸ
;

2657 
buf
[
CMD_BUFSIZE
];

2659 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

2662 if(
MsgGŸ
<0){

2663 
	`debug_¥ötf
("disconnectedÅo server\n");

2664 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2665 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2670 if(
MsgGŸ
 == 0){

2672 
	`u¶ìp
(1000);

2676 if(
MsgGŸ
>0){

2680 
	`DevAMsgH™dÀ
(
thªad_∑øm
, 
buf
);

2685 
	`u¶ìp
(1000);

2691 if(!
busy
){

2692 
	`u¶ìp
(1000);

2696 !
	`thªad_li°í_exôed
(&
thªad_∑øm
->
thªad_li°í_∑øm
)){

2697 
	`thªad_li°í_askexô
(&
thªad_∑øm
->
thªad_li°í_∑øm
);

2700 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2701 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2702 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2704 
thªad_∑øm
->
thªad_ˇn˚Àd
 = 2;

2705 
	`±hªad_exô
(0);

2706 
	}
}

2708 
	$thªad_c‹eB_askexô
(
t_c‹eBC_thªad_∑øm
 *
±r
)

2710 if(
±r
->
thªad_ˇn˚Àd
 == 0){

2711 
±r
->
thªad_ˇn˚Àd
 = 1;

2713 
	}
}

2715 
	$thªad_c‹eB_exôed
(
t_c‹eBC_thªad_∑øm
 *
±r
)

2717  
±r
->
thªad_ˇn˚Àd
==2?1:0;

2718 
	}
}

2720 * 
	$thªad_c‹eB
(* 
∑øm
)

2722 
	`±hªad_dëach
(
	`±hªad_£lf
());

2724 
t_c‹eBC_thªad_∑øm
 *
thªad_∑øm
 = (t_c‹eBC_thªad_∑øm *)
∑øm
;

2725 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2726 
thªad_∑øm
->
thªad_li°í_∑øm
.
p‹t
 = 2001;

2727 
thªad_∑øm
->
thªad_li°í_∑øm
.
thªad_ˇn˚Àd
 = 0;

2730 
ªt
;

2731 
±hªad_t
 
thªad_id
;

2732 
ªt
 = 
	`±hªad_¸óã
(&
thªad_id
, 
NULL
, 
thªad_li°í
, (*)&
thªad_∑øm
->
thªad_li°í_∑øm
);

2733 if(
ªt
<0){

2734 
	`debug_¥ötf
("createÅhread_listen for coreB failed\n");

2735 
	`exô
(0);

2738 
fd_£t
 
fd§
;

2739 
timevÆ
 
tv
;

2740 
busy
;

2743 
busy
 = 0;

2745 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

2752 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2753 
	`FD_ZERO
(&
fd§
);

2754 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

2756 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

2757 
tv
.
tv_£c
 = 0;

2758 
tv
.
tv_u£c
 = 0;

2759 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

2762 if(
ªt
<0){

2763 
	`debug_¥ötf
("coreB selectÉrror\n");

2764 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2765 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2769 if(
ªt
==0){

2774 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

2775 
MsgGŸ
;

2777 
buf
[
CMD_BUFSIZE
];

2779 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

2782 if(
MsgGŸ
<0){

2783 
	`debug_¥ötf
("coreB disconnectedÅo server\n");

2784 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2785 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2790 if(
MsgGŸ
 == 0){

2796 if(
MsgGŸ
>0){

2800 
	`DevBCMsgH™dÀ
(
thªad_∑øm
, 
buf
);

2801 
busy
++;

2808 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2809 
	`FD_ZERO
(&
fd§
);

2810 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

2812 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

2813 
tv
.
tv_£c
 = 0;

2814 
tv
.
tv_u£c
 = 1000;

2815 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

2818 if(
ªt
<0){

2819 
	`debug_¥ötf
("selectÉrror\n");

2820 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2821 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2825 if(
ªt
==0){

2830 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

2831 
MsgGŸ
;

2833 
buf
[
CMD_BUFSIZE
];

2835 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

2838 if(
MsgGŸ
<0){

2839 
	`debug_¥ötf
("disconnectedÅo server\n");

2840 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2841 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2846 if(
MsgGŸ
 == 0){

2848 
	`u¶ìp
(1000);

2852 if(
MsgGŸ
>0){

2856 
	`DevBCMsgH™dÀ
(
thªad_∑øm
, 
buf
);

2861 
	`u¶ìp
(1000);

2868 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)){

2871 
cmd
[
CMD_SIZE
+1];

2872 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

2873 
cmd
[
CMD_SIZE
] = '\0';

2875 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

2876 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2877 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

2878 if(
ªt
<0){

2879 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2880 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2884 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

2885 
busy
++;

2890 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
Ë=
NULL
){

2895 
cmd
[
CMD_SIZE
+1];

2896 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

2897 
cmd
[
CMD_SIZE
] = '\0';

2899 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

2900 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2901 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

2902 if(
ªt
<0){

2903 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2904 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2908 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

2914 if(
	`d©afifo_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
)){

2917 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2918 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
UART_TX_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->UART_TX_c⁄sumî_fifo)->¨g.
Àn
, 0);

2919 if(
ªt
<0){

2920 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2921 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2924 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
);

2925 
busy
++;

2929 if(
	`d©afifo_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
Ë=
NULL
){

2934 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2935 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
UART_TX_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->UART_TX_c⁄sumî_fifo)->¨g.
Àn
, 0);

2936 if(
ªt
<0){

2937 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2938 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2941 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
);

2945 if(!
busy
){

2946 
	`u¶ìp
(1000);

2950 !
	`thªad_li°í_exôed
(&
thªad_∑øm
->
thªad_li°í_∑øm
)){

2951 
	`thªad_li°í_askexô
(&
thªad_∑øm
->
thªad_li°í_∑øm
);

2954 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

2955 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

2956 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2959 
thªad_∑øm
->
thªad_ˇn˚Àd
 = 2;

2960 
	`±hªad_exô
(0);

2961 
	}
}

2963 
	$thªad_c‹eC_askexô
(
t_c‹eBC_thªad_∑øm
 *
±r
)

2965 if(
±r
->
thªad_ˇn˚Àd
 == 0){

2966 
±r
->
thªad_ˇn˚Àd
 = 1;

2968 
	}
}

2970 
	$thªad_c‹eC_exôed
(
t_c‹eBC_thªad_∑øm
 *
±r
)

2972  
±r
->
thªad_ˇn˚Àd
==2?1:0;

2973 
	}
}

2975 * 
	$thªad_c‹eC
(* 
∑øm
)

2977 
	`±hªad_dëach
(
	`±hªad_£lf
());

2979 
t_c‹eBC_thªad_∑øm
 *
thªad_∑øm
 = (t_c‹eBC_thªad_∑øm *)
∑øm
;

2980 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

2981 
thªad_∑øm
->
thªad_li°í_∑øm
.
p‹t
 = 2002;

2982 
thªad_∑øm
->
thªad_li°í_∑øm
.
thªad_ˇn˚Àd
 = 0;

2985 
ªt
;

2986 
±hªad_t
 
thªad_id
;

2987 
ªt
 = 
	`±hªad_¸óã
(&
thªad_id
, 
NULL
, 
thªad_li°í
, (*)&
thªad_∑øm
->
thªad_li°í_∑øm
);

2988 if(
ªt
<0){

2989 
	`debug_¥ötf
("createÅhread_listen for coreC failed\n");

2990 
	`exô
(0);

2993 
fd_£t
 
fd§
;

2994 
timevÆ
 
tv
;

2995 
busy
;

2998 
busy
 = 0;

3000 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

3007 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3008 
	`FD_ZERO
(&
fd§
);

3009 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

3011 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

3012 
tv
.
tv_£c
 = 0;

3013 
tv
.
tv_u£c
 = 0;

3014 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

3017 if(
ªt
<0){

3018 
	`debug_¥ötf
("coreC selectÉrror\n");

3019 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3020 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3024 if(
ªt
==0){

3029 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

3030 
MsgGŸ
;

3032 
buf
[
CMD_BUFSIZE
];

3034 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

3037 if(
MsgGŸ
<0){

3038 
	`debug_¥ötf
("coreC disconnectedÅo server\n");

3039 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3040 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3045 if(
MsgGŸ
 == 0){

3051 if(
MsgGŸ
>0){

3055 
	`DevBCMsgH™dÀ
(
thªad_∑øm
, 
buf
);

3056 
busy
++;

3063 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3064 
	`FD_ZERO
(&
fd§
);

3065 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

3067 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

3068 
tv
.
tv_£c
 = 0;

3069 
tv
.
tv_u£c
 = 1000;

3070 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

3073 if(
ªt
<0){

3074 
	`debug_¥ötf
("selectÉrror\n");

3075 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3076 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3080 if(
ªt
==0){

3085 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

3086 
MsgGŸ
;

3088 
buf
[
CMD_BUFSIZE
];

3090 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

3093 if(
MsgGŸ
<0){

3094 
	`debug_¥ötf
("disconnectedÅo server\n");

3095 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3096 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3101 if(
MsgGŸ
 == 0){

3103 
	`u¶ìp
(1000);

3107 if(
MsgGŸ
>0){

3111 
	`DevBCMsgH™dÀ
(
thªad_∑øm
, 
buf
);

3116 
	`u¶ìp
(1000);

3124 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)){

3127 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3128 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

3129 if(
ªt
<0){

3130 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3131 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3134 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

3135 
busy
 ++;

3140 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
Ë=
NULL
){

3145 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3146 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

3147 if(
ªt
<0){

3148 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3149 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3152 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

3158 if(
	`d©afifo_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
)){

3161 
cmd
[
CMD_SIZE
+1];

3162 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

3163 
cmd
[
CMD_SIZE
] = '\0';

3165 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

3166 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3167 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

3168 if(
ªt
<0){

3169 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3170 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3174 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
);

3175 
busy
++;

3179 if(
	`d©afifo_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
Ë=
NULL
){

3184 
cmd
[
CMD_SIZE
+1];

3185 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

3186 
cmd
[
CMD_SIZE
] = '\0';

3188 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

3189 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3190 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

3191 if(
ªt
<0){

3192 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3193 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3197 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
UART_TX_c⁄sumî_fifo
);

3201 if(!
busy
){

3202 
	`u¶ìp
(1000);

3206 !
	`thªad_li°í_exôed
(&
thªad_∑øm
->
thªad_li°í_∑øm
)){

3207 
	`thªad_li°í_askexô
(&
thªad_∑øm
->
thªad_li°í_∑øm
);

3210 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3211 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3212 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3215 
thªad_∑øm
->
thªad_ˇn˚Àd
 = 2;

3217 
	`±hªad_exô
(0);

3218 
	}
}

3220 
	$thªad_c‹eD_askexô
(
t_c‹eD_thªad_∑øm
 *
±r
)

3222 if(
±r
->
thªad_ˇn˚Àd
 == 0){

3223 
±r
->
thªad_ˇn˚Àd
 = 1;

3225 
	}
}

3227 
	$thªad_c‹eD_exôed
(
t_c‹eD_thªad_∑øm
 *
±r
)

3229  
±r
->
thªad_ˇn˚Àd
==2?1:0;

3230 
	}
}

3232 * 
	$thªad_c‹eD
(* 
∑øm
)

3234 
	`±hªad_dëach
(
	`±hªad_£lf
());

3236 
t_c‹eD_thªad_∑øm
 *
thªad_∑øm
 = (t_c‹eD_thªad_∑øm *)
∑øm
;

3237 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3238 
thªad_∑øm
->
thªad_li°í_∑øm
.
p‹t
 = 2003;

3239 
thªad_∑øm
->
thªad_li°í_∑øm
.
thªad_ˇn˚Àd
 = 0;

3242 
ªt
;

3243 
±hªad_t
 
thªad_id
;

3244 
ªt
 = 
	`±hªad_¸óã
(&
thªad_id
, 
NULL
, 
thªad_li°í
, (*)&
thªad_∑øm
->
thªad_li°í_∑øm
);

3245 if(
ªt
<0){

3246 
	`debug_¥ötf
("createÅhread_listen for coreD failed\n");

3247 
	`exô
(0);

3250 
fd_£t
 
fd§
;

3251 
timevÆ
 
tv
;

3252 
busy
;

3255 
busy
 = 0;

3257 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

3264 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3265 
	`FD_ZERO
(&
fd§
);

3266 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

3268 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

3269 
tv
.
tv_£c
 = 0;

3270 
tv
.
tv_u£c
 = 0;

3271 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

3274 if(
ªt
<0){

3275 
	`debug_¥ötf
("coreD selectÉrror\n");

3276 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3277 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3281 if(
ªt
==0){

3286 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

3287 
MsgGŸ
;

3289 
buf
[
CMD_BUFSIZE
];

3291 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

3294 if(
MsgGŸ
<0){

3295 
	`debug_¥ötf
("coreD disconnectedÅo server\n");

3296 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3297 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3302 if(
MsgGŸ
 == 0){

3308 if(
MsgGŸ
>0){

3312 
	`DevDMsgH™dÀ
(
thªad_∑øm
, 
buf
);

3313 
busy
++;

3319 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3320 
	`FD_ZERO
(&
fd§
);

3321 
	`FD_SET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
);

3323 
maxfd
 = 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
;

3324 
tv
.
tv_£c
 = 0;

3325 
tv
.
tv_u£c
 = 1000;

3326 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

3329 if(
ªt
<0){

3330 
	`debug_¥ötf
("selectÉrror\n");

3331 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3332 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3336 if(
ªt
==0){

3341 if(
	`FD_ISSET
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

3342 
MsgGŸ
;

3344 
buf
[
CMD_BUFSIZE
];

3346 
MsgGŸ
 = 
	`gëMsg
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
buf
);

3349 if(
MsgGŸ
<0){

3350 
	`debug_¥ötf
("disconnectedÅo server\n");

3351 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3352 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3357 if(
MsgGŸ
 == 0){

3359 
	`u¶ìp
(1000);

3363 if(
MsgGŸ
>0){

3367 
	`DevDMsgH™dÀ
(
thªad_∑øm
, 
buf
);

3372 
	`u¶ìp
(1000);

3379 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)){

3381 
cmd
[
CMD_SIZE
+1];

3382 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

3383 
cmd
[
CMD_SIZE
] = '\0';

3385 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

3386 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3387 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

3388 if(
ªt
<0){

3389 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3390 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3394 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

3395 
busy
++;

3399 if(
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
Ë=
NULL
){

3404 
cmd
[
CMD_SIZE
+1];

3405 
	`mem˝y
(
cmd
, &
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
[
VERSION_SIZE
], 
CMD_SIZE
);

3406 
cmd
[
CMD_SIZE
] = '\0';

3408 if(
	`°rcmp
(
cmd
, 
COMMAND_INTERNAL
)){

3409 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3410 
ªt
=
	`£nd
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
—hªad_∑øm->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód—hªad_∑øm->Cål_c⁄sumî_fifo)->¨g.
Àn
, 0);

3411 if(
ªt
<0){

3412 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3413 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3417 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

3421 if(!
busy
){

3422 
	`u¶ìp
(1000);

3426 !
	`thªad_li°í_exôed
(&
thªad_∑øm
->
thªad_li°í_∑øm
)){

3427 
	`thªad_li°í_askexô
(&
thªad_∑øm
->
thªad_li°í_∑øm
);

3430 if(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
>=0){

3431 
	`˛o£
(
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
);

3432 
thªad_∑øm
->
thªad_li°í_∑øm
.
sockë
 = -1;

3435 
thªad_∑øm
->
thªad_ˇn˚Àd
 = 2;

3436 
	`±hªad_exô
(0);

3437 
	}
}

3439 
	$thªad_™Æyze_askexô
(
t_videﬂ«lyze_thªad_∑øm
 *
±r
)

3441 if(
±r
->
thªad_ˇn˚Àd
 == 0){

3442 
±r
->
thªad_ˇn˚Àd
 = 1;

3444 
	}
}

3446 
	$thªad_™Æyze_exôed
(
t_c‹eD_thªad_∑øm
 *
p_c‹e
)

3448  
p_c‹e
->
thªad_ˇn˚Àd
==2?1:0;

3449 
	}
}

3451 * 
	$thªad_™Æyze
(*
∑øm
)

3453 
	`±hªad_dëach
(
	`±hªad_£lf
());

3455 
t_videﬂ«lyze_thªad_∑øm
 *
thªad_∑øm
 = (t_videﬂ«lyze_thªad_∑øm *)
∑øm
;

3456 * 
p_m≠
 = 
NULL
;

3458 
FILE
 *
fd
 = 
NULL
;

3459 
FILE
 *
fd1
 = 
NULL
;

3460 
£q_num
 = 0;

3462 
fd
 = 
	`f›í
("sample.raw", "w");

3463 if(!
fd
){

3464 
	`debug_¥ötf
("couldÇot openÅhe file sample.raw\n");

3467 
fd1
 = 
	`f›í
("sample.seq", "w");

3468 if(!
fd1
){

3469 
	`debug_¥ötf
("couldÇot openÅhe file sample.seq\n");

3473 
	`AµInô
();

3476 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

3480 if(
	`d©afifo_hód
(
thªad_∑øm
->
c⁄sumî_fifo
)){

3481 if(
fd
){

3482 
	`fwrôe
(
	`d©afifo_hód
(
thªad_∑øm
->
c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód—hªad_∑øm->c⁄sumî_fifo)->¨g.
Àn
, 
fd
);

3484 
p_m≠
 = 
	`d©afifo_hód
(
thªad_∑øm
->
c⁄sumî_fifo
)->
¨g
.
d©a
;

3485 
‰ame_num
 = 
	`d©afifo_hód
(
thªad_∑øm
->
c⁄sumî_fifo
)->
¨g
.
time°amp
;

3486 if(
fd1
){

3487 
	`Ârötf
(
fd1
, "%d:%d\n", 
£q_num
, 
‰ame_num
);

3489 
£q_num
++;

3490 
	`Dëe˘Føme
((*)
p_m≠
, 
‰ame_num
);

3492 *
pPå
 = (*)
p_m≠
;

3494 
	`EvítVID2df
(
thªad_∑øm
->
¥odu˚r_fifo
, 
pPå
);

3495 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
c⁄sumî_fifo
);

3497 
	`u¶ìp
(1000);

3500 
	`AµDeöô
();

3502 
thªad_∑øm
->
thªad_ˇn˚Àd
=2;

3503 
	`±hªad_exô
(0);

3504 
	}
}

3506 * 
	$thªad_mp4f‹m©
(*
¨g
)

3508 
cmd°r
[256];

3511 
t_mp4f‹m©
 *
p_mp4f‹m©
 = (t_mp4f‹m© *)
¨g
;

3512 
	`±hªad_dëach
(
	`±hªad_£lf
());

3515 
	`°r˝y
(
cmd°r
, "MP4Box -add ");

3516 
	`°rˇt
(
cmd°r
, 
p_mp4f‹m©
->
fûíame
);

3517 
	`°rˇt
(
cmd°r
, ".264 -fps ");

3518 
	`°rˇt
(
cmd°r
, 
p_mp4f‹m©
->
Âs
);

3519 if(
p_mp4f‹m©
->
has_audio
){

3520 
	`°rˇt
(
cmd°r
, " -add ");

3521 
	`°rˇt
(
cmd°r
, 
p_mp4f‹m©
->
fûíame
);

3522 
	`°rˇt
(
cmd°r
, ".aac");

3524 
	`°rˇt
(
cmd°r
, " -new ");

3525 
	`°rˇt
(
cmd°r
, 
p_mp4f‹m©
->
fûíame
);

3526 
	`°rˇt
(
cmd°r
, ".mp4");

3529 
	`‰ì
(
¨g
);

3531 
ªt
;

3532 
ªt
 = 
	`sy°em
(
cmd°r
);

3533 if(
ªt
<0){

3534 
	`¥ötf
("error in calling system\n");

3537 
	`¥ötf
("success\n");

3539 
	`±hªad_exô
(0);

3540 
	}
}

3542 * 
	$thªad_c⁄√˘_live£rvî
(*
∑øm
)

3544 
	`±hªad_dëach
(
	`±hªad_£lf
());

3546 
t_loˇlßve_thªad_∑øm
 *
p_loˇlßve
 = (t_loˇlßve_thªad_∑øm *)
∑øm
;

3547 
sockaddr_ö
 
˛i
;

3550 if(
p_loˇlßve
->
sock
==-1){

3551 
˛i
.
sö_Ámûy
 = 
AF_INET
;

3552 
˛i
.
sö_p‹t
 = 
	`ht⁄s
(8888);

3553 
˛i
.
sö_addr
.
s_addr
 = 
	`öë_addr
("127.0.0.1");

3555 
sock
=-1;

3556 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

3557 if(
sock
<0){

3558 
	`debug_¥ötf
("open socketÉrror\n");

3559 
	`exô
(1);

3564 
¢dbufsize
 = 500*1024;

3565 if(
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_SNDBUF
, (c⁄° *)&
¢dbufsize
, (sndbufsize))==-1){

3566 
	`debug_¥ötf
("setsockeopt failed\n");

3569 if(
	`c⁄√˘
(
sock
, (
sockaddr
*)&
˛i
, (cli))<0){

3571 
	`˛o£
(
sock
);

3572 
sock
 = -1;

3575 
	`debug_¥ötf
("connected\n");

3576 
p_loˇlßve
->
sock
 = sock;

3579 
	`¶ìp
(1);

3582 
	`±hªad_exô
(0);

3583 
	}
}

3585 
	$thªad_loˇlßve_askexô
(
t_loˇlßve_thªad_∑øm
 *
±r
)

3587 if(
±r
->
thªad_ˇn˚Àd
 == 0){

3588 
±r
->
thªad_ˇn˚Àd
 = 1;

3590 
	}
}

3592 
	$thªad_loˇlßve_exôed
(
t_loˇlßve_thªad_∑øm
 *
±r
)

3594  
±r
->
thªad_ˇn˚Àd
==2?1:0;

3595 
	}
}

3597 
	$°ªam‰ame
(
t_loˇlßve_thªad_∑øm
 *
p_loˇlßve
, 
Êag
, *
‰ame_num
)

3599 if(
p_loˇlßve
->
sock
 != -1){

3600 
pkt_buf
[
STREAMING_PACKET_HEADER_LENGTH
];

3601 
t_°ªamög_∑ckë_hódî
 *
±r
 = (t_°ªamög_∑ckë_hódî *)
pkt_buf
;

3603 
±r
->
Êag
 = flag;

3604 
±r
->
size
 = 
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Àn
;

3605 
±r
->
ty≥
 = 
PACKET_TYPE_VIDEO
;

3607 
±r
->
time°amp
 = (*
‰ame_num
)*1000/
g_cfg
.
‰ame_øã
;

3608 
ªt
 = 
	`£nd
(
p_loˇlßve
->
sock
, 
pkt_buf
, 
STREAMING_PACKET_HEADER_LENGTH
, 0);

3609 if(
ªt
<
STREAMING_PACKET_HEADER_LENGTH
){

3610 
	`˛o£
(
p_loˇlßve
->
sock
);

3611 
p_loˇlßve
->
sock
 = -1;

3613 if(
p_loˇlßve
->
sock
 != -1){

3614 
ªt
 = 
	`£nd
(
p_loˇlßve
->
sock
, 
	`d©afifo_hód
’_loˇlßve->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 0);

3615 if(
ªt
<
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Àn
){

3616 
	`˛o£
(
p_loˇlßve
->
sock
);

3617 
p_loˇlßve
->
sock
 = -1;

3619 (*
‰ame_num
)++;

3623 
	}
}

3625 * 
	$thªad_loˇlßve
(* 
∑øm
)

3627 
	`±hªad_dëach
(
	`±hªad_£lf
());

3628 
	`debug_¥ötf
("ThreadÜocalsaveÑunning...\n");

3630 
t_loˇlßve_thªad_∑øm
 *
p_loˇlßve
 = (t_loˇlßve_thªad_∑øm *)
∑øm
;

3631 
‰ame_cou¡
 = 0, 
a‰ame_cou¡
 = 0;

3632 
v1_‰ames
 = 0, 
v2_‰ames
 = 0, 
v3_‰ames
 = 0, 
v4_‰ames
 = 0, 
v5_‰ames
 = 0;

3634 
FILE
 *
vfd
 = 
NULL
, *
afd
 = NULL, *
pfd
 = NULL;

3635 
FILE
 *
VGA_fd
 = 
NULL
, *
V1_fd
 = NULL, *
V2_fd
 = NULL, *
V3_fd
 = NULL, *
V4_fd
 = NULL, *
V5_fd
 = NULL, *
V6_fd
 = NULL;

3636 
fûíame
[256], 
tmpfûíame
[256], 
ßve_dú
[256], 
VGA_dú
[256], 
MUX_dú
[256], 
V1_dú
[256], 
V2_dú
[256], 
V3_dú
[256], 
V4_dú
[256], 
V5_dú
[256], 
V6_dú
[256];

3638 
live_v‰ames
, 
live_a‰ames
;

3640 
sockaddr_ö
 
˛i
;

3642 
˛i
.
sö_Ámûy
 = 
AF_INET
;

3643 
˛i
.
sö_p‹t
 = 
	`ht⁄s
(8888);

3644 
˛i
.
sö_addr
.
s_addr
 = 
	`öë_addr
("127.0.0.1");

3646 
p_loˇlßve
->
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

3647 if(
p_loˇlßve
->
sock
<0){

3648 
	`debug_¥ötf
("open socketÉrror\n");

3649 
	`exô
(1);

3651 
	`debug_¥ötf
("connectingÅo streaming server...");

3654 
¢dbufsize
 = 500*1024;

3655 if(
	`£tsock›t
(
p_loˇlßve
->
sock
, 
SOL_SOCKET
, 
SO_SNDBUF
, (c⁄° *)&
¢dbufsize
, (sndbufsize))==-1){

3656 
	`debug_¥ötf
("setsockeopt failed\n");

3659 if(
	`c⁄√˘
(
p_loˇlßve
->
sock
, (
sockaddr
*)&
˛i
, (cli))<0){

3660 
	`debug_¥ötf
("couldÇot connectÅo streaming server\n");

3661 
	`˛o£
(
p_loˇlßve
->
sock
);

3662 
p_loˇlßve
->
sock
 = -1;

3665 
	`debug_¥ötf
("connected\n");

3668 
±hªad_t
 
±_c⁄√˘_live£rvî_id
;

3669 
	`±hªad_¸óã
(&
±_c⁄√˘_live£rvî_id
, 
NULL
, 
thªad_c⁄√˘_live£rvî
, (*)
∑øm
);

3672 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_IDLE
;

3673 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_IDLE
;

3674 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_IDLE
;

3675 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_IDLE
;

3676 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_IDLE
;

3677 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_IDLE
;

3678 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_IDLE
;

3679 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_IDLE
;

3680 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_IDLE
;

3682 
fûíame
[0] = '\0';

3683 
	`°r˝y
(
ßve_dú
, "./");

3684 
	`°rˇt
(
ßve_dú
, 
CfgDú
);

3686 
	`°r˝y
(
MUX_dú
, 
ßve_dú
);

3687 
	`°rˇt
(
MUX_dú
, "MUX/");

3688 
	`debug_¥ötf
("%s\n", 
MUX_dú
);

3689 if(
	`ac˚ss
(
MUX_dú
, 
F_OK
)==-1){

3690 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3691 if(
	`mkdú
(
MUX_dú
,0777) == -1){

3692 
	`debug_¥ötf
("create directory failed\n");

3696 
	`°r˝y
(
VGA_dú
, 
ßve_dú
);

3697 
	`°rˇt
(
VGA_dú
, "VGA/");

3698 
	`debug_¥ötf
("%s\n", 
VGA_dú
);

3699 if(
	`ac˚ss
(
VGA_dú
, 
F_OK
)==-1){

3700 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3701 if(
	`mkdú
(
VGA_dú
,0777) == -1){

3702 
	`debug_¥ötf
("create directory failed\n");

3706 
	`°r˝y
(
V1_dú
, 
ßve_dú
);

3707 
	`°rˇt
(
V1_dú
, "V1/");

3708 
	`debug_¥ötf
("%s\n", 
V1_dú
);

3709 if(
	`ac˚ss
(
V1_dú
, 
F_OK
)==-1){

3710 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3711 if(
	`mkdú
(
V1_dú
,0777) == -1){

3712 
	`debug_¥ötf
("create directory failed\n");

3716 
	`°r˝y
(
V2_dú
, 
ßve_dú
);

3717 
	`°rˇt
(
V2_dú
, "V2/");

3718 
	`debug_¥ötf
("%s\n", 
V2_dú
);

3719 if(
	`ac˚ss
(
V2_dú
, 
F_OK
)==-1){

3720 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3721 if(
	`mkdú
(
V2_dú
,0777) == -1){

3722 
	`debug_¥ötf
("create directory failed\n");

3726 
	`°r˝y
(
V3_dú
, 
ßve_dú
);

3727 
	`°rˇt
(
V3_dú
, "V3/");

3728 
	`debug_¥ötf
("%s\n", 
V3_dú
);

3729 if(
	`ac˚ss
(
V3_dú
, 
F_OK
)==-1){

3730 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3731 if(
	`mkdú
(
V3_dú
,0777) == -1){

3732 
	`debug_¥ötf
("create directory failed\n");

3736 
	`°r˝y
(
V4_dú
, 
ßve_dú
);

3737 
	`°rˇt
(
V4_dú
, "V4/");

3738 
	`debug_¥ötf
("%s\n", 
V4_dú
);

3739 if(
	`ac˚ss
(
V4_dú
, 
F_OK
)==-1){

3740 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3741 if(
	`mkdú
(
V4_dú
,0777) == -1){

3742 
	`debug_¥ötf
("create directory failed\n");

3746 
	`°r˝y
(
V5_dú
, 
ßve_dú
);

3747 
	`°rˇt
(
V5_dú
, "V5/");

3748 
	`debug_¥ötf
("%s\n", 
V5_dú
);

3749 if(
	`ac˚ss
(
V5_dú
, 
F_OK
)==-1){

3750 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3751 if(
	`mkdú
(
V5_dú
,0777) == -1){

3752 
	`debug_¥ötf
("create directory failed\n");

3756 
	`°r˝y
(
V6_dú
, 
ßve_dú
);

3757 
	`°rˇt
(
V6_dú
, "V6/");

3758 
	`debug_¥ötf
("%s\n", 
V6_dú
);

3759 if(
	`ac˚ss
(
V6_dú
, 
F_OK
)==-1){

3760 
	`debug_¥ötf
("directoryÇotÉxist, create it\n");

3761 if(
	`mkdú
(
V6_dú
,0777) == -1){

3762 
	`debug_¥ötf
("create directory failed\n");

3769 if(
p_loˇlßve
->
thªad_ˇn˚Àd
){

3771 
p_loˇlßve
->
V°‹e_°©us
 =
LOCALSAVE_IDLE


3772 && 
p_loˇlßve
->
Vlive_°©us
 =
LOCALSAVE_IDLE


3773 && 
p_loˇlßve
->
VGA_°©us
 =
LOCALSAVE_IDLE


3774 && 
p_loˇlßve
->
V1_°©us
 =
LOCALSAVE_IDLE


3775 && 
p_loˇlßve
->
V2_°©us
 =
LOCALSAVE_IDLE


3776 && 
p_loˇlßve
->
V3_°©us
 =
LOCALSAVE_IDLE


3777 && 
p_loˇlßve
->
V4_°©us
 =
LOCALSAVE_IDLE


3778 && 
p_loˇlßve
->
V5_°©us
 =
LOCALSAVE_IDLE


3779 && 
p_loˇlßve
->
V6_°©us
 =
LOCALSAVE_IDLE
){

3784 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_STOP
;

3785 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_STOP
;

3786 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_STOP
;

3787 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_STOP
;

3788 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_STOP
;

3789 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_STOP
;

3790 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_STOP
;

3791 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_STOP
;

3792 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_STOP
;

3798 if(
	`d©afifo_hód
(
p_loˇlßve
->
Cål_c⁄sumî_fifo
)){

3800 
	`debug_¥ötf
("thread_localsaveÑeceive message\n");

3802 *
Msg
 = (*)
	`d©afifo_hód
(
p_loˇlßve
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
;

3803 
cmd
[
CMD_SIZE
+1];

3804 
Àn
;

3805 *
±r
;

3808 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

3809 
cmd
[
CMD_SIZE
] = '\0';

3811 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

3814 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

3816 if(!
	`°rcmp
(
cmd
, 
COMMAND_GETDATA
)){

3817 
Àn
){

3818 
«me_Àn
, 
vÆue_Àn
;

3819 
©å_«me
[16];

3820 
©å_vÆue
[1536];

3822 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

3823 
±r
++;

3825 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

3826 
±r
 += 4;

3828 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

3829 
©å_«me
[
«me_Àn
] = '\0';

3830 
±r
 +
«me_Àn
;

3832 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

3833 
©å_vÆue
[
vÆue_Àn
] = '\0';

3834 
±r
 +
vÆue_Àn
;

3836 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

3838 if(!
	`°rcmp
(
©å_«me
, "Type")){

3839 if(!
	`°rcmp
(
©å_vÆue
, "All")){

3840 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_START
;

3841 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_START
;

3842 if(
g_cfg
.
IsResou˚Mode
){

3843 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_START
;

3844 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_START
;

3845 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_START
;

3846 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_START
;

3847 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_START
;

3848 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_START
;

3849 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_START
;

3851 
live_v‰ames
 = 0;

3852 
live_a‰ames
 = 0;

3855 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_STOP
;

3856 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_STOP
;

3857 if(
g_cfg
.
IsResou˚Mode
){

3858 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_STOP
;

3859 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_STOP
;

3860 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_STOP
;

3861 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_STOP
;

3862 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_STOP
;

3863 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_STOP
;

3864 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_STOP
;

3871 if(!
	`°rcmp
(
cmd
,
COMMAND_INTERNAL
)){

3872 
Àn
){

3873 
«me_Àn
, 
vÆue_Àn
;

3874 
©å_«me
[16];

3875 
©å_vÆue
[1536];

3877 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

3878 
±r
++;

3880 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

3881 
±r
 += 4;

3883 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

3884 
©å_«me
[
«me_Àn
] = '\0';

3885 
±r
 +
«me_Àn
;

3887 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

3888 
©å_vÆue
[
vÆue_Àn
] = '\0';

3889 
±r
 +
vÆue_Àn
;

3891 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

3893 if(!
	`°rcmp
(
©å_«me
, "Pause")){

3894 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_PAUSE
;

3895 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_PAUSE
;

3896 
	`Ârötf
(
pfd
, "PAUSE: %d\n", 
‰ame_cou¡
);

3897 if(
g_cfg
.
IsResou˚Mode
){

3898 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_PAUSE
;

3899 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_PAUSE
;

3900 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_PAUSE
;

3901 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_PAUSE
;

3902 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_PAUSE
;

3903 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_PAUSE
;

3904 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_PAUSE
;

3908 if(!
	`°rcmp
(
©å_«me
, "Resume")){

3909 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_RESUME
;

3910 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_RESUME
;

3911 if(
g_cfg
.
IsResou˚Mode
){

3912 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_RESUME
;

3913 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_RESUME
;

3914 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_RESUME
;

3915 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_RESUME
;

3916 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_RESUME
;

3917 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_RESUME
;

3918 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_RESUME
;

3924 
	`d©afifo_c⁄sumî_ªmove_hód
(
p_loˇlßve
->
Cål_c⁄sumî_fifo
);

3929 
time_t
 
cur_time
;

3930 
tm
 *
p_tm
;

3931 if(
p_loˇlßve
->
V°‹e_°©us
 =
LOCALSAVE_START
){

3933 
	`time
(&
cur_time
);

3934 
p_tm
 = 
	`gmtime
(&
cur_time
);

3935 
	`•rötf
(
fûíame
, "%04d%02d%02d%02d%02d%02d", 
p_tm
->
tm_yór
+1900,Ö_tm->
tm_m⁄
+1,Ö_tm->
tm_mday
,Ö_tm->
tm_hour
+8,Ö_tm->
tm_mö
,Ö_tm->
tm_£c
);

3938 
	`°r˝y
(
tmpfûíame
, 
MUX_dú
);

3939 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

3940 
	`°rˇt
(
tmpfûíame
, ".264");

3941 
vfd
 = 
	`f›í
(
tmpfûíame
, "w");

3943 if(!
vfd
){

3944 
	`debug_¥ötf
("couldÇot openÅhe output file for video\n");

3948 
	`°r˝y
(
tmpfûíame
, 
MUX_dú
);

3949 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

3950 
	`°rˇt
(
tmpfûíame
, ".aac");

3951 
afd
 = 
	`f›í
(
tmpfûíame
, "w");

3953 if(!
afd
){

3954 
	`debug_¥ötf
("couldÇot openÅhe output file foráudio\n");

3958 
	`°r˝y
(
tmpfûíame
, 
MUX_dú
);

3959 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

3960 
	`°rˇt
(
tmpfûíame
, ".pro");

3961 
pfd
 = 
	`f›í
(
tmpfûíame
, "w");

3962 if(!
pfd
){

3963 
	`debug_¥ötf
("couldÇot openÅhe output file forÖroperty\n");

3966 
‰ame_cou¡
 = 
a‰ame_cou¡
 = 0;

3967 
v1_‰ames
 = 
v2_‰ames
 = 
v3_‰ames
 = 
v4_‰ames
 = 
v5_‰ames
 = 0;

3969 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_RESUME
;

3973 if(
p_loˇlßve
->
Vlive_°©us
 =
LOCALSAVE_START
){

3975 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_RESUME
;

3979 if(
p_loˇlßve
->
VGA_°©us
 =
LOCALSAVE_START
){

3981 
	`°r˝y
(
tmpfûíame
, 
VGA_dú
);

3982 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

3983 
	`°rˇt
(
tmpfûíame
, ".264");

3984 
VGA_fd
 = 
	`f›í
(
tmpfûíame
, "w");

3985 if(!
VGA_fd
){

3986 
	`debug_¥ötf
("couldÇot openÅhe output file for VGA channel\n");

3989 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_RESUME
;

3993 if(
p_loˇlßve
->
V1_°©us
 =
LOCALSAVE_START
){

3995 
	`°r˝y
(
tmpfûíame
, 
V1_dú
);

3996 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

3997 
	`°rˇt
(
tmpfûíame
, ".264");

3998 
V1_fd
 = 
	`f›í
(
tmpfûíame
, "w");

3999 if(!
V1_fd
){

4000 
	`debug_¥ötf
("couldÇot openÅhe output file for V1 channel\n");

4003 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_RESUME
;

4007 if(
p_loˇlßve
->
V2_°©us
 =
LOCALSAVE_START
){

4009 
	`°r˝y
(
tmpfûíame
, 
V2_dú
);

4010 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

4011 
	`°rˇt
(
tmpfûíame
, ".264");

4012 
V2_fd
 = 
	`f›í
(
tmpfûíame
, "w");

4013 if(!
V2_fd
){

4014 
	`debug_¥ötf
("couldÇot openÅhe output file for V2 channel\n");

4017 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_RESUME
;

4021 if(
p_loˇlßve
->
V3_°©us
 =
LOCALSAVE_START
){

4023 
	`°r˝y
(
tmpfûíame
, 
V3_dú
);

4024 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

4025 
	`°rˇt
(
tmpfûíame
, ".264");

4026 
V3_fd
 = 
	`f›í
(
tmpfûíame
, "w");

4027 if(!
V3_fd
){

4028 
	`debug_¥ötf
("couldÇot openÅhe output file for V3 channel\n");

4031 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_RESUME
;

4035 if(
p_loˇlßve
->
V4_°©us
 =
LOCALSAVE_START
){

4037 
	`°r˝y
(
tmpfûíame
, 
V4_dú
);

4038 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

4039 
	`°rˇt
(
tmpfûíame
, ".264");

4040 
V4_fd
 = 
	`f›í
(
tmpfûíame
, "w");

4041 if(!
V4_fd
){

4042 
	`debug_¥ötf
("couldÇot openÅhe output file for V4 channel\n");

4045 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_RESUME
;

4048 if(
p_loˇlßve
->
V5_°©us
 =
LOCALSAVE_START
){

4050 
	`°r˝y
(
tmpfûíame
, 
V5_dú
);

4051 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

4052 
	`°rˇt
(
tmpfûíame
, ".264");

4053 
V5_fd
 = 
	`f›í
(
tmpfûíame
, "w");

4054 if(!
V5_fd
){

4055 
	`debug_¥ötf
("couldÇot openÅhe output file for V5 channel\n");

4058 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_RESUME
;

4061 if(
p_loˇlßve
->
V6_°©us
 =
LOCALSAVE_START
){

4063 
	`°r˝y
(
tmpfûíame
, 
V6_dú
);

4064 
	`°rˇt
(
tmpfûíame
, 
fûíame
);

4065 
	`°rˇt
(
tmpfûíame
, ".264");

4066 
V6_fd
 = 
	`f›í
(
tmpfûíame
, "w");

4067 if(!
V6_fd
){

4068 
	`debug_¥ötf
("couldÇot openÅhe output file for V6 channel\n");

4071 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_RESUME
;

4075 if(
p_loˇlßve
->
V°‹e_°©us
 =
LOCALSAVE_STOP
){

4077 
	`f˛o£
(
afd
);

4078 
afd
 = 
NULL
;

4079 
	`f˛o£
(
vfd
);

4080 
vfd
 = 
NULL
;

4081 
	`Ârötf
(
pfd
, "STOP: %d\n", 
‰ame_cou¡
);

4082 
	`f˛o£
(
pfd
);

4083 
pfd
 =
NULL
;

4086 
t_mp4f‹m©
 *
p_fmt
;

4087 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4088 if(
p_fmt
){

4089 
	`°r˝y
(
p_fmt
->
fûíame
, 
MUX_dú
);

4090 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4091 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4092 
p_fmt
->
has_audio
 = 1;

4094 
±hªad_t
 
±_mp4f‹m©_id
;

4095 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4099 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_IDLE
;

4102 if(
p_loˇlßve
->
Vlive_°©us
 =
LOCALSAVE_STOP
){

4104 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_IDLE
;

4108 if(
p_loˇlßve
->
VGA_°©us
 =
LOCALSAVE_STOP
){

4110 
	`f˛o£
(
VGA_fd
);

4111 
VGA_fd
 = 
NULL
;

4114 
t_mp4f‹m©
 *
p_fmt
;

4115 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4116 if(
p_fmt
){

4117 
	`°r˝y
(
p_fmt
->
fûíame
, 
VGA_dú
);

4118 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4119 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4120 
p_fmt
->
has_audio
 = 0;

4122 
±hªad_t
 
±_mp4f‹m©_id
;

4123 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4127 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_IDLE
;

4131 if(
p_loˇlßve
->
V1_°©us
 =
LOCALSAVE_STOP
){

4133 
	`f˛o£
(
V1_fd
);

4134 
V1_fd
 = 
NULL
;

4137 
t_mp4f‹m©
 *
p_fmt
;

4138 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4139 if(
p_fmt
){

4140 
	`°r˝y
(
p_fmt
->
fûíame
, 
V1_dú
);

4141 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4142 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4143 
p_fmt
->
has_audio
 = 0;

4145 
±hªad_t
 
±_mp4f‹m©_id
;

4146 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4150 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_IDLE
;

4154 if(
p_loˇlßve
->
V2_°©us
 =
LOCALSAVE_STOP
){

4156 
	`f˛o£
(
V2_fd
);

4157 
V2_fd
 = 
NULL
;

4160 
t_mp4f‹m©
 *
p_fmt
;

4161 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4162 if(
p_fmt
){

4163 
	`°r˝y
(
p_fmt
->
fûíame
, 
V2_dú
);

4164 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4165 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4166 
p_fmt
->
has_audio
 = 0;

4168 
±hªad_t
 
±_mp4f‹m©_id
;

4169 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4173 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_IDLE
;

4177 if(
p_loˇlßve
->
V3_°©us
 =
LOCALSAVE_STOP
){

4179 
	`f˛o£
(
V3_fd
);

4180 
V3_fd
 = 
NULL
;

4183 
t_mp4f‹m©
 *
p_fmt
;

4184 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4185 if(
p_fmt
){

4186 
	`°r˝y
(
p_fmt
->
fûíame
, 
V3_dú
);

4187 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4188 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4189 
p_fmt
->
has_audio
 = 0;

4191 
±hªad_t
 
±_mp4f‹m©_id
;

4192 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4196 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_IDLE
;

4200 if(
p_loˇlßve
->
V4_°©us
 =
LOCALSAVE_STOP
){

4202 
	`f˛o£
(
V4_fd
);

4203 
V4_fd
 = 
NULL
;

4206 
t_mp4f‹m©
 *
p_fmt
;

4207 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4208 if(
p_fmt
){

4209 
	`°r˝y
(
p_fmt
->
fûíame
, 
V4_dú
);

4210 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4211 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4212 
p_fmt
->
has_audio
 = 0;

4214 
±hªad_t
 
±_mp4f‹m©_id
;

4215 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4219 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_IDLE
;

4222 if(
p_loˇlßve
->
V5_°©us
 =
LOCALSAVE_STOP
){

4224 
	`f˛o£
(
V5_fd
);

4225 
V5_fd
 = 
NULL
;

4228 
t_mp4f‹m©
 *
p_fmt
;

4229 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4230 if(
p_fmt
){

4231 
	`°r˝y
(
p_fmt
->
fûíame
, 
V5_dú
);

4232 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4233 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4234 
p_fmt
->
has_audio
 = 0;

4236 
±hªad_t
 
±_mp4f‹m©_id
;

4237 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4241 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_IDLE
;

4244 if(
p_loˇlßve
->
V6_°©us
 =
LOCALSAVE_STOP
){

4246 
	`f˛o£
(
V6_fd
);

4247 
V6_fd
 = 
NULL
;

4250 
t_mp4f‹m©
 *
p_fmt
;

4251 
p_fmt
 = 
	`mÆloc
((
t_mp4f‹m©
));

4252 if(
p_fmt
){

4253 
	`°r˝y
(
p_fmt
->
fûíame
, 
V6_dú
);

4254 
	`°rˇt
(
p_fmt
->
fûíame
, filename);

4255 
	`•rötf
(
p_fmt
->
Âs
, "%.3f", 
g_cfg
.
‰ame_øã
);

4256 
p_fmt
->
has_audio
 = 0;

4258 
±hªad_t
 
±_mp4f‹m©_id
;

4259 
	`±hªad_¸óã
(&
±_mp4f‹m©_id
, 
NULL
, 
thªad_mp4f‹m©
, (*)
p_fmt
);

4263 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_IDLE
;

4266 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)){

4268 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
Vmux_°‹e
){

4269 if(
p_loˇlßve
->
V°‹e_°©us
 =
LOCALSAVE_RESUME
){

4270 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4271 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4272 
p_loˇlßve
->
V°‹e_°©us
 = 
LOCALSAVE_WORKING
;

4273 
	`Ârötf
(
pfd
, "RESUME: %d\n", 
‰ame_cou¡
);

4277 if(
p_loˇlßve
->
V°‹e_°©us
 =
LOCALSAVE_WORKING
){

4278 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
vfd
);

4280 
‰ame_cou¡
++;

4283 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
Vmux_live
){

4284 if(
p_loˇlßve
->
Vlive_°©us
 =
LOCALSAVE_RESUME
){

4285 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4286 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4287 
p_loˇlßve
->
Vlive_°©us
 = 
LOCALSAVE_WORKING
;

4291 if(
p_loˇlßve
->
Vlive_°©us
 =
LOCALSAVE_WORKING
){

4292 if(
p_loˇlßve
->
sock
 != -1){

4293 
pkt_buf
[
STREAMING_PACKET_HEADER_LENGTH
];

4294 
t_°ªamög_∑ckë_hódî
 *
±r
 = (t_°ªamög_∑ckë_hódî *)
pkt_buf
;

4296 
±r
->
Êag
 = 0;

4297 
±r
->
size
 = 
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Àn
;

4298 
±r
->
ty≥
 = 
PACKET_TYPE_VIDEO
;

4300 
±r
->
time°amp
 = 
live_v‰ames
*1000/
g_cfg
.
‰ame_øã
;

4302 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
){

4303 
±r
->
Êag
 = 
FRAME_FLAG_KEYFRAME
;

4306 
±r
->
Êag
 = 0;

4309 
ªt
 = 
	`£nd
(
p_loˇlßve
->
sock
, 
pkt_buf
, 
STREAMING_PACKET_HEADER_LENGTH
, 0);

4310 if(
ªt
<
STREAMING_PACKET_HEADER_LENGTH
){

4311 
	`˛o£
(
p_loˇlßve
->
sock
);

4312 
p_loˇlßve
->
sock
 = -1;

4314 if(
p_loˇlßve
->
sock
 != -1){

4315 
ªt
 = 
	`£nd
(
p_loˇlßve
->
sock
, 
	`d©afifo_hód
’_loˇlßve->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 0);

4316 if(
ªt
<
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Àn
){

4317 
	`˛o£
(
p_loˇlßve
->
sock
);

4318 
p_loˇlßve
->
sock
 = -1;

4320 
live_v‰ames
++;

4326 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
VGA
){

4327 if(
p_loˇlßve
->
VGA_°©us
 =
LOCALSAVE_RESUME
){

4328 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4329 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4330 
p_loˇlßve
->
VGA_°©us
 = 
LOCALSAVE_WORKING
;

4334 if(
p_loˇlßve
->
VGA_°©us
 =
LOCALSAVE_WORKING
){

4335 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
VGA_fd
);

4339 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
V1
){

4340 if(
p_loˇlßve
->
V1_°©us
 =
LOCALSAVE_RESUME
){

4341 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4342 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4343 
p_loˇlßve
->
V1_°©us
 = 
LOCALSAVE_WORKING
;

4347 if(
p_loˇlßve
->
V1_°©us
 =
LOCALSAVE_WORKING
){

4348 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
V1_fd
);

4350 
g_vm≠_èbÀ
[0].
fun˘i⁄
){

4351 
VIDEO_FUNCTION_TEACHER_CLOSEUP
:

4352 if(
g_f‹w¨d_èbÀ
.
ãachî•ecül
){

4353 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_CLOSEUP
, &
v1_‰ames
);

4357 
VIDEO_FUNCTION_STUDENT_CLOSEUP
:

4358 if(
g_f‹w¨d_èbÀ
.
°udít•ecül
){

4359 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_CLOSEUP
, &
v1_‰ames
);

4362 
VIDEO_FUNCTION_TEACHER_PANORAMA
:

4363 if(
g_f‹w¨d_èbÀ
.
ãachîfuŒ
){

4364 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_PANORAMA
, &
v1_‰ames
);

4367 
VIDEO_FUNCTION_STUDENT_PANORAMA
:

4368 if(
g_f‹w¨d_èbÀ
.
°udítfuŒ
){

4369 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_PANORAMA
, &
v1_‰ames
);

4372 
VIDEO_FUNCTION_BOARD_CLOSEUP
:

4373 if(
g_f‹w¨d_èbÀ
.
bœckbﬂrd
){

4374 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_BOARD_CLOSEUP
, &
v1_‰ames
);

4383 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
V2
){

4384 if(
p_loˇlßve
->
V2_°©us
 =
LOCALSAVE_RESUME
){

4385 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4386 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4387 
p_loˇlßve
->
V2_°©us
 = 
LOCALSAVE_WORKING
;

4391 if(
p_loˇlßve
->
V2_°©us
 =
LOCALSAVE_WORKING
){

4392 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
V2_fd
);

4394 
g_vm≠_èbÀ
[1].
fun˘i⁄
){

4395 
VIDEO_FUNCTION_TEACHER_CLOSEUP
:

4396 if(
g_f‹w¨d_èbÀ
.
ãachî•ecül
){

4397 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_CLOSEUP
, &
v2_‰ames
);

4401 
VIDEO_FUNCTION_STUDENT_CLOSEUP
:

4402 if(
g_f‹w¨d_èbÀ
.
°udít•ecül
){

4403 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_CLOSEUP
, &
v2_‰ames
);

4406 
VIDEO_FUNCTION_TEACHER_PANORAMA
:

4407 if(
g_f‹w¨d_èbÀ
.
ãachîfuŒ
){

4408 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_PANORAMA
, &
v2_‰ames
);

4411 
VIDEO_FUNCTION_STUDENT_PANORAMA
:

4412 if(
g_f‹w¨d_èbÀ
.
°udítfuŒ
){

4413 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_PANORAMA
, &
v2_‰ames
);

4416 
VIDEO_FUNCTION_BOARD_CLOSEUP
:

4417 if(
g_f‹w¨d_èbÀ
.
bœckbﬂrd
){

4418 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_BOARD_CLOSEUP
, &
v2_‰ames
);

4428 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
V3
){

4429 if(
p_loˇlßve
->
V3_°©us
 =
LOCALSAVE_RESUME
){

4430 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4431 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4432 
p_loˇlßve
->
V3_°©us
 = 
LOCALSAVE_WORKING
;

4436 if(
p_loˇlßve
->
V3_°©us
 =
LOCALSAVE_WORKING
){

4437 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
V3_fd
);

4439 
g_vm≠_èbÀ
[2].
fun˘i⁄
){

4440 
VIDEO_FUNCTION_TEACHER_CLOSEUP
:

4441 if(
g_f‹w¨d_èbÀ
.
ãachî•ecül
){

4442 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_CLOSEUP
, &
v3_‰ames
);

4446 
VIDEO_FUNCTION_STUDENT_CLOSEUP
:

4447 if(
g_f‹w¨d_èbÀ
.
°udít•ecül
){

4448 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_CLOSEUP
, &
v3_‰ames
);

4451 
VIDEO_FUNCTION_TEACHER_PANORAMA
:

4452 if(
g_f‹w¨d_èbÀ
.
ãachîfuŒ
){

4453 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_PANORAMA
, &
v3_‰ames
);

4456 
VIDEO_FUNCTION_STUDENT_PANORAMA
:

4457 if(
g_f‹w¨d_èbÀ
.
°udítfuŒ
){

4458 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_PANORAMA
, &
v3_‰ames
);

4461 
VIDEO_FUNCTION_BOARD_CLOSEUP
:

4462 if(
g_f‹w¨d_èbÀ
.
bœckbﬂrd
){

4463 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_BOARD_CLOSEUP
, &
v3_‰ames
);

4473 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
V4
){

4474 if(
p_loˇlßve
->
V4_°©us
 =
LOCALSAVE_RESUME
){

4475 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4476 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4477 
p_loˇlßve
->
V4_°©us
 = 
LOCALSAVE_WORKING
;

4481 if(
p_loˇlßve
->
V4_°©us
 =
LOCALSAVE_WORKING
){

4482 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
V4_fd
);

4484 
g_vm≠_èbÀ
[3].
fun˘i⁄
){

4485 
VIDEO_FUNCTION_TEACHER_CLOSEUP
:

4486 if(
g_f‹w¨d_èbÀ
.
ãachî•ecül
){

4487 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_CLOSEUP
, &
v4_‰ames
);

4491 
VIDEO_FUNCTION_STUDENT_CLOSEUP
:

4492 if(
g_f‹w¨d_èbÀ
.
°udít•ecül
){

4493 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_CLOSEUP
, &
v4_‰ames
);

4496 
VIDEO_FUNCTION_TEACHER_PANORAMA
:

4497 if(
g_f‹w¨d_èbÀ
.
ãachîfuŒ
){

4498 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_PANORAMA
, &
v4_‰ames
);

4501 
VIDEO_FUNCTION_STUDENT_PANORAMA
:

4502 if(
g_f‹w¨d_èbÀ
.
°udítfuŒ
){

4503 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_PANORAMA
, &
v4_‰ames
);

4506 
VIDEO_FUNCTION_BOARD_CLOSEUP
:

4507 if(
g_f‹w¨d_èbÀ
.
bœckbﬂrd
){

4508 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_BOARD_CLOSEUP
, &
v4_‰ames
);

4518 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
V5
){

4519 if(
p_loˇlßve
->
V5_°©us
 =
LOCALSAVE_RESUME
){

4520 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4521 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4522 
p_loˇlßve
->
V5_°©us
 = 
LOCALSAVE_WORKING
;

4526 if(
p_loˇlßve
->
V5_°©us
 =
LOCALSAVE_WORKING
){

4527 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
V5_fd
);

4529 
g_vm≠_èbÀ
[4].
fun˘i⁄
){

4530 
VIDEO_FUNCTION_TEACHER_CLOSEUP
:

4531 if(
g_f‹w¨d_èbÀ
.
ãachî•ecül
){

4532 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_CLOSEUP
, &
v5_‰ames
);

4536 
VIDEO_FUNCTION_STUDENT_CLOSEUP
:

4537 if(
g_f‹w¨d_èbÀ
.
°udít•ecül
){

4538 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_CLOSEUP
, &
v5_‰ames
);

4541 
VIDEO_FUNCTION_TEACHER_PANORAMA
:

4542 if(
g_f‹w¨d_èbÀ
.
ãachîfuŒ
){

4543 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_TEACHER_PANORAMA
, &
v5_‰ames
);

4546 
VIDEO_FUNCTION_STUDENT_PANORAMA
:

4547 if(
g_f‹w¨d_èbÀ
.
°udítfuŒ
){

4548 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_STUDENT_PANORAMA
, &
v5_‰ames
);

4551 
VIDEO_FUNCTION_BOARD_CLOSEUP
:

4552 if(
g_f‹w¨d_èbÀ
.
bœckbﬂrd
){

4553 
	`°ªam‰ame
(
p_loˇlßve
, 
VIDEO_FUNCTION_BOARD_CLOSEUP
, &
v5_‰ames
);

4563 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
V6
){

4564 if(
p_loˇlßve
->
V6_°©us
 =
LOCALSAVE_RESUME
){

4565 if((
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_FIRSTFRAME
)

4566 ||(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
)){

4567 
p_loˇlßve
->
V6_°©us
 = 
LOCALSAVE_WORKING
;

4571 if(
p_loˇlßve
->
V6_°©us
 =
LOCALSAVE_WORKING
){

4572 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
V6_fd
);

4576 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =p_loˇlßve->
audio
){

4577 if(
p_loˇlßve
->
V°‹e_°©us
 =
LOCALSAVE_WORKING
){

4578 
	`fwrôe
(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, 1, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 
afd
);

4581 if(
p_loˇlßve
->
Vlive_°©us
 =
LOCALSAVE_WORKING
){

4582 if(
p_loˇlßve
->
sock
 != -1){

4583 
pkt_buf
[
STREAMING_PACKET_HEADER_LENGTH
];

4584 
t_°ªamög_∑ckë_hódî
 *
±r
 = (t_°ªamög_∑ckë_hódî *)
pkt_buf
;

4586 
±r
->
Êag
 = 0;

4587 
±r
->
size
 = 
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Àn
;

4588 
±r
->
ty≥
 = 
PACKET_TYPE_AUDIO
;

4590 
±r
->
time°amp
 = 
live_a‰ames
*1024/44.100;

4592 if(
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Êags
 & 
FRAME_FLAG_KEYFRAME
){

4593 
±r
->
Êag
 = 
FRAME_FLAG_KEYFRAME
;

4596 
±r
->
Êag
 = 0;

4599 
ªt
 = 
	`£nd
(
p_loˇlßve
->
sock
, 
pkt_buf
, 
STREAMING_PACKET_HEADER_LENGTH
, 0);

4600 if(
ªt
<
STREAMING_PACKET_HEADER_LENGTH
){

4601 
	`˛o£
(
p_loˇlßve
->
sock
);

4602 
p_loˇlßve
->
sock
 = -1;

4604 if(
p_loˇlßve
->
sock
 != -1){

4605 
ªt
 = 
	`£nd
(
p_loˇlßve
->
sock
, 
	`d©afifo_hód
’_loˇlßve->
av_c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód’_loˇlßve->av_c⁄sumî_fifo)->¨g.
Àn
, 0);

4606 if(
ªt
<
	`d©afifo_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
)->
¨g
.
Àn
){

4607 
	`˛o£
(
p_loˇlßve
->
sock
);

4608 
p_loˇlßve
->
sock
 = -1;

4610 
live_a‰ames
++;

4617 
	`d©afifo_c⁄sumî_ªmove_hód
(
p_loˇlßve
->
av_c⁄sumî_fifo
);

4619 
	`u¶ìp
(1000);

4623 if(
p_loˇlßve
->
sock
>0){

4624 
	`˛o£
(
p_loˇlßve
->
sock
);

4625 
p_loˇlßve
->
sock
 = -1;

4626 
	`u¶ìp
(10000);

4628 
	`debug_¥ötf
("threadÜocalsaveÉxit\n");

4629 
p_loˇlßve
->
thªad_ˇn˚Àd
 = 2;

4631 
	`±hªad_exô
(0);

4632 
	}
}

4634 
	$thªad_img_askexô
(
t_img_thªad_∑øm
 *
±r
)

4636 if(
±r
->
thªad_ˇn˚Àd
 == 0){

4637 
±r
->
thªad_ˇn˚Àd
 = 1;

4639 
	}
}

4641 
	$thªad_img_exôed
(
t_img_thªad_∑øm
 *
±r
)

4643  
±r
->
thªad_ˇn˚Àd
==2?1:0;

4644 
	}
}

4648 
	$yuv422_to_j≥g
(*
§c
, * 
d°
, 
image_width
, 
image_height
, 
FILE
 *
tmpfûe
, 
quÆôy
)

4650 
j≥g_com¥ess_°ru˘
 
cöfo
;

4651 
j≥g_îr‹_mgr
 
jîr
;

4654 
JSAMPIMAGE
 
buf„r
;

4655 
b™d
,
i
,
buf_width
[3],
buf_height
[3], 
mem_size
, 
max_löe
, 
cou¡î
;

4656 *
yuv
[3];

4657 
uöt8_t
 *
pSrc
, *
pD°
;

4659 
yuv
[0] = 
§c
;

4660 
yuv
[1] = yuv[0] + (
image_width
 * 
image_height
);

4661 
yuv
[2] = yuv[1] + (
image_width
 * 
image_height
) /2;

4663 
	`f£ek
(
tmpfûe
, 0, 0);

4665 
cöfo
.
îr
 = 
	`j≥g_°d_îr‹
(&
jîr
);

4666 
	`j≥g_¸óã_com¥ess
(&
cöfo
);

4667 
	`j≥g_°dio_de°
(&
cöfo
, 
tmpfûe
);

4669 
cöfo
.
image_width
 = image_width;

4670 
cöfo
.
image_height
 = image_height;

4671 
cöfo
.
öput_comp⁄íts
 = 3;

4672 
cöfo
.
ö_cﬁ‹_•a˚
 = 
JCS_RGB
;

4674 
	`j≥g_£t_deÁu…s
(&
cöfo
);

4675 
	`j≥g_£t_quÆôy
(&
cöfo
, 
quÆôy
, 
TRUE
 );

4677 
cöfo
.
øw_d©a_ö
 = 
TRUE
;

4678 
cöfo
.
j≥g_cﬁ‹_•a˚
 = 
JCS_YCbCr
;

4679 
cöfo
.
do_Áncy_downßm∂ög
 = 
FALSE
;

4680 
cöfo
.
comp_öfo
[0].
h_ßmp_Á˘‹
 = 2;

4681 
cöfo
.
comp_öfo
[0].
v_ßmp_Á˘‹
 = 1;

4683 
	`j≥g_°¨t_com¥ess
(&
cöfo
, 
TRUE
);

4685 
buf„r
 = (
JSAMPIMAGE
Ë(*
cöfo
.
mem
->
Æloc_smÆl
Ë((
j_comm⁄_±r
Ë&cöfo, 
JPOOL_IMAGE
, 3 * (
JSAMPARRAY
));

4686 
b™d
=0; band <3; band++)

4688 
buf_width
[
b™d
] = 
cöfo
.
comp_öfo
[b™d].
width_ö_blocks
 * 
DCTSIZE
;

4689 
buf_height
[
b™d
] = 
cöfo
.
comp_öfo
[b™d].
v_ßmp_Á˘‹
 * 
DCTSIZE
;

4690 
buf„r
[
b™d
] = (*
cöfo
.
mem
->
Æloc_ßºay
Ë((
j_comm⁄_±r
Ë&cöfo, 
JPOOL_IMAGE
, 
buf_width
[b™d], 
buf_height
[band]);

4692 
max_löe
 = 
cöfo
.
max_v_ßmp_Á˘‹
*
DCTSIZE
;

4693 
cou¡î
=0; 
cöfo
.
√xt_sˇ∆öe
 < cöfo.
image_height
; counter++)

4696 
b™d
=0; band <3; band++)

4698 
mem_size
 = 
buf_width
[
b™d
];

4699 
pD°
 = (
uöt8_t
 *Ë
buf„r
[
b™d
][0];

4700 
pSrc
 = (
uöt8_t
 *Ë
yuv
[
b™d
] + 
cou¡î
*
buf_height
[b™d] * 
buf_width
[band];

4702 
i
=0; i <
buf_height
[
b™d
]; i++)

4704 
	`mem˝y
(
pD°
, 
pSrc
, 
mem_size
);

4705 
pSrc
 +
buf_width
[
b™d
];

4706 
pD°
 +
buf_width
[
b™d
];

4709 
	`j≥g_wrôe_øw_d©a
(&
cöfo
, 
buf„r
, 
max_löe
);

4712 
	`j≥g_föish_com¥ess
(&
cöfo
);

4713 
	`j≥g_de°roy_com¥ess
(&
cöfo
);

4715 
Àn
 = 
	`·ñl
(
tmpfûe
);

4716 
	`f£ek
(
tmpfûe
, 0, 0);

4717 
	`‰ód
(
d°
, 
Àn
, 1,
tmpfûe
);

4719  
Àn
;

4720 
	}
}

4722 
	$yuv422_to_∂™√r
(*
§c
, *
de°
, 
image_width
, 
image_height
)

4724 *
yuv
[3];

4725 
yuv
[0] = 
de°
;

4726 
yuv
[1] = yuv[0] + (
image_width
 * 
image_height
);

4727 
yuv
[2] = yuv[1] + (
image_width
 * 
image_height
)/2;

4728 
i
;

4730 
i
 = 0; i < 
image_height
*
image_width
; i++){

4731 
yuv
[0][
i
] = 
§c
[2*i];

4733 
i
 = 0; i < 
image_height
*
image_width
/2; i++){

4734 
yuv
[1][
i
] = 
§c
[4*i+1];

4736 
i
 = 0; i < 
image_height
*
image_width
/2; i++){

4737 
yuv
[2][
i
] = 
§c
[4*i+3];

4739  
image_height
*
image_width
*2;

4740 
	}
}

4742 
	$yuv422_to_yuv420
(*
§c
, *
de°
, 
image_width
, 
image_height
)

4744 *
±r_s
, *
±r_d
;

4745 
i
,
j
;

4747 
±r_s
 = 
§c
;

4748 
±r_d
 = 
de°
;

4749 
i
 = 0; i<
image_height
*
image_width
; i++){

4750 
±r_d
[
i
] = 
±r_s
[i*2];

4753 
±r_d
 = 
de°
 + 
image_height
*
image_width
;

4754 
j
 = 0; j<
image_height
/2; j++){

4755 
i
 = 0; i<
image_width
; i++){

4757 
±r_d
[
i
] = 
±r_s
[i*2+1];

4759 
±r_s
 +
image_width
*4;

4760 
±r_d
 +
image_width
;

4762  
image_height
*
image_width
*3/2;

4763 
	}
}

4765 
	$yuv422_to_y
(*
§c
, *
de°
, 
image_width
, 
image_height
)

4767 
i
;

4768 
i
=0; i<
image_height
*
image_width
; i++){

4769 
de°
[
i
] = 
§c
[i*2];

4771  
image_height
*
image_width
;

4772 
	}
}

4774 
	$JPEGPacknSíd2df
(*
buf
, 
Àn
, 
‰ame_num
, 
time°amp
, 
ch™√l
, 
t_d©afifo
 *
df
)

4776 
t_‰ame_öfo
 
‰m_öfo
;

4777 
i
;

4778 *
±r
;

4779 
ªsiduÆ
;

4780 
pkt_Àn
;

4781 
Êags
;

4783 
‰m_öfo
.
‰ame_Àngth
 = 
Àn
;

4784 
‰m_öfo
.
‰ame_num
 = frame_num;

4785 
‰m_öfo
.
‰ame_ty≥
 = 0;

4786 
‰m_öfo
.
time_°amp
 = 
time°amp
;

4787 
‰m_öfo
.
pkts_ö_‰ame
 = 
Àn
/
MAX_AVPKT_SIZE
;

4788 
ªsiduÆ
 = 
Àn
 - 
MAX_AVPKT_SIZE
 * 
‰m_öfo
.
pkts_ö_‰ame
;

4789 if(
ªsiduÆ
){

4790 
‰m_öfo
.
pkts_ö_‰ame
 += 1;

4793 
ªsiduÆ
 = 
Àn
;

4794 
±r
 = 
buf
;

4795 
i
=0; i<
‰m_öfo
.
pkts_ö_‰ame
; i++){

4796 
‰m_öfo
.
∑ckë_num
 = 
i
;

4797 
pkt_Àn
 = (
MAX_AVPKT_SIZE
<
ªsiduÆ
)?MAX_AVPKT_SIZE:residual;

4800 
t_cmd
 
Msg
;

4801 
	`fûl_cmd_hódî
(&
Msg
, 
COMMAND_EVENT_JPEG
);

4802 
	`add_©å_öt
(&
Msg
, "SåómId", 
ch™√l
);

4803 
	`add_©å_bö
(&
Msg
, "Info", (*)&
‰m_öfo
, (frm_info));

4804 
	`add_©å_bö
(&
Msg
, "D©a", (*)
±r
, 
pkt_Àn
);

4807 
size_t
 
size
;

4808 
	`ch¨2hex
(
Msg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

4809 
size
 +
PACKET_HEADER_SIZE
;

4811 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

4812 
	`d©afifo_¥odu˚r_d©a_add
(
df
, (*)
Msg
.
fuŒbuf
, 
size
, 
Êags
, 0);

4815 
±r
 +
pkt_Àn
;

4816 
ªsiduÆ
 -
pkt_Àn
;

4819 
	}
}

4821 
	$PIPPacknSíd2df
(*
buf
, 
Àn
, 
‰ame_num
, 
time°amp
, 
ch™√l
, 
t_d©afifo
 *
df
)

4823 
t_‰ame_öfo
 
‰m_öfo
;

4824 
i
;

4825 *
±r
;

4826 
ªsiduÆ
;

4827 
pkt_Àn
;

4828 
Êags
;

4830 
‰m_öfo
.
‰ame_Àngth
 = 
Àn
;

4831 
‰m_öfo
.
‰ame_num
 = frame_num;

4832 
‰m_öfo
.
‰ame_ty≥
 = 0;

4833 
‰m_öfo
.
time_°amp
 = 
time°amp
;

4834 
‰m_öfo
.
pkts_ö_‰ame
 = 
Àn
/
MAX_AVPKT_SIZE
;

4835 
ªsiduÆ
 = 
Àn
 - 
MAX_AVPKT_SIZE
 * 
‰m_öfo
.
pkts_ö_‰ame
;

4836 if(
ªsiduÆ
){

4837 
‰m_öfo
.
pkts_ö_‰ame
 += 1;

4840 
ªsiduÆ
 = 
Àn
;

4841 
±r
 = 
buf
;

4842 
i
=0; i<
‰m_öfo
.
pkts_ö_‰ame
; i++){

4843 
‰m_öfo
.
∑ckë_num
 = 
i
;

4844 
pkt_Àn
 = (
MAX_AVPKT_SIZE
<
ªsiduÆ
)?MAX_AVPKT_SIZE:residual;

4847 
t_cmd
 
Msg
;

4848 
	`fûl_cmd_hódî
(&
Msg
, 
COMMAND_EVENT_PIP
);

4849 
	`add_©å_öt
(&
Msg
, "SåómId", 
ch™√l
);

4850 
	`add_©å_bö
(&
Msg
, "Info", (*)&
‰m_öfo
, (frm_info));

4851 
	`add_©å_bö
(&
Msg
, "D©a", (*)
±r
, 
pkt_Àn
);

4854 
size_t
 
size
;

4855 
	`ch¨2hex
(
Msg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

4856 
size
 +
PACKET_HEADER_SIZE
;

4858 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

4859 
	`d©afifo_¥odu˚r_d©a_add
(
df
, (*)
Msg
.
fuŒbuf
, 
size
, 
Êags
, 0);

4862 
±r
 +
pkt_Àn
;

4863 
ªsiduÆ
 -
pkt_Àn
;

4866 
	}
}

4868 
	#SKIP_STEP
 5

	)

4869 * 
	$thªad_img
(* 
∑øm
)

4871 
	`±hªad_dëach
(
	`±hªad_£lf
());

4872 
t_img_thªad_∑øm
 *
thªad_∑øm
 = (t_img_thªad_∑øm *)
∑øm
;

4873 *
buf„r1
, *
buf„r2
;

4874 
FILE
 *
fd
;

4877 
buf„r1
 = 
	`mÆloc
(256*144*2);

4878 if(!
buf„r1
){

4879 
	`debug_¥ötf
("allocate buffer fail\n");

4880 
	`exô
(0);

4883 
buf„r2
 = 
	`mÆloc
(256*144*2*2);

4884 if(!
buf„r2
){

4885 
	`debug_¥ötf
("allocate buffer fail\n");

4886 
	`exô
(0);

4889 
fd
 = 
	`f›í
("./frame_result.jpg","w+");

4890 if(!
fd
){

4891 
	`debug_¥ötf
("canÇot openÅarget file for jpeg\n");

4892 
	`exô
(0);

4896 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

4900 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)){

4902 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
imgV
){

4904 
Àngth
;

4905 
	`yuv422_to_∂™√r
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

4906 
Àngth
 = 
	`yuv422_to_j≥g
(
buf„r1
, 
buf„r2
, 256, 144, 
fd
, 100);

4908 
	`JPEGPacknSíd2df
(
buf„r2
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

4909 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 0,Åhªad_∑øm->
JPEG_¥odu˚r_fifo
);

4912 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
imgM
){

4916 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
img1
){

4919 
Àngth
;

4920 
	`yuv422_to_∂™√r
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

4921 
Àngth
 = 
	`yuv422_to_j≥g
(
buf„r1
, 
buf„r2
, 256, 144, 
fd
, 100);

4923 
	`JPEGPacknSíd2df
(
buf„r2
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

4924 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 
g_vm≠_èbÀ
[0].
fun˘i⁄
,Åhªad_∑øm->
JPEG_¥odu˚r_fifo
);

4927 if(
g_vm≠_èbÀ
[0].
pù
){

4928 
Àngth
 = 
	`yuv422_to_yuv420
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

4929 
	`PIPPacknSíd2df
(
buf„r1
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

4930 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 0,Åhªad_∑øm->
PIP_¥odu˚r_fifo
);

4935 if(
g_vm≠_èbÀ
[0].
fun˘i⁄
 == 1){

4936 
ˇmhﬁdî_°ûl
;

4937 
™Æyze_‰ame_num
;

4938 
num_ö_group
;

4940 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

4941 
ˇmhﬁdî_°ûl
 = 
g_ˇmhﬁdî_°ûl
;

4942 
™Æyze_‰ame_num
 = 
g_™Æyze_‰ame_num
;

4943 
num_ö_group
 = 
g_num_ö_group
;

4945 if(
g_ˇmhﬁdî_°ûl
){

4946 
g_™Æyze_‰ame_num
++;

4947 if(
g_™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

4948 
g_num_ö_group
++;

4951 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

4953 if(
ˇmhﬁdî_°ûl
){

4954 
™Æyze_‰ame_num
++;

4955 if(
™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

4956 
Àngth
 = 
	`yuv422_to_y
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

4957 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

4958 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
fûãªd_img_¥odu˚r_fifo
, 
buf„r1
, 
Àngth
, 
Êags
, 
num_ö_group
);

4966 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
img2
){

4969 
Àngth
;

4970 
	`yuv422_to_∂™√r
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

4971 
Àngth
 = 
	`yuv422_to_j≥g
(
buf„r1
, 
buf„r2
, 256, 144, 
fd
, 100);

4973 
	`JPEGPacknSíd2df
(
buf„r2
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

4974 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 
g_vm≠_èbÀ
[1].
fun˘i⁄
,Åhªad_∑øm->
JPEG_¥odu˚r_fifo
);

4977 if(
g_vm≠_èbÀ
[1].
pù
){

4978 
Àngth
 = 
	`yuv422_to_yuv420
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

4979 
	`PIPPacknSíd2df
(
buf„r1
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

4980 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 0,Åhªad_∑øm->
PIP_¥odu˚r_fifo
);

4984 if(
g_vm≠_èbÀ
[1].
fun˘i⁄
 == 1){

4985 
ˇmhﬁdî_°ûl
;

4986 
™Æyze_‰ame_num
;

4987 
num_ö_group
;

4989 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

4990 
ˇmhﬁdî_°ûl
 = 
g_ˇmhﬁdî_°ûl
;

4991 
™Æyze_‰ame_num
 = 
g_™Æyze_‰ame_num
;

4992 
num_ö_group
 = 
g_num_ö_group
;

4994 if(
g_ˇmhﬁdî_°ûl
){

4995 
g_™Æyze_‰ame_num
++;

4996 if(
g_™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

4997 
g_num_ö_group
++;

5000 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

5002 if(
ˇmhﬁdî_°ûl
){

5003 
™Æyze_‰ame_num
++;

5004 if(
™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5005 
Àngth
 = 
	`yuv422_to_y
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5006 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

5007 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
fûãªd_img_¥odu˚r_fifo
, 
buf„r1
, 
Àngth
, 
Êags
, 
num_ö_group
);

5015 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
img3
){

5017 
Àngth
;

5018 
	`yuv422_to_∂™√r
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5019 
Àngth
 = 
	`yuv422_to_j≥g
(
buf„r1
, 
buf„r2
, 256, 144, 
fd
, 100);

5021 
	`JPEGPacknSíd2df
(
buf„r2
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5022 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 
g_vm≠_èbÀ
[2].
fun˘i⁄
,Åhªad_∑øm->
JPEG_¥odu˚r_fifo
);

5024 if(
g_vm≠_èbÀ
[2].
pù
){

5025 
Àngth
 = 
	`yuv422_to_yuv420
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5026 
	`PIPPacknSíd2df
(
buf„r1
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5027 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 0,Åhªad_∑øm->
PIP_¥odu˚r_fifo
);

5030 if(
g_vm≠_èbÀ
[2].
fun˘i⁄
 == 1){

5031 
ˇmhﬁdî_°ûl
;

5032 
™Æyze_‰ame_num
;

5033 
num_ö_group
;

5035 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

5036 
ˇmhﬁdî_°ûl
 = 
g_ˇmhﬁdî_°ûl
;

5037 
™Æyze_‰ame_num
 = 
g_™Æyze_‰ame_num
;

5038 
num_ö_group
 = 
g_num_ö_group
;

5040 if(
g_ˇmhﬁdî_°ûl
){

5041 
g_™Æyze_‰ame_num
++;

5042 if(
g_™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5043 
g_num_ö_group
++;

5046 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

5048 if(
ˇmhﬁdî_°ûl
){

5049 
™Æyze_‰ame_num
++;

5050 if(
™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5051 
Àngth
 = 
	`yuv422_to_y
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5052 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

5053 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
fûãªd_img_¥odu˚r_fifo
, 
buf„r1
, 
Àngth
, 
Êags
, 
num_ö_group
);

5060 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
img4
){

5062 
Àngth
;

5063 
	`yuv422_to_∂™√r
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5064 
Àngth
 = 
	`yuv422_to_j≥g
(
buf„r1
, 
buf„r2
, 256, 144, 
fd
, 100);

5066 
	`JPEGPacknSíd2df
(
buf„r2
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5067 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 
g_vm≠_èbÀ
[3].
fun˘i⁄
,Åhªad_∑øm->
JPEG_¥odu˚r_fifo
);

5069 if(
g_vm≠_èbÀ
[3].
pù
){

5070 
Àngth
 = 
	`yuv422_to_yuv420
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5071 
	`PIPPacknSíd2df
(
buf„r1
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5072 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 0,Åhªad_∑øm->
PIP_¥odu˚r_fifo
);

5075 if(
g_vm≠_èbÀ
[3].
fun˘i⁄
 == 1){

5076 
ˇmhﬁdî_°ûl
;

5077 
™Æyze_‰ame_num
;

5078 
num_ö_group
;

5080 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

5081 
ˇmhﬁdî_°ûl
 = 
g_ˇmhﬁdî_°ûl
;

5082 
™Æyze_‰ame_num
 = 
g_™Æyze_‰ame_num
;

5083 
num_ö_group
 = 
g_num_ö_group
;

5085 if(
g_ˇmhﬁdî_°ûl
){

5086 
g_™Æyze_‰ame_num
++;

5087 if(
g_™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5088 
g_num_ö_group
++;

5091 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

5093 if(
ˇmhﬁdî_°ûl
){

5094 
™Æyze_‰ame_num
++;

5095 if(
™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5096 
Àngth
 = 
	`yuv422_to_y
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5097 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

5098 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
fûãªd_img_¥odu˚r_fifo
, 
buf„r1
, 
Àngth
, 
Êags
, 
num_ö_group
);

5105 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
img5
){

5107 
Àngth
;

5108 
	`yuv422_to_∂™√r
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5109 
Àngth
 = 
	`yuv422_to_j≥g
(
buf„r1
, 
buf„r2
, 256, 144, 
fd
, 100);

5111 
	`JPEGPacknSíd2df
(
buf„r2
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5112 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 
g_vm≠_èbÀ
[4].
fun˘i⁄
,Åhªad_∑øm->
JPEG_¥odu˚r_fifo
);

5114 if(
g_vm≠_èbÀ
[4].
pù
){

5115 
Àngth
 = 
	`yuv422_to_yuv420
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5116 
	`PIPPacknSíd2df
(
buf„r1
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5117 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 0,Åhªad_∑øm->
PIP_¥odu˚r_fifo
);

5120 if(
g_vm≠_èbÀ
[4].
fun˘i⁄
 == 1){

5121 
ˇmhﬁdî_°ûl
;

5122 
™Æyze_‰ame_num
;

5123 
num_ö_group
;

5125 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

5126 
ˇmhﬁdî_°ûl
 = 
g_ˇmhﬁdî_°ûl
;

5127 
™Æyze_‰ame_num
 = 
g_™Æyze_‰ame_num
;

5128 
num_ö_group
 = 
g_num_ö_group
;

5130 if(
g_ˇmhﬁdî_°ûl
){

5131 
g_™Æyze_‰ame_num
++;

5132 if(
g_™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5133 
g_num_ö_group
++;

5136 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

5138 if(
ˇmhﬁdî_°ûl
){

5139 
™Æyze_‰ame_num
++;

5140 if(
™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5141 
Àngth
 = 
	`yuv422_to_y
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5142 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

5143 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
fûãªd_img_¥odu˚r_fifo
, 
buf„r1
, 
Àngth
, 
Êags
, 
num_ö_group
);

5150 if(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
ªf
->
d©afifo
 =thªad_∑øm->
img6
){

5152 
Àngth
;

5153 
	`yuv422_to_∂™√r
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5154 
Àngth
 = 
	`yuv422_to_j≥g
(
buf„r1
, 
buf„r2
, 256, 144, 
fd
, 100);

5156 
	`JPEGPacknSíd2df
(
buf„r2
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5157 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 
g_vm≠_èbÀ
[5].
fun˘i⁄
,Åhªad_∑øm->
JPEG_¥odu˚r_fifo
);

5159 if(
g_vm≠_èbÀ
[5].
pù
){

5160 
Àngth
 = 
	`yuv422_to_yuv420
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5161 
	`PIPPacknSíd2df
(
buf„r1
, 
Àngth
, 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
,

5162 
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
time°amp
, 0,Åhªad_∑øm->
PIP_¥odu˚r_fifo
);

5165 if(
g_vm≠_èbÀ
[5].
fun˘i⁄
 == 1){

5166 
ˇmhﬁdî_°ûl
;

5167 
™Æyze_‰ame_num
;

5168 
num_ö_group
;

5170 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

5171 
ˇmhﬁdî_°ûl
 = 
g_ˇmhﬁdî_°ûl
;

5172 
™Æyze_‰ame_num
 = 
g_™Æyze_‰ame_num
;

5173 
num_ö_group
 = 
g_num_ö_group
;

5175 if(
g_ˇmhﬁdî_°ûl
){

5176 
g_™Æyze_‰ame_num
++;

5177 if(
g_™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5178 
g_num_ö_group
++;

5181 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

5183 if(
ˇmhﬁdî_°ûl
){

5184 
™Æyze_‰ame_num
++;

5185 if(
™Æyze_‰ame_num
%
SKIP_STEP
 == 0){

5186 
Àngth
 = 
	`yuv422_to_y
(
	`d©afifo_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
)->
¨g
.
d©a
, 
buf„r1
, 256, 144);

5187 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

5188 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
fûãªd_img_¥odu˚r_fifo
, 
buf„r1
, 
Àngth
, 
Êags
, 
num_ö_group
);

5195 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
img_c⁄sumî_fifo
);

5197 
	`u¶ìp
(1000);

5199 
	`f˛o£
(
fd
);

5200 
	`‰ì
(
buf„r1
);

5201 
	`‰ì
(
buf„r2
);

5202 
thªad_∑øm
->
thªad_ˇn˚Àd
 = 2;

5203 
	`debug_¥ötf
("thread_imgÉxit\n");

5204 
	`±hªad_exô
(0);

5205 
	}
}

5207 
	$thªad_SwôchTøckög_askexô
(
t_SwôchTøckög_thªad_∑øm
 *
±r
)

5209 if(
±r
->
thªad_ˇn˚Àd
 == 0){

5210 
±r
->
thªad_ˇn˚Àd
 = 1;

5212 
	}
}

5214 
	$thªad_SwôchTøckög_exôed
(
t_SwôchTøckög_thªad_∑øm
 *
±r
)

5216  
±r
->
thªad_ˇn˚Àd
==2?1:0;

5217 
	}
}

5219 
	$byã2öt
(*
buf
)

5221 
ªsu…
=0;

5222 
i
;

5224 
i
=0; i<4; i++){

5225 
ªsu…
 <<= 4;

5226 
ªsu…
 |
buf
[
i
];

5228 if(
ªsu…
&0x8000){

5229 
ªsu…
 |= 0xffff0000;

5231  
ªsu…
;

5232 
	}
}

5234 
	$GëDëe˘Resu…
(
t_Dëe˘Resu…
 *
ªsu…
, *
Msg
)

5237 
Àn
;

5238 *
±r
;

5243 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

5244 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

5246 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

5248 
	`mem£t
(
ªsu…
, 0, (
t_Dëe˘Resu…
));

5249 
Àn
){

5250 
«me_Àn
, 
vÆue_Àn
;

5251 
©å_«me
[16];

5252 
©å_vÆue
[16];

5254 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

5255 
±r
++;

5257 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

5258 
±r
 += 4;

5260 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

5261 
©å_«me
[
«me_Àn
] = '\0';

5262 
±r
 +
«me_Àn
;

5264 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

5265 
©å_vÆue
[
vÆue_Àn
] = '\0';

5266 
±r
 +
vÆue_Àn
;

5268 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

5270 if(!
	`°rcmp
(
©å_«me
, "Detected")){

5271 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
dëe˘ed
, 
vÆue_Àn
);

5274 if(!
	`°rcmp
(
©å_«me
, "AvgTop")){

5275 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
avg_t›
, 
vÆue_Àn
);

5278 if(!
	`°rcmp
(
©å_«me
, "AvgLeft")){

5279 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
avg_À·
, 
vÆue_Àn
);

5282 if(!
	`°rcmp
(
©å_«me
, "AvgBottom")){

5283 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
avg_bŸtom
, 
vÆue_Àn
);

5286 if(!
	`°rcmp
(
©å_«me
, "AvgRight")){

5287 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
avg_right
, 
vÆue_Àn
);

5290 if(!
	`°rcmp
(
©å_«me
, "MaxTop")){

5291 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
max_t›
, 
vÆue_Àn
);

5294 if(!
	`°rcmp
(
©å_«me
, "MaxLeft")){

5295 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
max_À·
, 
vÆue_Àn
);

5298 if(!
	`°rcmp
(
©å_«me
, "MaxBottom")){

5299 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
max_bŸtom
, 
vÆue_Àn
);

5302 if(!
	`°rcmp
(
©å_«me
, "MaxRight")){

5303 
	`ch¨2hex
(
©å_vÆue
, &
ªsu…
->
max_right
, 
vÆue_Àn
);

5306 
	}
}

5308 
	$GëVGAResu…
(
t_VGA_ªsu…
 *
ªsu…
, *
Msg
)

5311 
Àn
;

5312 *
±r
;

5317 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

5319 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

5320 
Àn
){

5321 
«me_Àn
, 
vÆue_Àn
;

5322 
©å_«me
[16];

5323 
©å_vÆue
[2];

5325 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

5326 
±r
++;

5328 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

5329 
±r
 += 4;

5331 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

5332 
©å_«me
[
«me_Àn
] = '\0';

5333 
±r
 +
«me_Àn
;

5335 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

5336 
©å_vÆue
[
vÆue_Àn
] = '\0';

5337 
±r
 +
vÆue_Àn
;

5339 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

5341 if(!
	`°rcmp
(
©å_vÆue
, "1")){

5342 
ªsu…
->
ch™ged
 = 1;

5344 if(!
	`°rcmp
(
©å_vÆue
, "2")){

5345 
ªsu…
->
ch™ged
 = 2;

5348 
ªsu…
->
ch™ged
 = 0;

5351 
	}
}

5354 
	$GëAuxResu…
(
t_aux_ªsu…
 *
ªsu…
, *
Msg
)

5357 
Àn
;

5358 *
±r
;

5363 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

5364 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

5366 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

5367 
	`mem£t
(
ªsu…
, 0, (
t_aux_ªsu…
));

5368 
ch™√l
 = 0;

5369 
Àn
){

5370 
«me_Àn
, 
vÆue_Àn
;

5371 
©å_«me
[16];

5372 
©å_vÆue
[16];

5374 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

5375 
±r
++;

5377 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

5378 
±r
 += 4;

5380 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

5381 
©å_«me
[
«me_Àn
] = '\0';

5382 
±r
 +
«me_Àn
;

5384 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

5385 
©å_vÆue
[
vÆue_Àn
] = '\0';

5386 
±r
 +
vÆue_Àn
;

5388 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

5390 if(!
	`°rcmp
(
©å_«me
, "Channel")){

5391 
	`ch¨2hex
(
©å_vÆue
, (*)&
ch™√l
, 
vÆue_Àn
);

5394 if(!
	`°rcmp
(
©å_«me
, "Targets")){

5395 
	`ch¨2hex
(
©å_vÆue
, (*)&
ªsu…
->
aux
[
ch™√l
].
èrgë_num
, 
vÆue_Àn
);

5398 if(!
	`°rcmp
(
©å_«me
, "MaxTop")){

5399 
	`ch¨2hex
(
©å_vÆue
, (*)&
ªsu…
->
aux
[
ch™√l
].
max_t›
, 
vÆue_Àn
);

5403 if(!
	`°rcmp
(
©å_«me
, "MaxLeft")){

5404 
	`ch¨2hex
(
©å_vÆue
, (*)&
ªsu…
->
aux
[
ch™√l
].
max_À·
, 
vÆue_Àn
);

5408 if(!
	`°rcmp
(
©å_«me
, "MaxBottom")){

5409 
	`ch¨2hex
(
©å_vÆue
, (*)&
ªsu…
->
aux
[
ch™√l
].
max_bŸtom
, 
vÆue_Àn
);

5413 if(!
	`°rcmp
(
©å_«me
, "MaxRight")){

5414 
	`ch¨2hex
(
©å_vÆue
, (*)&
ªsu…
->
aux
[
ch™√l
].
max_right
, 
vÆue_Àn
);

5418 if(
ªsu…
->
aux
[0].
èrgë_num
*result->aux[1].target_num == 0){

5419 
ªsu…
->
°udít_ö_°™dög
 = 0;

5421 if(
ªsu…
->
aux
[0].
èrgë_num
*result->aux[1].target_num == 1){

5422 if((
ªsu…
->
aux
[0].
max_right
-ªsu…->aux[0].
max_À·
)>240 && (result->aux[1].max_right-result->aux[1].max_left)>240){

5423 
ªsu…
->
°udít_ö_°™dög
 = 2;

5426 
ªsu…
->
°udít_ö_°™dög
 = 1;

5430 
ªsu…
->
°udít_ö_°™dög
 = 2;

5432 
	}
}

5434 
	#ANGLE_H0
 45

	)

5435 
	#X1
 1000

	)

5436 
	#Y1
 0

	)

5437 
	#ANGLE_H1
 135

	)

5438 
	#X2
 500

	)

5439 
	#Y2
 -200

	)

5440 
	#Z2
 100

	)

5441 
	#ANGLE_H2
 90

	)

5442 
	#VIEW_ANGLE_A
 90

	)

5444 
	$°udít_åackög_geomëry_öô
(
t_°udít_åackög_geomëry
 *
geomëry
)

5446 
geomëry
->
ˇmîa_geomëry
[0].
x
 = 0;

5447 
geomëry
->
ˇmîa_geomëry
[0].
y
 = 0;

5448 
geomëry
->
ˇmîa_geomëry
[0].
z
 = 0;

5449 
geomëry
->
ˇmîa_geomëry
[0].
™gÀ_h
 = 
ANGLE_H0
;

5450 
geomëry
->
ˇmîa_geomëry
[0].
™gÀ_v
 = 0;

5451 
geomëry
->
ˇmîa_geomëry
[0].
võw_™gÀ
 = 
VIEW_ANGLE_A
;

5452 
geomëry
->
ˇmîa_geomëry
[1].
x
 = 
X1
;

5453 
geomëry
->
ˇmîa_geomëry
[1].
y
 = 
Y1
;

5454 
geomëry
->
ˇmîa_geomëry
[1].
z
 = 0;

5455 
geomëry
->
ˇmîa_geomëry
[1].
™gÀ_h
 = 
ANGLE_H1
;

5456 
geomëry
->
ˇmîa_geomëry
[1].
™gÀ_v
 = 0;

5457 
geomëry
->
ˇmîa_geomëry
[1].
võw_™gÀ
 = 
VIEW_ANGLE_A
;

5458 
geomëry
->
ˇmîa_geomëry
[2].
x
 = 
X2
;

5459 
geomëry
->
ˇmîa_geomëry
[2].
y
 = 
Y2
;

5460 
geomëry
->
ˇmîa_geomëry
[2].
z
 = 
Z2
;

5461 
geomëry
->
ˇmîa_geomëry
[2].
™gÀ_h
 = 
ANGLE_H2
;

5462 
geomëry
->
ˇmîa_geomëry
[2].
™gÀ_v
 = 0;

5463 
geomëry
->
œ°_loˇti⁄
.
x
 = 0;

5464 
geomëry
->
œ°_loˇti⁄
.
y
 = 0;

5465 
	}
}

5467 
	$gë_°udít_åackög_∑øm
(
t_°udít_åackög_geomëry
 *
geomëry
, 
t_aux_ªsu…
 *
ªsu…
)

5469 
off£t0
 = (
ªsu…
->
aux
[0].
max_À·
 +Ñesu…->aux[0].
max_right
 -720)/2;

5470 
off£t1
 = (
ªsu…
->
aux
[1].
max_À·
 +Ñesu…->aux[1].
max_right
 -720)/2;

5471 
	`debug_¥ötf
("off£t0=%f, off£t1=%f\n", 
off£t0
, 
off£t1
);

5473 
Æpha
 = 
	`©™
(
off£t0
/360*
	`èn
(
geomëry
->
ˇmîa_geomëry
[0].
võw_™gÀ
/2*
M_PI
/180));

5474 
bëa
 = 
	`©™
(
off£t1
/360*
	`èn
(
geomëry
->
ˇmîa_geomëry
[1].
võw_™gÀ
/2*
M_PI
/180));

5475 
	`debug_¥ötf
("Æpha=%f, bëa=%f\n", 
Æpha
*180/
M_PI
, 
bëa
*180/M_PI);

5477 
x1
 = 
geomëry
->
ˇmîa_geomëry
[1].
x
;

5478 
y1
 = 
geomëry
->
ˇmîa_geomëry
[1].
y
;

5479 
	`debug_¥ötf
("x1=%f, y1=%f\n", 
x1
, 
y1
);

5481 
™gÀ_h0
 = 
geomëry
->
ˇmîa_geomëry
[0].
™gÀ_h
*
M_PI
/180;

5482 
™gÀ_h1
 = 
geomëry
->
ˇmîa_geomëry
[1].
™gÀ_h
*
M_PI
/180;

5483 
	`debug_¥ötf
("™gÀ_h0=%f,ángÀ_h1=%f\n", 
™gÀ_h0
*180/
M_PI
, 
™gÀ_h1
*180/M_PI);

5485 
A0
 = 
™gÀ_h0
-
Æpha
;

5486 if(
A0
>
M_PI
/2*89/90){

5487 
A0
 = 
M_PI
/2*89/90;

5489 
A1
 = 
™gÀ_h1
-
bëa
;

5490 if(
A1
< 
M_PI
/2*91/90){

5491 
A1
 = 
M_PI
/2*91/90;

5493 
	`debug_¥ötf
("A0=%f, A1=%f\n", 
A0
*180/
M_PI
, 
A1
*180/M_PI);

5495 if((
	`èn
(
A1
)-èn(
A0
))*1000000>=1 || (tan(A1)-tan(A0))*1000000<=-1){

5496 
geomëry
->
°udít_loˇti⁄
.
x
 = (
x1
*
	`èn
(
A1
)-
y1
)/—™(A1)-èn(
A0
));

5497 
geomëry
->
°udít_loˇti⁄
.
y
 = 
	`èn
(
A0
)*geomëry->°udít_loˇti⁄.
x
;

5500 
geomëry
->
°udít_loˇti⁄
.
x
 = 
x1
/2;

5501 
geomëry
->
°udít_loˇti⁄
.
y
 = 
y1
/2;

5503 
	`debug_¥ötf
("x=%d, y=%d\n", 
geomëry
->
°udít_loˇti⁄
.
x
, geomëry->°udít_loˇti⁄.
y
);

5505 
x2
 = 
geomëry
->
ˇmîa_geomëry
[2].
x
;

5506 
y2
 = 
geomëry
->
ˇmîa_geomëry
[2].
y
;

5507 
z2
 = 
geomëry
->
ˇmîa_geomëry
[2].
z
;

5509 
r
 = 
	`sqπ
((
x2
-
geomëry
->
°udít_loˇti⁄
.
x
)*(x2-geometry->student_location.x)

5510 + (
y2
-
geomëry
->
°udít_loˇti⁄
.
y
)*(y2-geometry->student_location.y)

5511 + 
z2
*z2);

5513 
geomëry
->
èrgë_võw_™gÀ
 = 2*
	`©™
(200/
r
);

5514 
geomëry
->
èrgë_tût_™gÀ
 = 
	`©™
(-
z2
/
	`sqπ
((
x2
-geomëry->
°udít_loˇti⁄
.
x
)*(x2-geomëry->°udít_loˇti⁄.x)+(
y2
-geomëry->°udít_loˇti⁄.
y
)*(y2-geometry->student_location.y)));

5515 
geomëry
->
èrgë_∑n_™gÀ
 = 
	`©™
((geomëry->
°udít_loˇti⁄
.
x
-
x2
)/(geomëry->°udít_loˇti⁄.
y
-
y2
));

5516 
	`debug_¥ötf
("èrgë_∑n_™gÀ=%f,Å¨gë_tût_™gÀ=%f,Å¨gë_võw_™gÀ=%f\n", 
geomëry
->
èrgë_∑n_™gÀ
*180/
M_PI
, geomëry->
èrgë_tût_™gÀ
*180/M_PI, geomëry->
èrgë_võw_™gÀ
*180/M_PI);

5518 
s0
 = 
	`sqπ
(
geomëry
->
°udít_loˇti⁄
.
x
*geomëry->°udít_loˇti⁄.x + geomëry->°udít_loˇti⁄.
y
*geometry->student_location.y);

5519 
s1
 = 
	`sqπ
((
geomëry
->
°udít_loˇti⁄
.
x
-
x1
)*(geomëry->°udít_loˇti⁄.x-x1)+(geomëry->°udít_loˇti⁄.
y
-
y1
)*(geometry->student_location.y-y1));

5521 if(
s0
*
	`èn
((()(
ªsu…
->
aux
[0].
max_right
-ªsu…->aux[0].
max_À·
))*
geomëry
->
ˇmîa_geomëry
[0].
võw_™gÀ
*
M_PI
/720/180)<50){

5522 
ªsu…
->
aux
[0].
èrgë_num
 = 1;

5525 
ªsu…
->
aux
[0].
èrgë_num
 = 2;

5528 if(
s1
*
	`èn
((()(
ªsu…
->
aux
[1].
max_right
-ªsu…->aux[1].
max_À·
))*
geomëry
->
ˇmîa_geomëry
[1].
võw_™gÀ
*
M_PI
/720/180)<50){

5529 
ªsu…
->
aux
[1].
èrgë_num
 = 1;

5532 
ªsu…
->
aux
[1].
èrgë_num
 = 2;

5535 
ªsu…
->
°udít_ö_°™dög
 =Ñesu…->
aux
[0].
èrgë_num
*result->aux[1].target_num;

5536 
	`debug_¥ötf
("°udít_ö_°™dög = %d\n", 
ªsu…
->
°udít_ö_°™dög
);

5538 
geomëry
->
dŸøckög
 = 0;

5539 if(
ªsu…
->
°udít_ö_°™dög
==1){

5540 
devüti⁄
 = 
	`sqπ
((
geomëry
->
°udít_loˇti⁄
.
x
-geomëry->
œ°_loˇti⁄
.x)*(geometry->student_location.x-geometry->last_location.x)

5541 +(
geomëry
->
°udít_loˇti⁄
.
y
-geomëry->
œ°_loˇti⁄
.y)*(geometry->student_location.y-geometry->last_location.y));

5542 if(
devüti⁄
>100){

5543 
geomëry
->
dŸøckög
 = 1;

5544 
geomëry
->
œ°_loˇti⁄
.
x
 = geomëry->
°udít_loˇti⁄
.x;

5545 
geomëry
->
œ°_loˇti⁄
.
y
 = geomëry->
°udít_loˇti⁄
.y;

5546 
	`debug_¥ötf
("do studentÅracking\n");

5549 
	}
}

5551 
	$CamhldCmdSíd
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
, * 
cwbuf
, 
cmdÀn
)

5554 
Àn
;

5555 
t_cmd
 
cmd
;

5556 
Êags
;

5557 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_CAMHLD_BYPASS
);

5558 
	`add_©å_öt
(&
cmd
, "Ch™√l", (
ˇmîa_hﬁdî
->
u¨t_ch™√l
-1)%2);

5559 
	`add_©å_bö
(&
cmd
, "RawByãs", 
cwbuf
, 
cmdÀn
);

5561 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
Àn
, 
DATA_LEN_SIZE
);

5562 
Àn
 +
PACKET_HEADER_SIZE
;

5563 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

5565 if(
ˇmîa_hﬁdî
->
u¨t_ch™√l
 == 1 || camera_holder->uart_channel == 2){

5566 
	`d©afifo_¥odu˚r_d©a_add
(
p_ˇmhld˘æ
->
TX_¥odu˚r_fifo_A
, (*)
cmd
.
fuŒbuf
, ()
Àn
, 
Êags
, 0);

5569 if(
ˇmîa_hﬁdî
->
u¨t_ch™√l
 == 3 || camera_holder->uart_channel == 4){

5570 
	`d©afifo_¥odu˚r_d©a_add
(
p_ˇmhld˘æ
->
TX_¥odu˚r_fifo_B
, (*)
cmd
.
fuŒbuf
, ()
Àn
, 
Êags
, 0);

5573 if(
ˇmîa_hﬁdî
->
u¨t_ch™√l
 == 5 || camera_holder->uart_channel == 6){

5574 
	`d©afifo_¥odu˚r_d©a_add
(
p_ˇmhld˘æ
->
TX_¥odu˚r_fifo_C
, (*)
cmd
.
fuŒbuf
, ()
Àn
, 
Êags
, 0);

5578 
	}
}

5580 
	$GëZoom
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

5582 
cwbuf
[] = {0x81, 0x09, 0x04, 0x47, 0xff};

5584 
	`CamhldCmdSíd
(
p_ˇmhld˘æ
, 
ˇmîa_hﬁdî
, 
cwbuf
, 5);

5585 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 |
CH_ZOOMINQ_PENDING
;

5586 
	`gëtimeofday
(&
ˇmîa_hﬁdî
->
tv
, 
NULL
);

5587 
	}
}

5589 
	$GëPos
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

5591 
cwbuf
[] = {0x81, 0x09, 0x06, 0x12, 0xff};

5593 
	`CamhldCmdSíd
(
p_ˇmhld˘æ
, 
ˇmîa_hﬁdî
, 
cwbuf
, 5);

5594 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 |
CH_PTINQ_PENDING
;

5595 
	`gëtimeofday
(&
ˇmîa_hﬁdî
->
tv
, 
NULL
);

5596 
	}
}

5598 
	$AbsPos
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
, 
∑≈os
, 
tûços
)

5600 
cwbuf
[] = {0x81, 0x01, 0x06, 0x02, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff};

5601 
cwbuf
[4] = 
ˇmîa_hﬁdî
->
∑n•ìd_u£
;

5602 
cwbuf
[5] = 
ˇmîa_hﬁdî
->
tût•ìd_u£
;

5603 
cwbuf
[6] = (
∑≈os
&0xf000)>>12;

5604 
cwbuf
[7] = (
∑≈os
&0xf00)>>8;

5605 
cwbuf
[8] = (
∑≈os
&0xf0)>>4;

5606 
cwbuf
[9] = (
∑≈os
&0xf);

5607 
cwbuf
[10] = (
tûços
&0xf000)>>12;

5608 
cwbuf
[11] = (
tûços
&0xf00)>>8;

5609 
cwbuf
[12] = (
tûços
&0xf0)>>4;

5610 
cwbuf
[13] = (
tûços
&0xf);

5611 
	`CamhldCmdSíd
(
p_ˇmhld˘æ
, 
ˇmîa_hﬁdî
, 
cwbuf
, 15);

5613 
ˇmîa_hﬁdî
->
èrgë_P™Pos
 = 
∑≈os
;

5614 
ˇmîa_hﬁdî
->
èrgë_TûtPos
 = 
tûços
;

5616 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 |
CH_COMPLETION_PENDING
;

5617 
	`gëtimeofday
(&
ˇmîa_hﬁdî
->
tv
, 
NULL
);

5618 
	}
}

5620 
	$ZoomDúe˘
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
, 
zoompos
)

5622 
cwbuf
[] = {0x81, 0x01, 0x04, 0x47, 0x0, 0x0, 0x0, 0x0, 0xff};

5623 
cwbuf
[4] = (
zoompos
&0xf000)>>12;

5624 
cwbuf
[5] = (
zoompos
&0xf00)>>8;

5625 
cwbuf
[6] = (
zoompos
&0xf0)>>4;

5626 
cwbuf
[7] = (
zoompos
&0xf);

5627 
	`CamhldCmdSíd
(
p_ˇmhld˘æ
, 
ˇmîa_hﬁdî
, 
cwbuf
, 9);

5629 
ˇmîa_hﬁdî
->
èrgë_ZoomPos
 = 
zoompos
;

5631 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 |
CH_COMPLETION_PENDING
;

5632 
	`gëtimeofday
(&
ˇmîa_hﬁdî
->
tv
, 
NULL
);

5633 
	}
}

5635 
	$ReˇŒ
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
, 
num
)

5637 
cwbuf
[] = {0x81, 0x01, 0x04, 0x3f, 0x02, 0x00, 0xff};

5638 
cwbuf
[5] = 
num
;

5639 
	`CamhldCmdSíd
(
p_ˇmhld˘æ
, 
ˇmîa_hﬁdî
, 
cwbuf
, 7);

5641 
ˇmîa_hﬁdî
->
èrgë_P™Pos
 = camîa_hﬁdî->
¥e£t
[
num
].
∑n_pos
;

5642 
ˇmîa_hﬁdî
->
èrgë_TûtPos
 = camîa_hﬁdî->
¥e£t
[
num
].
tût_pos
;

5643 
ˇmîa_hﬁdî
->
èrgë_ZoomPos
 = camîa_hﬁdî->
¥e£t
[
num
].
zoom_pos
;

5645 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 |
CH_COMPLETION_PENDING
;

5646 
	`gëtimeofday
(&
ˇmîa_hﬁdî
->
tv
, 
NULL
);

5647 
	}
}

5649 
	$MemSë
(
t_SwôchTøckög_thªad_∑øm
 *
p_ˇmhld˘æ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
, 
num
)

5651 
cwbuf
[] = {0x81, 0x01, 0x04, 0x3f, 0x01, 0x00, 0xff};

5652 
cwbuf
[5] = 
num
;

5653 
	`CamhldCmdSíd
(
p_ˇmhld˘æ
, 
ˇmîa_hﬁdî
, 
cwbuf
, 7);

5655 
ˇmîa_hﬁdî
->
¥e£t
[
num
].
∑n_pos
 = camîa_hﬁdî->
èrgë_P™Pos
 = camîa_hﬁdî->
P™Pos
;

5656 
ˇmîa_hﬁdî
->
¥e£t
[
num
].
tût_pos
 = camîa_hﬁdî->
èrgë_TûtPos
 = camîa_hﬁdî->
TûtPos
;

5657 
ˇmîa_hﬁdî
->
¥e£t
[
num
].
zoom_pos
 = camîa_hﬁdî->
èrgë_ZoomPos
 = camîa_hﬁdî->
ZoomPos
;

5659 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 |
CH_COMPLETION_PENDING
;

5660 
	`gëtimeofday
(&
ˇmîa_hﬁdî
->
tv
, 
NULL
);

5661 
	}
}

5663 
	$upd©e_ˇmhﬁdî_˘x
(
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

5665 if(
ˇmîa_hﬁdî
->
R•Lí
==11){

5666 if(
ˇmîa_hﬁdî
->
Rx_buf
[0]==()0x90 && camera_holder->Rx_buf[1]==()0x50){

5667 
ˇmîa_hﬁdî
->
P™Pos
 = 
	`byã2öt
(&ˇmîa_hﬁdî->
Rx_buf
[2]);

5668 
ˇmîa_hﬁdî
->
TûtPos
 = 
	`byã2öt
(&ˇmîa_hﬁdî->
Rx_buf
[6]);

5670 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 = camîa_hﬁdî->comm™d_≥ndög & (!
CH_PTINQ_PENDING
);

5674 if(
ˇmîa_hﬁdî
->
R•Lí
 == 7){

5675 if(
ˇmîa_hﬁdî
->
Rx_buf
[0]==()0x90 && camera_holder->Rx_buf[1]==()0x50){

5676 
ˇmîa_hﬁdî
->
ZoomPos
 = 
	`byã2öt
(&ˇmîa_hﬁdî->
Rx_buf
[2]);

5678 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 = camîa_hﬁdî->comm™d_≥ndög & (!
CH_ZOOMINQ_PENDING
);

5682 if(
ˇmîa_hﬁdî
->
R•Lí
 == 3){

5683 if(
ˇmîa_hﬁdî
->
Rx_buf
[0]==()0x90 && camera_holder->Rx_buf[1]==()0x51){

5685 
ˇmîa_hﬁdî
->
P™Pos
 = camîa_hﬁdî->
èrgë_P™Pos
;

5686 
ˇmîa_hﬁdî
->
TûtPos
 = camîa_hﬁdî->
èrgë_TûtPos
;

5687 
ˇmîa_hﬁdî
->
ZoomPos
 = camîa_hﬁdî->
èrgë_ZoomPos
;

5688 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 = camîa_hﬁdî->comm™d_≥ndög & (!
CH_COMPLETION_PENDING
);

5692 if(
ˇmîa_hﬁdî
->
R•Lí
 == 4){

5693 if(
ˇmîa_hﬁdî
->
Rx_buf
[0]==()0x90 && (camera_holder->Rx_buf[1]==()0x60 || camera_holder->Rx_buf[1]==()0x61)){

5695 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 = 0;

5696 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 |
CH_ERROR
;

5699 
	}
}

5701 
	$ßve_ˇmhﬁdî_¥e£t
(
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
, 
num
)

5703 
ˇmîa_hﬁdî
->
¥e£t
[
num
].
∑n_pos
 = camîa_hﬁdî->
P™Pos
;

5704 
ˇmîa_hﬁdî
->
¥e£t
[
num
].
tût_pos
 = camîa_hﬁdî->
TûtPos
;

5705 
ˇmîa_hﬁdî
->
¥e£t
[
num
].
zoom_pos
 = camîa_hﬁdî->
ZoomPos
;

5706 
	}
}

5708 
	$gë_ˇmhﬁdî_≥ndög_°©e
(
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

5710 if(
ˇmîa_hﬁdî
->
comm™d_≥ndög
){

5716 
	}
}

5718 
	$gë_ˇmhﬁdî_îr
(
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

5720 if(
ˇmîa_hﬁdî
->
comm™d_≥ndög
 & 
CH_ERROR
){

5726 
	}
}

5728 
	$ˇmhﬁdî_ª£t_≥ndög_°©e
(
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

5730 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 = 0;

5731 
	}
}

5733 
	$ˇmhﬁdî_comm™d_timeout
(
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
, 
timeout
)

5735 
timevÆ
 
tv
;

5736 
	`gëtimeofday
(&
tv
, 
NULL
);

5737 
dñt
 = (
tv
.
tv_£c
 - 
ˇmîa_hﬁdî
->tv.tv_£cË+ (tv.
tv_u£c
 - camera_holder->tv.tv_usec)/1000000;

5738 if(
dñt
>
timeout
){

5744 
	}
}

5746 
	$ˇmîa_hﬁdî_öô
(
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

5748 
ˇmîa_hﬁdî
->
Rx_buf_p
 = camîa_hﬁdî->
Rx_buf
;

5749 
ˇmîa_hﬁdî
->
comm™d_≥ndög
 = 0;

5750 
ˇmîa_hﬁdî
->
∑n_™gÀ_À·
 = -120;

5751 
ˇmîa_hﬁdî
->
∑n_™gÀ_right
 = 120;

5752 
ˇmîa_hﬁdî
->
∑n_mö
 = -1600;

5753 
ˇmîa_hﬁdî
->
∑n_max
 = 1600;

5754 
ˇmîa_hﬁdî
->
∑n•ìd_u£
 = 4;

5755 
ˇmîa_hﬁdî
->
võw_™gÀ_max
 = 55.2;

5756 
ˇmîa_hﬁdî
->
võw_™gÀ_mö
 = 3.2;

5757 
ˇmîa_hﬁdî
->
zoom_mö
 = 0;

5758 
ˇmîa_hﬁdî
->
zoom_max
 = 16384;

5759 
ˇmîa_hﬁdî
->
tût_™gÀ_down
 = -30;

5760 
ˇmîa_hﬁdî
->
tût_™gÀ_up
 = 90;

5761 
ˇmîa_hﬁdî
->
tût_mö
 = -400;

5762 
ˇmîa_hﬁdî
->
tût_max
 = 1200;

5763 
ˇmîa_hﬁdî
->
tût•ìd_u£
 = 4;

5764 
	}
}

5766 
	$åuth_èbÀ_öô
(
ôem_num
, 
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5768 
åuth_èbÀ
->
ôem_num
 = item_num;

5769 
	`mem£t
(
åuth_èbÀ
->
c⁄d
, 0, 
ôem_num
*(
t_c⁄d_ôem
));

5771 
	}
}

5773 
t_c⁄d_ôem
 * 
	$åuth_èbÀ_föd_c⁄dôi⁄
(
c⁄d_idx
, 
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5775 
t_c⁄d_ôem
 * 
ªt
 = 
NULL
;

5776 
i
;

5777 
i
0; i<
åuth_èbÀ
->
ôem_num
; i++){

5778 if(
åuth_èbÀ
->
c⁄d
[
i
].
vÆid
){

5779 if(
åuth_èbÀ
->
c⁄d
[
i
].
c⁄d_idx
 == cond_idx){

5780 
ªt
 = &
åuth_èbÀ
->
c⁄d
[
i
];

5785  
ªt
;

5786 
	}
}

5788 
t_c⁄d_ôem
 * 
	$åuth_èbÀ_Æloc_c⁄dô⁄_ôem
(
t_åuth_èbÀ
 *
åuth_èbÀ
)

5790 
t_c⁄d_ôem
 * 
ªt
 = 
NULL
;

5791 
i
;

5792 
i
0; i<
åuth_èbÀ
->
ôem_num
; i++){

5793 if(!
åuth_èbÀ
->
c⁄d
[
i
].
vÆid
){

5794 
ªt
 = &
åuth_èbÀ
->
c⁄d
[
i
];

5798  
ªt
;

5799 
	}
}

5801 
t_c⁄d_ôem
 * 
	$åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
c⁄d_idx
, 
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5803 
t_c⁄d_ôem
 * 
ªt
 = 
NULL
;

5804 
ªt
 = 
	`åuth_èbÀ_föd_c⁄dôi⁄
(
c⁄d_idx
, 
åuth_èbÀ
);

5805 if(!
ªt
){

5806 
ªt
 = 
	`åuth_èbÀ_Æloc_c⁄dô⁄_ôem
(
åuth_èbÀ
);

5807 if(
ªt
){

5808 
ªt
->
c⁄d_idx
 = cond_idx;

5809 
ªt
->
c⁄d_ty≥
 = 0;

5810 
ªt
->
vÆue
 = 0;

5811 
ªt
->
vÆid
 = 1;

5814  
ªt
;

5815 
	}
}

5817 
t_c⁄d_ôem
 * 
	$åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
c⁄d_idx
, 
ñemít_num
, *
ñemít
, 
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5819 
t_c⁄d_ôem
 * 
ªt
 = 
NULL
;

5820 
ªt
 = 
	`åuth_èbÀ_föd_c⁄dôi⁄
(
c⁄d_idx
, 
åuth_èbÀ
);

5821 if(!
ªt
){

5822 
t_c⁄d_ôem
 
c⁄d_ôem
;

5823 
	`mem£t
(&
c⁄d_ôem
, 0, (
t_c⁄d_ôem
));

5824 
c⁄d_ôem
.
c⁄d_idx
 = cond_idx;

5825 
c⁄d_ôem
.
c⁄d_ty≥
 = 1;

5826 
c⁄d_ôem
.
num_of_comböed_ñemít
 = 
ñemít_num
;

5827 
c⁄d_ôem
.
vÆid
 = 1;

5829 
i
;

5830 
i
=0; i<
ñemít_num
; i++){

5831 
c⁄d_ôem
.
ñemít
[
i
] = 
	`åuth_èbÀ_föd_c⁄dôi⁄
”Àmít[i], 
åuth_èbÀ
);

5832 if(!
c⁄d_ôem
.
ñemít
[
i
]){

5837 if(
i
 =
ñemít_num
){

5838 
ªt
 = 
	`åuth_èbÀ_Æloc_c⁄dô⁄_ôem
(
åuth_èbÀ
);

5839 if(
ªt
){

5840 
	`mem˝y
(
ªt
, &
c⁄d_ôem
, (
t_c⁄d_ôem
));

5846  
ªt
;

5847 
	}
}

5849 
	$åuth_èbÀ_upd©e_combö©i⁄_c⁄dôi⁄
(
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5851 
i
;

5852 
i
=0; i<
åuth_èbÀ
->
ôem_num
; i++){

5853 if(
åuth_èbÀ
->
c⁄d
[
i
].
vÆid
 &&Åruth_èbÀ->c⁄d[i].
c⁄d_ty≥
){

5854 
j
;

5855 
vÆue
 = 1;

5856 
j
=0; j<
åuth_èbÀ
->
c⁄d
[
i
].
num_of_comböed_ñemít
; j++){

5857 
vÆue
 = vÆuê&& 
åuth_èbÀ
->
c⁄d
[
i
].
ñemít
[
j
]->value;

5859 
åuth_èbÀ
->
c⁄d
[
i
].
vÆue
 = value;

5862 
	}
}

5864 
	$åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
c⁄d_idx
, 
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5866 
ªt
 = 0;

5867 
t_c⁄d_ôem
 *
c⁄d_ôem
 = 
	`åuth_èbÀ_föd_c⁄dôi⁄
(
c⁄d_idx
, 
åuth_èbÀ
);

5868 if(
c⁄d_ôem
){

5869 
c⁄d_ôem
->
vÆue
 = 1;

5872 
ªt
 = -1;

5874 
	`åuth_èbÀ_upd©e_combö©i⁄_c⁄dôi⁄
(
åuth_èbÀ
);

5875  
ªt
;

5876 
	}
}

5878 
	$åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
c⁄d_idx
, 
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5880 
ªt
 = 0;

5881 
t_c⁄d_ôem
 *
c⁄d_ôem
 = 
	`åuth_èbÀ_föd_c⁄dôi⁄
(
c⁄d_idx
, 
åuth_èbÀ
);

5882 if(
c⁄d_ôem
){

5883 
c⁄d_ôem
->
vÆue
 = 0;

5886 
ªt
 = -1;

5888 
	`åuth_èbÀ_upd©e_combö©i⁄_c⁄dôi⁄
(
åuth_èbÀ
);

5889  
ªt
;

5890 
	}
}

5892 
	$åuth_èbÀ_c⁄dôi⁄_ã°
(
c⁄d_idx
, 
t_åuth_èbÀ
 * 
åuth_èbÀ
)

5894 
ªt
 = 0;

5895 
t_c⁄d_ôem
 *
c⁄d_ôem
 = 
	`åuth_èbÀ_föd_c⁄dôi⁄
(
c⁄d_idx
, 
åuth_èbÀ
);

5896 if(
c⁄d_ôem
){

5897 
ªt
 = 
c⁄d_ôem
->
vÆue
;

5899  
ªt
;

5900 
	}
}

5902 
	$å™sôi⁄_èbÀ_öô
(
t_å™sôi⁄_èbÀ
 *
å™sôi⁄_èbÀ
)

5904 
	`mem£t
(
å™sôi⁄_èbÀ
, -1, (
t_å™sôi⁄_èbÀ
));

5907 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

5908 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_VGA_CHG
] = 
FSM_NOTRANSITION
;

5909 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

5910 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

5911 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

5912 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

5913 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

5914 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

5915 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

5916 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

5918 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

5919 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

5920 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

5921 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

5922 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

5923 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

5924 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

5925 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

5926 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

5927 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

5928 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

5929 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

5930 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

5931 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

5932 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_15
] = 
FSM_TEACHER_PANORAMA
;

5933 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

5934 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_17
] = 
FSM_TEACHER_PANORAMA
;

5935 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

5936 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

5937 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

5938 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

5939 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

5940 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

5941 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

5942 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

5943 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

5944 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

5945 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

5946 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

5947 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

5948 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_31
] = 
FSM_TEACHER_PANORAMA
;

5949 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

5950 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_33
] = 
FSM_TEACHER_PANORAMA
;

5951 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

5952 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_35
] = 
FSM_TEACHER_PANORAMA
;

5953 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

5956 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

5957 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_VGA_CHG
] = 
FSM_VGA_PIP_TEACHER_CLOSEUP
;

5958 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

5959 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

5960 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

5961 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

5962 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

5963 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

5964 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

5965 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

5967 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

5968 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

5969 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_3
] = 
FSM_NOTRANSITION
;

5970 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

5971 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

5972 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

5973 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

5974 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

5975 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

5976 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

5977 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

5978 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

5979 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

5980 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

5981 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_15
] = 
FSM_TEACHER_PANORAMA
;

5982 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

5983 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_17
] = 
FSM_TEACHER_PANORAMA
;

5984 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

5985 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

5986 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

5987 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

5988 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

5989 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

5990 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

5991 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

5992 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

5993 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

5994 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

5995 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

5996 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

5997 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_31
] = 
FSM_TEACHER_PANORAMA
;

5998 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

5999 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_33
] = 
FSM_TEACHER_PANORAMA
;

6000 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6001 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_35
] = 
FSM_TEACHER_PANORAMA
;

6002 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6005 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

6006 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_VGA_CHG
] = 
FSM_VGA
;

6007 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

6008 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

6009 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

6010 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

6011 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

6012 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

6013 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

6014 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

6016 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

6017 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

6018 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

6019 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

6020 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

6021 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

6022 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_7
] = 
FSM_NOTRANSITION
;

6023 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

6024 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

6025 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

6026 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

6027 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

6028 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

6029 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

6030 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_15
] = 
FSM_STUDENT_PANORAMA
;

6031 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

6032 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_17
] = 
FSM_STUDENT_PANORAMA
;

6033 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

6034 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

6035 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

6036 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

6037 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

6038 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

6039 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

6040 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6041 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

6042 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6043 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

6044 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6045 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

6046 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_31
] = 
FSM_TEACHER_PANORAMA
;

6047 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

6048 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_33
] = 
FSM_TEACHER_PANORAMA
;

6049 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6050 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_35
] = 
FSM_TEACHER_PANORAMA
;

6051 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_CLOSEUP
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6054 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

6055 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_VGA_CHG
] = 
FSM_VGA
;

6056 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

6057 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

6058 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

6059 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

6060 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

6061 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

6062 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

6063 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

6065 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

6066 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

6067 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

6068 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

6069 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_5
] = 
FSM_NOTRANSITION
;

6070 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

6071 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

6072 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

6073 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

6074 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

6075 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_11
] = 
FSM_NOTRANSITION
;

6076 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

6077 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

6078 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

6079 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_15
] = 
FSM_NOTRANSITION
;

6080 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

6081 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_17
] = 
FSM_NOTRANSITION
;

6082 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

6083 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

6084 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

6085 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

6086 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

6087 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

6088 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

6089 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6090 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

6091 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6092 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

6093 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6094 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

6095 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_31
] = 
FSM_NOTRANSITION
;

6096 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

6097 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_33
] = 
FSM_NOTRANSITION
;

6098 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6099 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_35
] = 
FSM_NOTRANSITION
;

6100 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_PANORAMA
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6103 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

6104 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_VGA_CHG
] = 
FSM_VGA
;

6105 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

6106 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

6107 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

6108 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

6109 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

6110 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

6111 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

6112 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

6114 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_1
] = 
FSM_NOTRANSITION
;

6115 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

6116 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

6117 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

6118 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

6119 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

6120 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

6121 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

6122 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

6123 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

6124 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

6125 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

6126 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_13
] = 
FSM_NOTRANSITION
;

6127 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

6128 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_15
] = 
FSM_NOTRANSITION
;

6129 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

6130 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_17
] = 
FSM_NOTRANSITION
;

6131 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

6132 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

6133 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

6134 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

6135 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

6136 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

6137 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

6138 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6139 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

6140 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6141 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

6142 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6143 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

6144 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_31
] = 
FSM_NOTRANSITION
;

6145 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

6146 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_33
] = 
FSM_NOTRANSITION
;

6147 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6148 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_35
] = 
FSM_NOTRANSITION
;

6149 
å™sôi⁄_èbÀ
->
ôem
[
FSM_STUDENT_PANORAMA
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6152 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

6153 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_VGA_CHG
] = 
FSM_VGA_PIP_TEACHER_CLOSEUP
;

6154 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

6155 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

6156 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

6157 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

6158 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

6159 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

6160 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

6161 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

6163 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

6164 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

6165 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

6166 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

6167 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

6168 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

6169 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

6170 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

6171 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

6172 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

6173 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

6174 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

6175 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

6176 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

6177 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_15
] = 
FSM_TEACHER_PANORAMA
;

6178 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

6179 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_17
] = 
FSM_TEACHER_PANORAMA
;

6180 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

6181 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_19
] = 
FSM_NOTRANSITION
;

6182 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

6183 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_21
] = 
FSM_NOTRANSITION
;

6184 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

6185 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_23
] = 
FSM_NOTRANSITION
;

6186 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

6187 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6188 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

6189 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6190 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

6191 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6192 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

6193 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_31
] = 
FSM_TEACHER_PANORAMA
;

6194 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

6195 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_33
] = 
FSM_TEACHER_PANORAMA
;

6196 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6197 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_35
] = 
FSM_TEACHER_PANORAMA
;

6198 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BOARD_CLOSEUP
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6201 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

6202 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_VGA_CHG
] = 
FSM_NOTRANSITION
;

6203 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

6204 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

6205 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

6206 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

6207 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

6208 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

6209 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

6210 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

6212 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

6213 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

6214 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

6215 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

6216 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

6217 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

6218 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

6219 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

6220 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

6221 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

6222 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

6223 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

6224 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

6225 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

6226 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_15
] = 
FSM_TEACHER_PANORAMA
;

6227 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

6228 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_17
] = 
FSM_TEACHER_PANORAMA
;

6229 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

6230 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

6231 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

6232 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

6233 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

6234 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

6235 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

6236 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6237 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

6238 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6239 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

6240 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6241 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

6242 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_31
] = 
FSM_TEACHER_PANORAMA
;

6243 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

6244 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_33
] = 
FSM_TEACHER_PANORAMA
;

6245 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6246 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_35
] = 
FSM_TEACHER_PANORAMA
;

6247 
å™sôi⁄_èbÀ
->
ôem
[
FSM_VGA_PIP_TEACHER_CLOSEUP
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6250 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

6251 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_VGA_CHG
] = 
FSM_VGA_PIP_TEACHER_CLOSEUP
;

6252 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

6253 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

6254 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

6255 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

6256 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

6257 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

6258 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

6259 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

6261 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

6262 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

6263 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

6264 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

6265 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

6266 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

6267 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

6268 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

6269 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_9
] = 
FSM_NOTRANSITION
;

6270 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

6271 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

6272 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

6273 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

6274 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

6275 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_15
] = 
FSM_TEACHER_PANORAMA
;

6276 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

6277 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_17
] = 
FSM_TEACHER_PANORAMA
;

6278 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

6279 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

6280 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

6281 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

6282 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

6283 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

6284 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

6285 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_25
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6286 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

6287 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_27
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6288 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

6289 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_29
] = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

6290 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

6291 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_31
] = 
FSM_TEACHER_PANORAMA
;

6292 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

6293 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_33
] = 
FSM_TEACHER_PANORAMA
;

6294 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6295 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_35
] = 
FSM_TEACHER_PANORAMA
;

6296 
å™sôi⁄_èbÀ
->
ôem
[
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6299 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_VGA_UNCHG
] = 
FSM_NOTRANSITION
;

6300 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_VGA_CHG
] = 
FSM_VGA_PIP_TEACHER_CLOSEUP
;

6301 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_NONE
] = 
FSM_NOTRANSITION
;

6302 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_ONE
] = 
FSM_NOTRANSITION
;

6303 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_TEACHER_DETECTED_MULTIPLE
] = 
FSM_NOTRANSITION
;

6304 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_NONE
] = 
FSM_NOTRANSITION
;

6305 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_ONE
] = 
FSM_NOTRANSITION
;

6306 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_STUDENT_STAND_MULTIPLE
] = 
FSM_NOTRANSITION
;

6307 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_BOARD_WRITE
] = 
FSM_NOTRANSITION
;

6308 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_BOARD_NOTWRITE
] = 
FSM_NOTRANSITION
;

6310 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_1
] = 
FSM_STUDENT_PANORAMA
;

6311 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_2
] = 
FSM_NOTRANSITION
;

6312 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_3
] = 
FSM_TEACHER_CLOSEUP
;

6313 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_4
] = 
FSM_NOTRANSITION
;

6314 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_5
] = 
FSM_TEACHER_PANORAMA
;

6315 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_6
] = 
FSM_NOTRANSITION
;

6316 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_7
] = 
FSM_STUDENT_CLOSEUP
;

6317 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_8
] = 
FSM_NOTRANSITION
;

6318 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_9
] = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

6319 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_10
] = 
FSM_NOTRANSITION
;

6320 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_11
] = 
FSM_TEACHER_PANORAMA
;

6321 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_12
] = 
FSM_NOTRANSITION
;

6322 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_13
] = 
FSM_STUDENT_PANORAMA
;

6323 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_14
] = 
FSM_NOTRANSITION
;

6324 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_15
] = 
FSM_TEACHER_PANORAMA
;

6325 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_16
] = 
FSM_NOTRANSITION
;

6326 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_17
] = 
FSM_TEACHER_PANORAMA
;

6327 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_18
] = 
FSM_NOTRANSITION
;

6328 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_19
] = 
FSM_BOARD_CLOSEUP
;

6329 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_20
] = 
FSM_NOTRANSITION
;

6330 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_21
] = 
FSM_BOARD_CLOSEUP
;

6331 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_22
] = 
FSM_NOTRANSITION
;

6332 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_23
] = 
FSM_BOARD_CLOSEUP
;

6333 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_24
] = 
FSM_NOTRANSITION
;

6334 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_25
] = 
FSM_NOTRANSITION
;

6335 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_26
] = 
FSM_NOTRANSITION
;

6336 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_27
] = 
FSM_NOTRANSITION
;

6337 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_28
] = 
FSM_NOTRANSITION
;

6338 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_29
] = 
FSM_NOTRANSITION
;

6339 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_30
] = 
FSM_NOTRANSITION
;

6340 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_31
] = 
FSM_TEACHER_PANORAMA
;

6341 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_32
] = 
FSM_NOTRANSITION
;

6342 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_33
] = 
FSM_TEACHER_PANORAMA
;

6343 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_34
] = 
FSM_NOTRANSITION
;

6344 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_35
] = 
FSM_TEACHER_PANORAMA
;

6345 
å™sôi⁄_èbÀ
->
ôem
[
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
][
COND_COMBINATION_36
] = 
FSM_NOTRANSITION
;

6347 
	}
}

6349 
	$fsm_öô
(
t_föôe_°©e_machöe
 *
fsm
, 
t_åuth_èbÀ
 *
åuth_èbÀ
, 
t_å™sôi⁄_èbÀ
 *
å™sôi⁄_èbÀ
)

6351 
fsm
->
öôül_°©e
 = 
FSM_TEACHER_PANORAMA
;

6352 
fsm
->
cuºít_°©e
 = 
FSM_TEACHER_PANORAMA
;

6353 
fsm
->
åuth_èbÀ
 =Åruth_table;

6354 
fsm
->
å™sôi⁄_èbÀ
 =Åransition_table;

6355 
	}
}

6357 
	$fsm_£t_°©e
(
t_föôe_°©e_machöe
 *
fsm
, 
°©e
)

6359 
fsm
->
cuºít_°©e
 = 
°©e
;

6360 
	}
}

6362 
	$fsm_gë_°©e
(
t_föôe_°©e_machöe
 *
fsm
)

6364  
fsm
->
cuºít_°©e
;

6365 
	}
}

6367 
	$fsm_°©e_upd©e
(
t_föôe_°©e_machöe
 *
fsm
)

6369 
ªt
 = 
FSM_NOTRANSITION
;

6370 
i
;

6371 
i
=0; i<
COND_MAX
; i++){

6372 if(
fsm
->
å™sôi⁄_èbÀ
->
ôem
[()fsm->
cuºít_°©e
][
i
] !
FSM_NOTRANSITION
){

6373 if(
	`åuth_èbÀ_c⁄dôi⁄_ã°
(
i
, 
fsm
->
åuth_èbÀ
)){

6374 
ªt
 = 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[()fsm->
cuºít_°©e
][
i
];

6375 
fsm
->
cuºít_°©e
 = 
ªt
;

6380  
ªt
;

6381 
	}
}

6383 * 
	$thªad_SwôchTøckög
(* 
∑øm
)

6385 
	`±hªad_dëach
(
	`±hªad_£lf
());

6386 
	`debug_¥ötf
("ThreadÅhread_SwitchTrackingÑunning...\n");

6388 
t_SwôchTøckög_thªad_∑øm
 *
thªad_∑øm
 = (t_SwôchTøckög_thªad_∑øm *)
∑øm
;

6390 
acc_°udít_lo°
 = 0;

6391 
acc_of_lo°
 = 0;

6392 
mŸi⁄_ö_s¸ìn
 = 0;

6393 
°ûl_ö_s¸ìn
 = 0;

6394 
ö_À·
 = 0;

6395 
ö_right
 = 0;

6396 
√ed_hidí
 = 0;

6398 
dúe˘i⁄
 = 1;

6399 
IsMu…ùÀTóchî
 = 0;

6400 
mŸi⁄_skù_num
 = 1;

6401 
acc_of_unch™ge
 = 0;

6402 
limô_À·
 = -400;

6403 
limô_right
 = 400;

6404 
ex˛ude_À·
 = 0;

6405 
ex˛ude_right
 = 0;

6407 
timevÆ
 
timevÆ1
, 
timevÆ2
;

6409 
t_ˇmîa_hﬁdî
 
ãachî
;

6410 
	`ˇmîa_hﬁdî_öô
(&
ãachî
);

6411 
vm≠èbÀ_idx
 = 
	`vm≠_èbÀ_gë_ödex_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

6412 if(
vm≠èbÀ_idx
!=-1){

6413 
	`ˇm_∑øm_lﬂd
(
PTZ_CONFIG_FILE_NAME
, 
g_vm≠_èbÀ
[
vm≠èbÀ_idx
].
ˇm_víd‹
, g_vm≠_èbÀ[vm≠èbÀ_idx].
ˇm_modñ
, &
ãachî
);

6415 
	`ãachî_±_•ìd_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
ãachî
);

6417 
IsEx˛ude
;

6418 
	`ãachî_ex˛ude_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
IsEx˛ude
);

6420 
t_ˇmîa_hﬁdî
 
°udít
;

6421 
	`ˇmîa_hﬁdî_öô
(&
°udít
);

6422 
vm≠èbÀ_idx
 = 
	`vm≠_èbÀ_gë_ödex_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_CLOSEUP
);

6423 if(
vm≠èbÀ_idx
!=-1){

6424 
	`ˇm_∑øm_lﬂd
(
PTZ_CONFIG_FILE_NAME
, 
g_vm≠_èbÀ
[
vm≠èbÀ_idx
].
ˇm_víd‹
, g_vm≠_èbÀ[vm≠èbÀ_idx].
ˇm_modñ
, &
°udít
);

6426 
	`°udít_±_•ìd_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
°udít
);

6428 
t_°udít_åackög_geomëry
 
°udít_åackög_geomëry
;

6429 
	`°udít_åackög_geomëry_öô
(&
°udít_åackög_geomëry
);

6430 
	`°udít_åackög_geomëry_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
°udít_åackög_geomëry
);

6432 
t_s¸ìn_geomëry
 
s¸ìn_geomëry
;

6433 
s¸ìn_geomëry
.
has_s¸ìn
 = 0;

6434 
	`s¸ìn_geomëry_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
s¸ìn_geomëry
);

6435 
s¸ìn_™gÀ_À·
 = 0, 
s¸ìn_™gÀ_right
 = 0;

6436 if(
s¸ìn_geomëry
.
has_s¸ìn
){

6437 
s¸ìn_™gÀ_À·
 = 
	`©™
(()
s¸ìn_geomëry
.
x_À·
/s¸ìn_geomëry.
y
)*180/
M_PI
;

6438 
s¸ìn_™gÀ_right
 = 
	`©™
(()
s¸ìn_geomëry
.
x_right
/s¸ìn_geomëry.
y
)*180/
M_PI
;

6439 
	`debug_¥ötf
("s¸ìn_™gÀ_À· = %f, s¸ìn_™gÀ_righà%f\n", 
s¸ìn_™gÀ_À·
, 
s¸ìn_™gÀ_right
);

6443 
i
;

6444 
i
=0; i<6; i++){

6445 if(
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 == 1){

6446 
ãachî
.
u¨t_ch™√l
 = 
g_vm≠_èbÀ
[
i
].uart_channel;

6449 if(
g_vm≠_èbÀ
[
i
].
fun˘i⁄
 == 2){

6450 
°udít
.
u¨t_ch™√l
 = 
g_vm≠_èbÀ
[
i
].uart_channel;

6454 
ãachî
.
u¨t_ch™√l
 = 1;

6455 
°udít
.
u¨t_ch™√l
 = 3;

6458 
thªad_∑øm
->
ãachî_°©us
 = 0;

6459 
thªad_∑øm
->
°udít_°©us
 = 0;

6461 
t_åuth_èbÀ
 
åuth_èbÀ
;

6463 
	`åuth_èbÀ_öô
(
COND_MAX
, &
åuth_èbÀ
);

6465 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_VGA_UNCHG
, &
åuth_èbÀ
);

6466 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_VGA_CHG
, &
åuth_èbÀ
);

6468 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

6469 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

6470 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

6472 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_STUDENT_STAND_NONE
, &
åuth_èbÀ
);

6473 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_STUDENT_STAND_ONE
, &
åuth_èbÀ
);

6474 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_STUDENT_STAND_MULTIPLE
, &
åuth_èbÀ
);

6476 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_BOARD_WRITE
, &
åuth_èbÀ
);

6477 
	`åuth_èbÀ_add_ñemít_c⁄dôi⁄
(
COND_BOARD_NOTWRITE
, &
åuth_èbÀ
);

6480 
ñemít_idx
[
MAX_ELEMENT_NUM
];

6482 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6483 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6484 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6485 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6486 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_1
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6488 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6489 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6490 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6491 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6492 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_2
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6494 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6495 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6496 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6497 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6498 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_3
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6500 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6501 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6502 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6503 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6504 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_4
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6506 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6507 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6508 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6509 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6510 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_5
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6512 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6513 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6514 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6515 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6516 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_6
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6518 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6519 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6520 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6521 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6522 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_7
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6524 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6525 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6526 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6527 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6528 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_8
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6530 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6531 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6532 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6533 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6534 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_9
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6536 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6537 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6538 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6539 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6540 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_10
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6542 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6543 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6544 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6545 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6546 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_11
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6548 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6549 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6550 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6551 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6552 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_12
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6554 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6555 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6556 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6557 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6558 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_13
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6560 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6561 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6562 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6563 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6564 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_14
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6566 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6567 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6568 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6569 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6570 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_15
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6572 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6573 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6574 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6575 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6576 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_16
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6578 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6579 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6580 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6581 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6582 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_17
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6584 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6585 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6586 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6587 
ñemít_idx
[3] = 
COND_BOARD_NOTWRITE
;

6588 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_18
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6590 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6591 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6592 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6593 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6594 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_19
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6596 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6597 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6598 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6599 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6600 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_20
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6602 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6603 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6604 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6605 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6606 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_21
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6608 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6609 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6610 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6611 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6612 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_22
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6614 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6615 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6616 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6617 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6618 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_23
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6620 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6621 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6622 
ñemít_idx
[2] = 
COND_STUDENT_STAND_NONE
;

6623 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6624 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_24
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6626 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6627 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6628 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6629 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6630 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_25
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6632 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6633 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6634 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6635 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6636 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_26
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6638 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6639 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6640 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6641 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6642 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_27
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6644 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6645 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6646 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6647 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6648 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_28
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6650 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6651 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6652 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6653 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6654 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_29
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6656 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6657 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6658 
ñemít_idx
[2] = 
COND_STUDENT_STAND_ONE
;

6659 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6660 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_30
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6662 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6663 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6664 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6665 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6666 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_31
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6668 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6669 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_NONE
;

6670 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6671 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6672 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_32
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6674 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6675 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6676 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6677 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6678 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_33
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6680 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6681 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_ONE
;

6682 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6683 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6684 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_34
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6686 
ñemít_idx
[0] = 
COND_VGA_UNCHG
;

6687 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6688 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6689 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6690 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_35
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6692 
ñemít_idx
[0] = 
COND_VGA_CHG
;

6693 
ñemít_idx
[1] = 
COND_TEACHER_DETECTED_MULTIPLE
;

6694 
ñemít_idx
[2] = 
COND_STUDENT_STAND_MULTIPLE
;

6695 
ñemít_idx
[3] = 
COND_BOARD_WRITE
;

6696 
	`åuth_èbÀ_add_combö©i⁄_c⁄dôi⁄
(
COND_COMBINATION_36
, 4, 
ñemít_idx
, &
åuth_èbÀ
);

6698 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_VGA_UNCHG
, &
åuth_èbÀ
);

6699 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_VGA_CHG
, &
åuth_èbÀ
);

6700 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

6701 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

6702 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

6703 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_STUDENT_STAND_NONE
, &
åuth_èbÀ
);

6704 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_ONE
, &
åuth_èbÀ
);

6705 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_MULTIPLE
, &
åuth_èbÀ
);

6706 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_BOARD_NOTWRITE
, &
åuth_èbÀ
);

6707 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_BOARD_WRITE
, &
åuth_èbÀ
);

6709 
t_å™sôi⁄_èbÀ
 
å™sôi⁄_èbÀ
;

6710 
	`å™sôi⁄_èbÀ_öô
(&
å™sôi⁄_èbÀ
);

6712 
t_föôe_°©e_machöe
 
fsm
;

6713 
	`fsm_öô
(&
fsm
, &
åuth_èbÀ
, &
å™sôi⁄_èbÀ
);

6714 
	`swôch_pﬁicy_lﬂd
(
POLICY_FILE_NAME
, &
fsm
);

6715 
	`gëtimeofday
(&
timevÆ1
, 
NULL
);

6720 if(
thªad_∑øm
->
thªad_ˇn˚Àd
){

6726 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6727 if(
thªad_∑øm
->
ãachî_°©us
 == 0){

6729 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 0);

6731 
thªad_∑øm
->
ãachî_°©us
 = 1;

6735 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6736 if(
thªad_∑øm
->
ãachî_°©us
 == 1){

6738 
	`GëZoom
(
thªad_∑øm
, &
ãachî
);

6740 
thªad_∑øm
->
ãachî_°©us
 = 2;

6744 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6745 if(
thªad_∑øm
->
ãachî_°©us
 == 2){

6747 
	`GëPos
(
thªad_∑øm
, &
ãachî
);

6749 
thªad_∑øm
->
ãachî_°©us
 = 3;

6753 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6754 if(
thªad_∑øm
->
ãachî_°©us
 == 3){

6756 
	`ßve_ˇmhﬁdî_¥e£t
(&
ãachî
, 0);

6758 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 1);

6760 
thªad_∑øm
->
ãachî_°©us
 = 4;

6764 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6765 if(
thªad_∑øm
->
ãachî_°©us
 == 4){

6767 
	`GëPos
(
thªad_∑øm
, &
ãachî
);

6768 
thªad_∑øm
->
ãachî_°©us
 = 5;

6772 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6773 if(
thªad_∑øm
->
ãachî_°©us
 == 5){

6775 
	`ßve_ˇmhﬁdî_¥e£t
(&
ãachî
, 1);

6777 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 2);

6778 
thªad_∑øm
->
ãachî_°©us
 = 6;

6782 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6783 if(
thªad_∑øm
->
ãachî_°©us
 == 6){

6785 
	`GëPos
(
thªad_∑øm
, &
ãachî
);

6786 
thªad_∑øm
->
ãachî_°©us
 = 7;

6790 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6791 if(
thªad_∑øm
->
ãachî_°©us
 == 7){

6793 
	`ßve_ˇmhﬁdî_¥e£t
(&
ãachî
, 2);

6795 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 3);

6796 
thªad_∑øm
->
ãachî_°©us
 = 8;

6801 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6802 if(
thªad_∑øm
->
ãachî_°©us
 == 8){

6804 
	`GëPos
(
thªad_∑øm
, &
ãachî
);

6805 
thªad_∑øm
->
ãachî_°©us
 = 9;

6809 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6810 if(
thªad_∑øm
->
ãachî_°©us
 == 9){

6812 
	`ßve_ˇmhﬁdî_¥e£t
(&
ãachî
, 3);

6814 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 4);

6815 
thªad_∑øm
->
ãachî_°©us
 = 10;

6819 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6820 if(
thªad_∑øm
->
ãachî_°©us
 == 10){

6822 
	`GëPos
(
thªad_∑øm
, &
ãachî
);

6823 
thªad_∑øm
->
ãachî_°©us
 = 11;

6827 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6828 if(
thªad_∑øm
->
ãachî_°©us
 == 11){

6830 
	`ßve_ˇmhﬁdî_¥e£t
(&
ãachî
, 4);

6832 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 5);

6833 
thªad_∑øm
->
ãachî_°©us
 = 12;

6837 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6838 if(
thªad_∑øm
->
ãachî_°©us
 == 12){

6840 
	`GëPos
(
thªad_∑øm
, &
ãachî
);

6841 
thªad_∑øm
->
ãachî_°©us
 = 13;

6845 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6846 if(
thªad_∑øm
->
ãachî_°©us
 == 13){

6848 
	`ßve_ˇmhﬁdî_¥e£t
(&
ãachî
, 5);

6850 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 6);

6851 
thªad_∑øm
->
ãachî_°©us
 = 14;

6855 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6856 if(
thªad_∑øm
->
ãachî_°©us
 == 14){

6858 
	`GëPos
(
thªad_∑øm
, &
ãachî
);

6859 
thªad_∑øm
->
ãachî_°©us
 = 15;

6863 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6864 if(
thªad_∑øm
->
ãachî_°©us
 == 15){

6866 
	`ßve_ˇmhﬁdî_¥e£t
(&
ãachî
, 6);

6868 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 0);

6869 
thªad_∑øm
->
ãachî_°©us
 = 16;

6873 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6874 if(
thªad_∑øm
->
ãachî_°©us
 == 16){

6875 if(
ãachî
.
¥e£t
[1].
∑n_pos
 <Åeacher.preset[2].pan_pos){

6876 
limô_À·
 = 
ãachî
.
¥e£t
[1].
∑n_pos
;

6877 
limô_right
 = 
ãachî
.
¥e£t
[2].
∑n_pos
;

6880 
limô_right
 = 
ãachî
.
¥e£t
[1].
∑n_pos
;

6881 
limô_À·
 = 
ãachî
.
¥e£t
[2].
∑n_pos
;

6883 if(
ãachî
.
¥e£t
[5].
∑n_pos
 <Åeacher.preset[6].pan_pos){

6884 
ex˛ude_À·
 = 
ãachî
.
¥e£t
[5].
∑n_pos
;

6885 
ex˛ude_right
 = 
ãachî
.
¥e£t
[6].
∑n_pos
;

6888 
ex˛ude_right
 = 
ãachî
.
¥e£t
[5].
∑n_pos
;

6889 
ex˛ude_À·
 = 
ãachî
.
¥e£t
[6].
∑n_pos
;

6891 
thªad_∑øm
->
ãachî_°©us
 = 17;

6892 
	`debug_¥ötf
("Teacher camera holder initialized\n");

6896 if(
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

6898 if(
	`gë_ˇmhﬁdî_îr
(&
ãachî
)){

6899 
	`ˇmhﬁdî_ª£t_≥ndög_°©e
(&
ãachî
);

6900 if(
thªad_∑øm
->
ãachî_°©us
 > 0 &&Åhread_param->teacher_status < 17){

6901 
thªad_∑øm
->
ãachî_°©us
--;

6906 if(
	`ˇmhﬁdî_comm™d_timeout
(&
ãachî
, 10)){

6907 
	`ˇmhﬁdî_ª£t_≥ndög_°©e
(&
ãachî
);

6908 if(
thªad_∑øm
->
ãachî_°©us
 > 0 &&Åhread_param->teacher_status < 17){

6909 
thªad_∑øm
->
ãachî_°©us
--;

6915 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
°udít
)){

6916 if(
thªad_∑øm
->
°udít_°©us
 == 0){

6918 
	`ReˇŒ
(
thªad_∑øm
, &
°udít
, 0);

6920 
thªad_∑øm
->
°udít_°©us
 = 1;

6924 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
°udít
)){

6925 if(
thªad_∑øm
->
°udít_°©us
 == 1){

6927 
	`GëZoom
(
thªad_∑øm
, &
°udít
);

6929 
thªad_∑øm
->
°udít_°©us
 = 2;

6933 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
°udít
)){

6934 if(
thªad_∑øm
->
°udít_°©us
 == 2){

6936 
	`GëPos
(
thªad_∑øm
, &
°udít
);

6938 
thªad_∑øm
->
°udít_°©us
 = 3;

6942 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
°udít
)){

6943 if(
thªad_∑øm
->
°udít_°©us
 == 3){

6944 
	`ßve_ˇmhﬁdî_¥e£t
(&
°udít
, 0);

6945 
	`ReˇŒ
(
thªad_∑øm
, &
°udít
, 0);

6946 
thªad_∑øm
->
°udít_°©us
 = 4;

6950 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
°udít
)){

6951 if(
thªad_∑øm
->
°udít_°©us
 == 4){

6952 
thªad_∑øm
->
°udít_°©us
 = 5;

6953 
	`debug_¥ötf
("Student camera holder initialized\n");

6957 if(
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
°udít
)){

6959 if(
	`gë_ˇmhﬁdî_îr
(&
°udít
)){

6960 
	`ˇmhﬁdî_ª£t_≥ndög_°©e
(&
°udít
);

6961 if(
thªad_∑øm
->
°udít_°©us
 > 0 &&Åhread_param->student_status < 5){

6962 
thªad_∑øm
->
°udít_°©us
--;

6967 if(
	`ˇmhﬁdî_comm™d_timeout
(&
°udít
, 10)){

6968 
	`ˇmhﬁdî_ª£t_≥ndög_°©e
(&
°udít
);

6969 if(
thªad_∑øm
->
°udít_°©us
 > 0 &&Åhread_param->student_status < 5){

6970 
thªad_∑øm
->
°udít_°©us
--;

6976 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
)){

6977 if(
ãachî
.
u¨t_ch™√l
 == 1){

6978 
	`debug_¥ötf
("%02x ", 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
)->
¨g
.
d©a
[0]);

6981 *
ãachî
.
Rx_buf_p
 = 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
)->
¨g
.
d©a
[0];

6982 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
);

6983 
ãachî
.
Rx_buf_p
++;

6985 if(
ãachî
.
Rx_buf
[ãachî.
Rx_buf_p
 -Åeacher.Rx_buf - 1]==()0xff){

6986 
	`debug_¥ötf
("\n");

6987 
	`debug_¥ötf
("teacher uartÑesponseÑeceived\n");

6989 
ãachî
.
R•Lí
 =Åóchî.
Rx_buf_p
 -Åóchî.
Rx_buf
;

6990 
ãachî
.
Rx_buf_p
 =Åóchî.
Rx_buf
;

6992 
	`upd©e_ˇmhﬁdî_˘x
(&
ãachî
);

6997 if(
°udít
.
u¨t_ch™√l
 == 1){

6998 
	`debug_¥ötf
("%02x", 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
)->
¨g
.
d©a
[0]);

7001 *
°udít
.
Rx_buf_p
 = 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
)->
¨g
.
d©a
[0];

7002 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
);

7003 
°udít
.
Rx_buf_p
++;

7005 if(
°udít
.
Rx_buf
[°udít.
Rx_buf_p
 - student.Rx_buf - 1]==()0xff){

7006 
	`debug_¥ötf
("\n");

7007 
	`debug_¥ötf
("teacher uartÑesponseÑeceived\n");

7009 
°udít
.
R•Lí
 = studít.
Rx_buf_p
 - studít.
Rx_buf
;

7010 
°udít
.
Rx_buf_p
 = studít.
Rx_buf
;

7012 
	`upd©e_ˇmhﬁdî_˘x
(&
°udít
);

7018 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A1
);

7022 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A2
)){

7023 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_A2
);

7026 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
)){

7027 if(
ãachî
.
u¨t_ch™√l
 == 3){

7028 
	`debug_¥ötf
("%02x", 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
)->
¨g
.
d©a
[0]);

7031 *
ãachî
.
Rx_buf_p
 = 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
)->
¨g
.
d©a
[0];

7032 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
);

7033 
ãachî
.
Rx_buf_p
++;

7035 if(
ãachî
.
Rx_buf
[ãachî.
Rx_buf_p
 -Åeacher.Rx_buf - 1]==()0xff){

7036 
	`debug_¥ötf
("\n");

7037 
	`debug_¥ötf
("teacher uartÑesponseÑeceived\n");

7039 
ãachî
.
R•Lí
 =Åóchî.
Rx_buf_p
 -Åóchî.
Rx_buf
;

7040 
ãachî
.
Rx_buf_p
 =Åóchî.
Rx_buf
;

7042 
	`upd©e_ˇmhﬁdî_˘x
(&
ãachî
);

7047 if(
°udít
.
u¨t_ch™√l
 == 3){

7048 
	`debug_¥ötf
("%02x", 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
)->
¨g
.
d©a
[0]);

7051 *
°udít
.
Rx_buf_p
 = 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
)->
¨g
.
d©a
[0];

7052 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
);

7053 
°udít
.
Rx_buf_p
++;

7055 if(
°udít
.
Rx_buf
[°udít.
Rx_buf_p
 - student.Rx_buf - 1]==()0xff){

7056 
	`debug_¥ötf
("\n");

7057 
	`debug_¥ötf
("teacher uartÑesponseÑeceived\n");

7059 
°udít
.
R•Lí
 = studít.
Rx_buf_p
 - studít.
Rx_buf
;

7060 
°udít
.
Rx_buf_p
 = studít.
Rx_buf
;

7062 
	`upd©e_ˇmhﬁdî_˘x
(&
°udít
);

7068 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B1
);

7072 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B2
)){

7073 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_B2
);

7076 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_C1
)){

7077 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_C1
);

7080 
	`d©afifo_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_C2
)){

7081 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
RX_c⁄sumî_fifo_C2
);

7085 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

7086 if(!
g_ˇmhﬁdî_°ûl
){

7087 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

7088 
g_ˇmhﬁdî_°ûl
 = 1;

7089 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

7093 
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)){

7094 
	`debug_¥ötf
("thread_trackingÑeceive message\n");

7096 *
Msg
 = (*)
	`d©afifo_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
)->
¨g
.
d©a
;

7097 
cmd
[
CMD_SIZE
+1];

7098 
Àn
;

7099 *
±r
;

7102 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

7103 
cmd
[
CMD_SIZE
] = '\0';

7105 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

7108 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

7110 if(!
	`°rcmp
(
cmd
,
COMMAND_INTERNAL
)){

7111 
Àn
){

7112 
«me_Àn
, 
vÆue_Àn
;

7113 
©å_«me
[16];

7114 
©å_vÆue
[1536];

7116 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

7117 
±r
++;

7119 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

7120 
±r
 += 4;

7122 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

7123 
©å_«me
[
«me_Àn
] = '\0';

7124 
±r
 +
«me_Àn
;

7126 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

7127 
©å_vÆue
[
vÆue_Àn
] = '\0';

7128 
±r
 +
vÆue_Àn
;

7130 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

7132 if(!
	`°rcmp
(
©å_«me
, "Start")){

7133 
	`debug_¥ötf
("SwitchTrackingÑeceive start\n");

7134 
acc_of_lo°
 = 3;

7135 
mŸi⁄_ö_s¸ìn
 = 0;

7136 
°ûl_ö_s¸ìn
 = 0;

7137 
ö_À·
 = 0;

7138 
ö_right
 = 0;

7140 
acc_°udít_lo°
 = 0;

7142 if(
thªad_∑øm
->
ãachî_°©us
 == 17){

7143 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 0);

7147 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_VGA_UNCHG
, &
åuth_èbÀ
);

7148 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_VGA_CHG
, &
åuth_èbÀ
);

7149 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

7150 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

7151 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

7152 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_STUDENT_STAND_NONE
, &
åuth_èbÀ
);

7153 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_ONE
, &
åuth_èbÀ
);

7154 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_MULTIPLE
, &
åuth_èbÀ
);

7155 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_BOARD_NOTWRITE
, &
åuth_èbÀ
);

7156 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_BOARD_WRITE
, &
åuth_èbÀ
);

7158 
	`fsm_£t_°©e
(&
fsm
, fsm.
öôül_°©e
);

7159 
ªt
 = 
	`fsm_gë_°©e
(&
fsm
);

7160 if(
ªt
 =
FSM_VGA
){

7161 
size_t
 
size
;

7162 
t_cmd
 
outmsg
;

7163 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7164 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
VIDEO_FUNCTION_VGA
);

7165 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7167 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7168 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7169 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7170 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7171 
	`vm≠_èbÀ_ª£t_pù
();

7174 if(
ªt
 =
FSM_TEACHER_CLOSEUP
){

7175 
size_t
 
size
;

7176 
t_cmd
 
outmsg
;

7177 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7178 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

7179 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7180 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7182 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7183 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7184 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7185 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7186 
	`vm≠_èbÀ_ª£t_pù
();

7189 if(
ªt
 =
FSM_STUDENT_CLOSEUP
){

7190 
size_t
 
size
;

7191 
t_cmd
 
outmsg
;

7192 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7193 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_CLOSEUP
);

7194 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7195 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7197 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7198 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7199 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7200 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7201 
	`vm≠_èbÀ_ª£t_pù
();

7204 if(
ªt
 =
FSM_TEACHER_PANORAMA
){

7205 
size_t
 
size
;

7206 
t_cmd
 
outmsg
;

7207 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7208 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_PANORAMA
);

7209 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7210 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7212 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7213 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7214 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7215 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7216 
	`vm≠_èbÀ_ª£t_pù
();

7219 if(
ªt
 =
FSM_STUDENT_PANORAMA
){

7220 
size_t
 
size
;

7221 
t_cmd
 
outmsg
;

7222 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7223 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_PANORAMA
);

7224 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7225 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7227 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7228 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7229 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7230 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7231 
	`vm≠_èbÀ_ª£t_pù
();

7234 if(
ªt
 =
FSM_BOARD_CLOSEUP
){

7235 
size_t
 
size
;

7236 
t_cmd
 
outmsg
;

7237 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7238 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_BOARD_CLOSEUP
);

7239 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7240 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7242 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7243 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7244 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7245 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7246 
	`vm≠_èbÀ_ª£t_pù
();

7248 
	`gëtimeofday
(&
timevÆ1
, 
NULL
);

7251 if(!
	`°rcmp
(
©å_«me
, "Stop")){

7252 
	`debug_¥ötf
("SwitchTrackingÑeceive stop\n");

7254 if(
thªad_∑øm
->
ãachî_°©us
 == 17){

7255 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 0);

7257 
	`vm≠_èbÀ_ª£t_pù
();

7260 if(!
	`°rcmp
(
©å_«me
, "SwitchVideo")){

7261 if(!
	`°rcmp
(
©å_vÆue
, "VGA")){

7262 
size_t
 
size
;

7263 
t_cmd
 
outmsg
;

7264 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7265 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
VIDEO_FUNCTION_VGA
);

7266 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7268 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7269 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7270 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7271 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7272 
	`vm≠_èbÀ_ª£t_pù
();

7275 if(!
	`°rcmp
(
©å_vÆue
, "TeacherSpecial")){

7276 
size_t
 
size
;

7277 
t_cmd
 
outmsg
;

7278 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7279 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

7280 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7281 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7283 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7284 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7285 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7286 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7287 
	`vm≠_èbÀ_ª£t_pù
();

7290 if(!
	`°rcmp
(
©å_vÆue
, "StudentSpecial")){

7291 
size_t
 
size
;

7292 
t_cmd
 
outmsg
;

7293 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7294 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_CLOSEUP
);

7295 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7296 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7298 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7299 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7300 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7301 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7302 
	`vm≠_èbÀ_ª£t_pù
();

7305 if(!
	`°rcmp
(
©å_vÆue
, "TeacherFull")){

7306 
size_t
 
size
;

7307 
t_cmd
 
outmsg
;

7308 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7309 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_PANORAMA
);

7310 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7311 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7313 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7314 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7315 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7316 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7317 
	`vm≠_èbÀ_ª£t_pù
();

7320 if(!
	`°rcmp
(
©å_vÆue
, "StudentFull")){

7321 
size_t
 
size
;

7322 
t_cmd
 
outmsg
;

7323 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7324 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_PANORAMA
);

7325 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7326 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7328 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7329 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7330 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7331 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7332 
	`vm≠_èbÀ_ª£t_pù
();

7335 if(!
	`°rcmp
(
©å_vÆue
, "Blackboard")){

7336 
size_t
 
size
;

7337 
t_cmd
 
outmsg
;

7338 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7339 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_BOARD_CLOSEUP
);

7340 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7341 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

7343 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7344 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7345 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7346 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7347 
	`vm≠_èbÀ_ª£t_pù
();

7350 if(!
	`°rcmp
(
©å_vÆue
, "VGAWithTeacherSpecial")){

7351 
size_t
 
size
;

7352 
t_cmd
 
outmsg
;

7353 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7354 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
VIDEO_FUNCTION_VGA
);

7355 
	`add_©å_öt
(&
outmsg
, "PIP", 1);

7357 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7358 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7359 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7360 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7361 
	`vm≠_èbÀ_£t_pù_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

7364 if(!
	`°rcmp
(
©å_vÆue
, "TeacherSpecialWithStudentSpecial")){

7365 
size_t
 
size
;

7366 
t_cmd
 
outmsg
;

7367 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

7368 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

7369 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

7370 
	`add_©å_öt
(&
outmsg
, "PIP", 1);

7372 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

7373 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

7374 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

7375 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

7376 
	`vm≠_èbÀ_£t_pù_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_CLOSEUP
);

7379 if(!
	`°rcmp
(
©å_«me
, "SetRecordMode")){

7380 if(!
	`°rcmp
(
©å_vÆue
, "Manual")){

7381 
g_cfg
.
IsAutoIn°u˘
 = 0;

7382 
	`debug_¥ötf
("set modeÅo manual\n");

7385 if(!
	`°rcmp
(
©å_vÆue
, "HalfAuto")){

7386 
g_cfg
.
IsAutoIn°u˘
 = 1;

7387 
	`debug_¥ötf
("set modeÅo semi-auto\n");

7390 if(!
	`°rcmp
(
©å_vÆue
, "Auto")){

7391 
g_cfg
.
IsAutoIn°u˘
 = 2;

7392 
	`debug_¥ötf
("set modeÅoáuto\n");

7396 if(!
	`°rcmp
(
©å_«me
, "CZWT")){

7397 
zoom°ï
 = (
ãachî
.
zoom_max
-ãachî.
zoom_mö
)/100;

7398 
de°_zoom
 = 
ãachî
.
ZoomPos
-
zoom°ï
;

7399 if(
de°_zoom
<
ãachî
.
zoom_mö
){

7400 
de°_zoom
 = 
ãachî
.
zoom_mö
;

7402 
	`ZoomDúe˘
(
thªad_∑øm
, &
ãachî
, 
de°_zoom
);

7403 
	`debug_¥ötf
("CZWT\n");

7406 if(!
	`°rcmp
(
©å_«me
, "CZTT")){

7407 
zoom°ï
 = (
ãachî
.
zoom_max
-ãachî.
zoom_mö
)/100;

7408 
de°_zoom
 = 
ãachî
.
ZoomPos
+
zoom°ï
;

7409 if(
de°_zoom
>
ãachî
.
zoom_max
){

7410 
de°_zoom
 = 
ãachî
.
zoom_max
;

7412 
	`ZoomDúe˘
(
thªad_∑øm
, &
ãachî
, 
de°_zoom
);

7413 
	`debug_¥ötf
("CZTT\n");

7416 if(!
	`°rcmp
(
©å_«me
, "CZWS")){

7417 
zoom°ï
 = (
°udít
.
zoom_max
-°udít.
zoom_mö
)/100;

7418 
de°_zoom
 = 
°udít
.
ZoomPos
-
zoom°ï
;

7419 if(
de°_zoom
<
°udít
.
zoom_mö
){

7420 
de°_zoom
 = 
°udít
.
zoom_mö
;

7422 
	`ZoomDúe˘
(
thªad_∑øm
, &
°udít
, 
de°_zoom
);

7423 
	`debug_¥ötf
("CZWS\n");

7426 if(!
	`°rcmp
(
©å_«me
, "CZTS")){

7427 
zoom°ï
 = (
°udít
.
zoom_max
-°udít.
zoom_mö
)/100;

7428 
de°_zoom
 = 
°udít
.
ZoomPos
+
zoom°ï
;

7429 if(
de°_zoom
>
°udít
.
zoom_max
){

7430 
de°_zoom
 = 
°udít
.
zoom_max
;

7432 
	`ZoomDúe˘
(
thªad_∑øm
, &
°udít
, 
de°_zoom
);

7433 
	`debug_¥ötf
("CZTS\n");

7436 if(!
	`°rcmp
(
©å_«me
, "CPTLT")){

7437 
∑n°ï
 = 
ãachî
.
∑n_max
/ãachî.
∑n_™gÀ_right
;

7439 
de°∑n
 = 
ãachî
.
P™Pos
-
∑n°ï
;

7440 if(
de°∑n
<
ãachî
.
∑n_mö
){

7441 
de°∑n
 = 
ãachî
.
∑n_mö
;

7443 
de°tût
 = 
ãachî
.
TûtPos
;

7444 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n
, 
de°tût
);

7445 
	`debug_¥ötf
("CPTLT\n");

7449 if(!
	`°rcmp
(
©å_«me
, "CPTRT")){

7450 
∑n°ï
 = 
ãachî
.
∑n_max
/ãachî.
∑n_™gÀ_right
;

7452 
de°∑n
 = 
ãachî
.
P™Pos
+
∑n°ï
;

7453 if(
de°∑n
>
ãachî
.
∑n_max
){

7454 
de°∑n
 = 
ãachî
.
∑n_max
;

7456 
de°tût
 = 
ãachî
.
TûtPos
;

7457 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n
, 
de°tût
);

7458 
	`debug_¥ötf
("CPTRT\n");

7462 if(!
	`°rcmp
(
©å_«me
, "CPTUT")){

7464 
tût°ï
 = 
ãachî
.
tût_max
/ãachî.
tût_™gÀ_up
;

7465 
de°∑n
 = 
ãachî
.
P™Pos
;

7466 
de°tût
 = 
ãachî
.
TûtPos
+
tût°ï
;

7467 if(
de°tût
>
ãachî
.
tût_max
){

7468 
de°tût
 = 
ãachî
.
tût_max
;

7470 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n
, 
de°tût
);

7471 
	`debug_¥ötf
("CPTUT\n");

7475 if(!
	`°rcmp
(
©å_«me
, "CPTDT")){

7477 
tût°ï
 = 
ãachî
.
tût_max
/ãachî.
tût_™gÀ_up
;

7478 
de°∑n
 = 
ãachî
.
P™Pos
;

7479 
de°tût
 = 
ãachî
.
TûtPos
-
tût°ï
;

7480 if(
de°tût
<
ãachî
.
tût_mö
){

7481 
de°tût
 = 
ãachî
.
tût_mö
;

7483 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n
, 
de°tût
);

7484 
	`debug_¥ötf
("CPTDT\n");

7488 if(!
	`°rcmp
(
©å_«me
, "CPTLS")){

7489 
∑n°ï
 = 
°udít
.
∑n_max
/°udít.
∑n_™gÀ_right
;

7491 
de°∑n
 = 
°udít
.
P™Pos
-
∑n°ï
;

7492 if(
de°∑n
<
°udít
.
∑n_mö
){

7493 
de°∑n
 = 
°udít
.
∑n_mö
;

7495 
de°tût
 = 
°udít
.
TûtPos
;

7496 
	`AbsPos
(
thªad_∑øm
, &
°udít
, 
de°∑n
, 
de°tût
);

7497 
	`debug_¥ötf
("CPTLS\n");

7501 if(!
	`°rcmp
(
©å_«me
, "CPTRS")){

7502 
∑n°ï
 = 
°udít
.
∑n_max
/°udít.
∑n_™gÀ_right
;

7504 
de°∑n
 = 
°udít
.
P™Pos
+
∑n°ï
;

7505 if(
de°∑n
>
°udít
.
∑n_max
){

7506 
de°∑n
 = 
°udít
.
∑n_max
;

7508 
de°tût
 = 
°udít
.
TûtPos
;

7509 
	`AbsPos
(
thªad_∑øm
, &
°udít
, 
de°∑n
, 
de°tût
);

7510 
	`debug_¥ötf
("CPTRS\n");

7514 if(!
	`°rcmp
(
©å_«me
, "CPTUS")){

7516 
tût°ï
 = 
°udít
.
tût_max
/°udít.
tût_™gÀ_up
;

7517 
de°∑n
 = 
°udít
.
P™Pos
;

7518 
de°tût
 = 
°udít
.
TûtPos
+
tût°ï
;

7519 if(
de°tût
>
°udít
.
tût_max
){

7520 
de°tût
 = 
°udít
.
tût_max
;

7522 
	`AbsPos
(
thªad_∑øm
, &
°udít
, 
de°∑n
, 
de°tût
);

7523 
	`debug_¥ötf
("CPTUS\n");

7527 if(!
	`°rcmp
(
©å_«me
, "CPTDS")){

7529 
tût°ï
 = 
°udít
.
tût_max
/°udít.
tût_™gÀ_up
;

7530 
de°∑n
 = 
°udít
.
P™Pos
;

7531 
de°tût
 = 
°udít
.
TûtPos
-
tût°ï
;

7532 if(
de°tût
<
°udít
.
tût_mö
){

7533 
de°tût
 = 
°udít
.
tût_mö
;

7535 
	`AbsPos
(
thªad_∑øm
, &
°udít
, 
de°∑n
, 
de°tût
);

7536 
	`debug_¥ötf
("CPTDS\n");

7539 if(!
	`°rcmp
(
©å_«me
, "CMIT")){

7540 
numbî
;

7541 
	`ch¨2hex
(
©å_vÆue
, &
numbî
, 
vÆue_Àn
);

7542 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, 
numbî
);

7543 
	`debug_¥ötf
("CMIT\n");

7546 if(!
	`°rcmp
(
©å_«me
, "CMST")){

7547 
numbî
;

7548 
	`ch¨2hex
(
©å_vÆue
, &
numbî
, 
vÆue_Àn
);

7549 
	`MemSë
(
thªad_∑øm
, &
ãachî
, 
numbî
);

7550 
	`debug_¥ötf
("CMST\n");

7553 if(!
	`°rcmp
(
©å_«me
, "CMIS")){

7554 
numbî
;

7555 
	`ch¨2hex
(
©å_vÆue
, &
numbî
, 
vÆue_Àn
);

7556 
	`ReˇŒ
(
thªad_∑øm
, &
°udít
, 
numbî
);

7557 
	`debug_¥ötf
("CMIS\n");

7560 if(!
	`°rcmp
(
©å_«me
, "CMSS")){

7561 
numbî
;

7562 
	`ch¨2hex
(
©å_vÆue
, &
numbî
, 
vÆue_Àn
);

7563 
	`MemSë
(
thªad_∑øm
, &
°udít
, 
numbî
);

7564 
	`debug_¥ötf
("CMSS\n");

7569 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Cål_c⁄sumî_fifo
);

7575 
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)){

7577 *
Msg
 = 
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
;

7578 
cmd
[
CMD_SIZE
+1];

7579 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

7580 
cmd
[
CMD_SIZE
] = '\0';

7581 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

7582 
t_Dëe˘Resu…
 
Dëe˘Resu…
;

7583 
	`GëDëe˘Resu…
(&
Dëe˘Resu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

7584 if(
Dëe˘Resu…
.
dëe˘ed
){

7585 
	`debug_¥ötf
("teacher detected\n");

7588 
	`debug_¥ötf
("teacher undetected\n");

7592 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VGA
)){

7593 
t_VGA_ªsu…
 
ªsu…
;

7594 
	`GëVGAResu…
(&
ªsu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

7595 if(
ªsu…
.
ch™ged
){

7596 
	`debug_¥ötf
("VGA changed\n");

7599 
	`debug_¥ötf
("VGA unchanged\n");

7606 *
Msg
 = 
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
;

7607 
cmd
[
CMD_SIZE
+1];

7612 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

7613 
cmd
[
CMD_SIZE
] = '\0';

7615 if(
g_cfg
.
IsAutoIn°u˘
){

7617 
	#SCREEN_ON


	)

7618 #i‚de‡
SCREEN_ON


7619 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

7620 if(
thªad_∑øm
->
ãachî_°©us
 == 17){

7621 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

7622 if(
mŸi⁄_skù_num
){

7623 
t_Dëe˘Resu…
 
Dëe˘Resu…
;

7624 
	`GëDëe˘Resu…
(&
Dëe˘Resu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

7625 if(
Dëe˘Resu…
.
dëe˘ed
){

7626 
acc_of_lo°
 = 0;

7627 if(
Dëe˘Resu…
.
max_right
 - Dëe˘Resu….
max_À·
 >= 128){

7628 
IsMu…ùÀTóchî
 = 1;

7631 
IsMu…ùÀTóchî
 = 0;

7633 
off£t
 = ()(
Dëe˘Resu…
.
avg_À·
 + Dëe˘Resu….
avg_right
 -256)/2;

7634 
	`debug_¥ötf
("À· = %d,Ñighà%d\n", 
Dëe˘Resu…
.
avg_À·
, Dëe˘Resu….
avg_right
);

7635 if(
off£t
>=45 || offset<=-45){

7637 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

7638 
∑n_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128);

7640 
ªœtive_pos
 = 
ãachî
.
∑n_max
*
∑n_™gÀ
*180/
M_PI
/ãachî.
∑n_™gÀ_right
;

7641 
de°∑n_pos
 = 
ãachî
.
P™Pos
 + 
ªœtive_pos
;

7642 
	`debug_¥ötf
("off£à%d, võw_™gÀ = %f,Ö™_™gÀ = %f\n", 
off£t
, 
võw_™gÀ
, 
∑n_™gÀ
*180/
M_PI
);

7643 
	`debug_¥ötf
("ªœtive_pos=%d, P™Pos=%d\n", 
ªœtive_pos
, 
ãachî
.
P™Pos
);

7645 if(!
IsEx˛ude
){

7646 if(
de°∑n_pos
>
limô_right
){

7647 
de°∑n_pos
 = 
limô_right
;

7650 if(
de°∑n_pos
<
limô_À·
){

7651 
de°∑n_pos
 = 
limô_À·
;

7655 if(
ãachî
.
P™Pos
>=
ex˛ude_right
 &&Åóchî.P™Pos<=
limô_right
){

7656 if(
de°∑n_pos
>
limô_right
){

7657 
de°∑n_pos
 = 
limô_right
;

7660 if(
de°∑n_pos
<
ex˛ude_right
){

7661 
de°∑n_pos
 = 
ex˛ude_right
;

7664 if(
ãachî
.
P™Pos
>=
limô_À·
 &&Åóchî.P™Pos<=
ex˛ude_À·
){

7665 if(
de°∑n_pos
>
ex˛ude_À·
){

7666 
de°∑n_pos
 = 
ex˛ude_À·
;

7669 if(
de°∑n_pos
<
limô_À·
){

7670 
de°∑n_pos
 = 
limô_À·
;

7675 if(
de°∑n_pos
>
ãachî
.
P™Pos
){

7676 
dúe˘i⁄
 = 1;

7679 
dúe˘i⁄
 = -1;

7682 if(
de°∑n_pos
 !
ãachî
.
P™Pos
){

7683 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

7684 
g_ˇmhﬁdî_°ûl
 = 0;

7685 
g_™Æyze_‰ame_num
 = 0;

7686 
g_num_ö_group
 = 0;

7687 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

7688 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n_pos
,Åóchî.
TûtPos
);

7694 
acc_of_lo°
++;

7697 if(
acc_of_lo°
 >= 18 && (acc_of_lost%6)==0){

7698 
	`ReˇŒ
(
thªad_∑øm
, &
ãachî
, (
acc_of_lo°
/6)%3);

7701 if(
acc_of_lo°
 >= 6 && (acc_of_lost%3)==0){

7702 
off£t
 = 128*
dúe˘i⁄
;

7703 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

7704 
∑n_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128);

7706 
ªœtive_pos
 = 
ãachî
.
∑n_max
*
∑n_™gÀ
*180/
M_PI
/ãachî.
∑n_™gÀ_right
;

7707 
de°∑n_pos
 = 
ãachî
.
P™Pos
 + 
ªœtive_pos
;

7709 if(!
IsEx˛ude
){

7710 if(
de°∑n_pos
>
limô_right
){

7711 
de°∑n_pos
 = 
limô_right
;

7712 
dúe˘i⁄
 = direction*(-1);

7715 if(
de°∑n_pos
<
limô_À·
){

7716 
de°∑n_pos
 = 
limô_À·
;

7717 
dúe˘i⁄
 = direction*(-1);

7721 if(
ãachî
.
P™Pos
>=
ex˛ude_right
 &&Åóchî.P™Pos<=
limô_right
){

7722 if(
de°∑n_pos
>
limô_right
){

7723 
de°∑n_pos
 = 
limô_right
;

7724 
dúe˘i⁄
 = direction*(-1);

7727 if(
de°∑n_pos
<
ex˛ude_right
){

7728 
de°∑n_pos
 = 
ex˛ude_right
;

7729 if(
de°∑n_pos
 =
ãachî
.
P™Pos
){

7730 
de°∑n_pos
 = 
ex˛ude_À·
;

7734 if(
ãachî
.
P™Pos
>=
limô_À·
 &&Åóchî.P™Pos<=
ex˛ude_À·
){

7735 if(
de°∑n_pos
>
ex˛ude_À·
){

7736 
de°∑n_pos
 = 
ex˛ude_À·
;

7737 if(
de°∑n_pos
 =
ãachî
.
P™Pos
){

7738 
de°∑n_pos
 = 
ex˛ude_right
;

7742 if(
de°∑n_pos
<
limô_À·
){

7743 
de°∑n_pos
 = 
limô_À·
;

7744 
dúe˘i⁄
 = direction*(-1);

7749 if(
de°∑n_pos
 !
ãachî
.
P™Pos
){

7750 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

7751 
g_ˇmhﬁdî_°ûl
 = 0;

7752 
g_™Æyze_‰ame_num
 = 0;

7753 
g_num_ö_group
 = 0;

7754 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

7755 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n_pos
,Åóchî.
TûtPos
);

7762 
mŸi⁄_skù_num
++;

7768 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

7769 if(
thªad_∑øm
->
ãachî_°©us
 == 17){

7770 if(!
	`gë_ˇmhﬁdî_≥ndög_°©e
(&
ãachî
)){

7772 
t_Dëe˘Resu…
 
Dëe˘Resu…
;

7773 
	`GëDëe˘Resu…
(&
Dëe˘Resu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

7775 if(
Dëe˘Resu…
.
dëe˘ed
){

7776 if(
s¸ìn_geomëry
.
has_s¸ìn
){

7778 
À·_ö_s¸ìn
, 
right_ö_s¸ìn
, 
ö_s¸ìn
;

7780 if(
Dëe˘Resu…
.
max_right
-Dëe˘Resu….
max_À·
<=52){

7781 
off£t
 = ()(
Dëe˘Resu…
.
avg_À·
 + Dëe˘Resu….
avg_right
 -256)/2;

7782 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

7783 
off£t_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128)*180/M_PI;

7784 
ªœtive_∑n_pos
 = 
ãachî
.
P™Pos
 -Åóchî.
¥e£t
[0].
∑n_pos
;

7785 
ªœtive_™gÀ
 = 
ªœtive_∑n_pos
*
ãachî
.
∑n_™gÀ_right
/ãachî.
∑n_max
;

7786 
obj_™gÀ
 = (90-
s¸ìn_geomëry
.
ˇmîa_öôül_™gÀ
)+
ªœtive_™gÀ
+
off£t_™gÀ
;

7787 
	`debug_¥ötf
("avg_obj'†™gÀ = %f[%f,%f]\n",
obj_™gÀ
, 
s¸ìn_™gÀ_À·
, 
s¸ìn_™gÀ_right
);

7788 if(
obj_™gÀ
>
s¸ìn_™gÀ_À·
 && obj_™gÀ<
s¸ìn_™gÀ_right
){

7789 
À·_ö_s¸ìn
 = 1;

7790 
right_ö_s¸ìn
 = 1;

7793 
À·_ö_s¸ìn
 = 0;

7794 
right_ö_s¸ìn
 = 0;

7798 
off£t
 = ()
Dëe˘Resu…
.
max_À·
+26;

7799 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

7800 
off£t_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128)*180/M_PI;

7801 
ªœtive_∑n_pos
 = 
ãachî
.
P™Pos
 -Åóchî.
¥e£t
[0].
∑n_pos
;

7802 
ªœtive_™gÀ
 = 
ªœtive_∑n_pos
*
ãachî
.
∑n_™gÀ_right
/ãachî.
∑n_max
;

7803 
obj_™gÀ
 = (90-
s¸ìn_geomëry
.
ˇmîa_öôül_™gÀ
)+
ªœtive_™gÀ
+
off£t_™gÀ
;

7804 
	`debug_¥ötf
("À·_obj'†™gÀ = %f[%f,%f]\n", 
obj_™gÀ
, 
s¸ìn_™gÀ_À·
, 
s¸ìn_™gÀ_right
);

7805 if(
obj_™gÀ
>
s¸ìn_™gÀ_À·
 && obj_™gÀ<
s¸ìn_™gÀ_right
){

7806 
À·_ö_s¸ìn
 = 1;

7809 
À·_ö_s¸ìn
 = 0;

7812 
off£t
 = ()
Dëe˘Resu…
.
max_right
-26;

7813 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

7814 
off£t_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128)*180/M_PI;

7815 
ªœtive_∑n_pos
 = 
ãachî
.
P™Pos
 -Åóchî.
¥e£t
[0].
∑n_pos
;

7816 
ªœtive_™gÀ
 = 
ªœtive_∑n_pos
*
ãachî
.
∑n_™gÀ_right
/ãachî.
∑n_max
;

7817 
obj_™gÀ
 = (90-
s¸ìn_geomëry
.
ˇmîa_öôül_™gÀ
)+
ªœtive_™gÀ
+
off£t_™gÀ
;

7818 
	`debug_¥ötf
("right_obj'†™gÀ = %f[%f,%f]\n", 
obj_™gÀ
, 
s¸ìn_™gÀ_À·
, 
s¸ìn_™gÀ_right
);

7819 if(
obj_™gÀ
>
s¸ìn_™gÀ_À·
 && obj_™gÀ<
s¸ìn_™gÀ_right
){

7820 
right_ö_s¸ìn
 = 1;

7823 
right_ö_s¸ìn
 = 0;

7827 if((!
À·_ö_s¸ìn
Ë&& (!
right_ö_s¸ìn
)){

7828 
ö_s¸ìn
 = 0;

7829 
off£t
 = ()(
Dëe˘Resu…
.
avg_À·
 + Dëe˘Resu….
avg_right
 -256)/2;

7830 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

7831 
off£t_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128)*180/M_PI;

7832 
ªœtive_∑n_pos
 = 
ãachî
.
P™Pos
 -Åóchî.
¥e£t
[0].
∑n_pos
;

7833 
ªœtive_™gÀ
 = 
ªœtive_∑n_pos
*
ãachî
.
∑n_™gÀ_right
/ãachî.
∑n_max
;

7834 
obj_™gÀ
 = (90-
s¸ìn_geomëry
.
ˇmîa_öôül_™gÀ
)+
ªœtive_™gÀ
+
off£t_™gÀ
;

7835 if(
obj_™gÀ
>
s¸ìn_™gÀ_À·
 && obj_™gÀ<
s¸ìn_™gÀ_right
){

7836 if((
	`abs
(
Dëe˘Resu…
.
max_À·
-128))<abs(Dëe˘Resu….
max_right
-128)){

7837 
Dëe˘Resu…
.
avg_À·
 = Dëe˘Resu….
max_À·
;

7838 
Dëe˘Resu…
.
avg_right
 = Dëe˘Resu….
avg_À·
+52;

7841 
Dëe˘Resu…
.
avg_right
 = Dëe˘Resu….
max_right
;

7842 
Dëe˘Resu…
.
avg_À·
 = Dëe˘Resu….
avg_right
-52;

7846 if((!
À·_ö_s¸ìn
Ë&& 
right_ö_s¸ìn
){

7847 
ö_s¸ìn
 = 0;

7848 
Dëe˘Resu…
.
avg_À·
 = Dëe˘Resu….
max_À·
;

7849 
Dëe˘Resu…
.
avg_right
 = Dëe˘Resu….
avg_À·
+52;

7850 
Dëe˘Resu…
.
max_right
 = Dëe˘Resu….
max_À·
;

7852 if(
À·_ö_s¸ìn
 && (!
right_ö_s¸ìn
)){

7853 
ö_s¸ìn
 = 0;

7854 
Dëe˘Resu…
.
avg_right
 = Dëe˘Resu….
max_right
;

7855 
Dëe˘Resu…
.
avg_À·
 = Dëe˘Resu….
avg_right
-52;

7856 
Dëe˘Resu…
.
max_À·
 = Dëe˘Resu….
max_right
;

7859 
ö_s¸ìn
 = 1;

7862 if(
ö_s¸ìn
){

7863 if(
Dëe˘Resu…
.
dëe˘ed
>=2){

7864 
mŸi⁄_ö_s¸ìn
++;

7865 
°ûl_ö_s¸ìn
 = 0;

7866 if(
acc_of_lo°
<3){

7867 
acc_of_lo°
 = 0;

7870 if(
mŸi⁄_ö_s¸ìn
>=2){

7871 
acc_of_lo°
 = 0;

7874 
acc_of_lo°
++;

7879 
°ûl_ö_s¸ìn
++;

7880 
mŸi⁄_ö_s¸ìn
=0;

7881 if(
acc_of_lo°
<3){

7882 if(
°ûl_ö_s¸ìn
 < 90){

7883 
acc_of_lo°
 = 0;

7886 
acc_of_lo°
 = 3;

7890 
acc_of_lo°
++;

7896 
acc_of_lo°
 = 0;

7897 
°ûl_ö_s¸ìn
 = 0;

7898 
mŸi⁄_ö_s¸ìn
 = 0;

7902 
acc_of_lo°
 = 0;

7906 
acc_of_lo°
++;

7907 if(
s¸ìn_geomëry
.
has_s¸ìn
){

7908 
°ûl_ö_s¸ìn
++;

7909 if(
°ûl_ö_s¸ìn
 == 90){

7910 if(
acc_of_lo°
<3){

7911 
acc_of_lo°
 = 3;

7918 if(
Dëe˘Resu…
.
dëe˘ed
 && 
acc_of_lo°
==0){

7919 if(
Dëe˘Resu…
.
max_right
 - Dëe˘Resu….
max_À·
 >= 128){

7920 
IsMu…ùÀTóchî
 = 1;

7923 
IsMu…ùÀTóchî
 = 0;

7925 
	#HIDEN_PAUSE


	)

7926 #i‚de‡
HIDEN_PAUSE


7927 
off£t
 = ()(
Dëe˘Resu…
.
avg_À·
 + Dëe˘Resu….
avg_right
 -256)/2;

7928 
	`debug_¥ötf
("À· = %d,Ñighà%d\n", 
Dëe˘Resu…
.
avg_À·
, Dëe˘Resu….
avg_right
);

7929 if(
off£t
>=45 || offset<=-45){

7931 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

7932 
∑n_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128);

7934 
ªœtive_pos
 = 
ãachî
.
∑n_max
*
∑n_™gÀ
*180/
M_PI
/ãachî.
∑n_™gÀ_right
;

7935 
de°∑n_pos
 = 
ãachî
.
P™Pos
 + 
ªœtive_pos
;

7936 
	`debug_¥ötf
("off£à%d, võw_™gÀ = %f,Ö™_™gÀ = %f\n", 
off£t
, 
võw_™gÀ
, 
∑n_™gÀ
*180/
M_PI
);

7937 
	`debug_¥ötf
("ªœtive_pos=%d, P™Pos=%d\n", 
ªœtive_pos
, 
ãachî
.
P™Pos
);

7939 if(!
IsEx˛ude
){

7940 if(
de°∑n_pos
>
limô_right
){

7941 
de°∑n_pos
 = 
limô_right
;

7944 if(
de°∑n_pos
<
limô_À·
){

7945 
de°∑n_pos
 = 
limô_À·
;

7949 if(
ãachî
.
P™Pos
>=
ex˛ude_right
 &&Åóchî.P™Pos<=
limô_right
){

7950 if(
de°∑n_pos
>
limô_right
){

7951 
de°∑n_pos
 = 
limô_right
;

7954 if(
de°∑n_pos
<
ex˛ude_right
){

7955 
de°∑n_pos
 = 
ex˛ude_right
;

7958 if(
ãachî
.
P™Pos
>=
limô_À·
 &&Åóchî.P™Pos<=
ex˛ude_À·
){

7959 if(
de°∑n_pos
>
ex˛ude_À·
){

7960 
de°∑n_pos
 = 
ex˛ude_À·
;

7963 if(
de°∑n_pos
<
limô_À·
){

7964 
de°∑n_pos
 = 
limô_À·
;

7969 if(
de°∑n_pos
>
ãachî
.
P™Pos
){

7970 
dúe˘i⁄
 = 1;

7973 
dúe˘i⁄
 = -1;

7976 if(
de°∑n_pos
 !
ãachî
.
P™Pos
){

7977 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

7978 
g_ˇmhﬁdî_°ûl
 = 0;

7979 
g_™Æyze_‰ame_num
 = 0;

7980 
g_num_ö_group
 = 0;

7981 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

7982 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n_pos
,Åóchî.
TûtPos
);

7987 
	#OFFSET_THRES_LOW
 26

	)

7988 
	#OFFSET_THRES_HIGH
 78

	)

7989 
do_ãachî_åackög
 = 0;

7990 
off£t
 = ()(
Dëe˘Resu…
.
avg_À·
 + Dëe˘Resu….
avg_right
 -256)/2;

7991 
	`debug_¥ötf
("À· = %d,Ñighà%d\n", 
Dëe˘Resu…
.
avg_À·
, Dëe˘Resu….
avg_right
);

7992 if(
	`abs
(
off£t
)<=
OFFSET_THRES_LOW
){

7993 
ö_À·
 = 0;

7994 
ö_right
 = 0;

7996 if(
off£t
>
OFFSET_THRES_LOW
 && off£t<
OFFSET_THRES_HIGH
){

7997 
ö_À·
 = 0;

7998 
ö_right
++;

7999 if(
ö_right
==10){

8000 
do_ãachî_åackög
 = 1;

8003 if(
off£t
>-
OFFSET_THRES_HIGH
 && off£t<-
OFFSET_THRES_LOW
){

8004 
ö_À·
++;

8005 
ö_right
 = 0;

8006 if(
ö_À·
==10){

8007 
do_ãachî_åackög
 = 1;

8011 
do_ãachî_åackög
 = 1;

8014 if(
do_ãachî_åackög
){

8015 
ö_À·
 = 0;

8016 
ö_right
 = 0;

8017 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

8018 
∑n_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128);

8019 
ªœtive_pos
 = 
ãachî
.
∑n_max
*
∑n_™gÀ
*180/
M_PI
/ãachî.
∑n_™gÀ_right
;

8020 
de°∑n_pos
 = 
ãachî
.
P™Pos
 + 
ªœtive_pos
;

8021 
	`debug_¥ötf
("off£à%d, võw_™gÀ = %f,Ö™_™gÀ = %f\n", 
off£t
, 
võw_™gÀ
, 
∑n_™gÀ
*180/
M_PI
);

8022 
	`debug_¥ötf
("ªœtive_pos=%d, P™Pos=%d\n", 
ªœtive_pos
, 
ãachî
.
P™Pos
);

8024 if(!
IsEx˛ude
){

8025 if(
de°∑n_pos
>
limô_right
){

8026 
de°∑n_pos
 = 
limô_right
;

8029 if(
de°∑n_pos
<
limô_À·
){

8030 
de°∑n_pos
 = 
limô_À·
;

8034 if(
ãachî
.
P™Pos
>=
ex˛ude_right
 &&Åóchî.P™Pos<=
limô_right
){

8035 if(
de°∑n_pos
>
limô_right
){

8036 
de°∑n_pos
 = 
limô_right
;

8039 if(
de°∑n_pos
<
ex˛ude_right
){

8040 
de°∑n_pos
 = 
ex˛ude_right
;

8043 if(
ãachî
.
P™Pos
>=
limô_À·
 &&Åóchî.P™Pos<=
ex˛ude_À·
){

8044 if(
de°∑n_pos
>
ex˛ude_À·
){

8045 
de°∑n_pos
 = 
ex˛ude_À·
;

8048 if(
de°∑n_pos
<
limô_À·
){

8049 
de°∑n_pos
 = 
limô_À·
;

8054 if(
de°∑n_pos
>
ãachî
.
P™Pos
){

8055 
dúe˘i⁄
 = 1;

8058 
dúe˘i⁄
 = -1;

8061 
∑n_™gÀ_thªshﬁd
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
OFFSET_THRES_HIGH
/128);

8062 
ªœtive_pos_thªshﬁd
 = 
ãachî
.
∑n_max
*
∑n_™gÀ
*180/
M_PI
/ãachî.
∑n_™gÀ_right
;

8063 if(
	`abs
(
de°∑n_pos
-
ãachî
.
P™Pos
)<abs(
ªœtive_pos
Ë||ábs(de°∑n_pos-ãachî.P™Pos)<
ªœtive_pos_thªshﬁd
)

8065 
√ed_hidí
 = 0;

8068 
√ed_hidí
 =1;

8071 if(
de°∑n_pos
 !
ãachî
.
P™Pos
){

8072 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

8073 
g_ˇmhﬁdî_°ûl
 = 0;

8074 
g_™Æyze_‰ame_num
 = 0;

8075 
g_num_ö_group
 = 0;

8076 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

8077 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n_pos
,Åóchî.
TûtPos
);

8081 
√ed_hidí
 = 0;

8087 if(
acc_of_lo°
 >= 6 && (acc_of_lost%3)==0){

8088 
off£t
 = 128*
dúe˘i⁄
;

8089 
võw_™gÀ
 = -((
ãachî
.
võw_™gÀ_max
 -Åóchî.
võw_™gÀ_mö
)*ãachî.
ZoomPos
/ãachî.
zoom_max
)+teacher.view_angle_max;

8090 
∑n_™gÀ
 = 
	`©™
(
	`èn
(
võw_™gÀ
*
M_PI
/360)*
off£t
/128);

8092 
ªœtive_pos
 = 
ãachî
.
∑n_max
*
∑n_™gÀ
*180/
M_PI
/ãachî.
∑n_™gÀ_right
;

8093 
de°∑n_pos
 = 
ãachî
.
P™Pos
 + 
ªœtive_pos
;

8095 if(!
IsEx˛ude
){

8096 if(
de°∑n_pos
>
limô_right
){

8097 
de°∑n_pos
 = 
limô_right
;

8098 
dúe˘i⁄
 = direction*(-1);

8101 if(
de°∑n_pos
<
limô_À·
){

8102 
de°∑n_pos
 = 
limô_À·
;

8103 
dúe˘i⁄
 = direction*(-1);

8107 if(
ãachî
.
P™Pos
>=
ex˛ude_right
 &&Åóchî.P™Pos<=
limô_right
){

8108 if(
de°∑n_pos
>
limô_right
){

8109 
de°∑n_pos
 = 
limô_right
;

8110 
dúe˘i⁄
 = direction*(-1);

8113 if(
de°∑n_pos
<
ex˛ude_right
){

8114 
de°∑n_pos
 = 
ex˛ude_right
;

8115 if(
de°∑n_pos
 =
ãachî
.
P™Pos
){

8116 
de°∑n_pos
 = 
ex˛ude_À·
;

8120 if(
ãachî
.
P™Pos
>=
limô_À·
 &&Åóchî.P™Pos<=
ex˛ude_À·
){

8121 if(
de°∑n_pos
>
ex˛ude_À·
){

8122 
de°∑n_pos
 = 
ex˛ude_À·
;

8123 if(
de°∑n_pos
 =
ãachî
.
P™Pos
){

8124 
de°∑n_pos
 = 
ex˛ude_right
;

8128 if(
de°∑n_pos
<
limô_À·
){

8129 
de°∑n_pos
 = 
limô_À·
;

8130 
dúe˘i⁄
 = direction*(-1);

8135 if(
de°∑n_pos
 !
ãachî
.
P™Pos
){

8136 
	`±hªad_muãx_lock
(&
g_ˇ±uª_sync_muãx
);

8137 
g_ˇmhﬁdî_°ûl
 = 0;

8138 
g_™Æyze_‰ame_num
 = 0;

8139 
g_num_ö_group
 = 0;

8140 
	`±hªad_muãx_u∆ock
(&
g_ˇ±uª_sync_muãx
);

8141 
	`AbsPos
(
thªad_∑øm
, &
ãachî
, 
de°∑n_pos
,Åóchî.
TûtPos
);

8152 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_AUX
)){

8153 if(
thªad_∑øm
->
°udít_°©us
 == 5){

8154 
t_aux_ªsu…
 
ªsu…
;

8155 
	`GëAuxResu…
(&
ªsu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

8156 if(
ªsu…
.
°udít_ö_°™dög
){

8157 
	`gë_°udít_åackög_∑øm
(&
°udít_åackög_geomëry
, &
ªsu…
);

8159 if(
°udít_åackög_geomëry
.
dŸøckög
){

8160 
ªœtive_∑n_pos
 = 
°udít
.
∑n_max
*
°udít_åackög_geomëry
.
èrgë_∑n_™gÀ
*180/
M_PI
/°udít.
∑n_™gÀ_right
;

8161 
de°∑n_pos
 = 
°udít
.
¥e£t
[0].
∑n_pos
 + 
ªœtive_∑n_pos
;

8162 if(
de°∑n_pos
>
°udít
.
∑n_max
){

8163 
de°∑n_pos
 = 
°udít
.
∑n_max
;

8165 if(
de°∑n_pos
<
°udít
.
∑n_mö
){

8166 
de°∑n_pos
 = 
°udít
.
∑n_mö
;

8168 
ªœtive_tût_pos
 = 
°udít
.
tût_max
*
°udít_åackög_geomëry
.
èrgë_tût_™gÀ
*180/
M_PI
/°udít.
tût_™gÀ_up
;

8169 
de°tût_pos
 = 
°udít
.
¥e£t
[0].
tût_pos
 + 
ªœtive_tût_pos
;

8170 if(
de°tût_pos
>
°udít
.
tût_max
){

8171 
de°tût_pos
 = 
°udít
.
tût_max
;

8173 if(
de°tût_pos
<
°udít
.
tût_mö
){

8174 
de°tût_pos
 = 
°udít
.
tût_mö
;

8176 
	`AbsPos
(
thªad_∑øm
, &
°udít
, 
de°∑n_pos
, 
de°tût_pos
);

8181 
de°zoom_pos
 = (
°udít
.
võw_™gÀ_max
-
°udít_åackög_geomëry
.
èrgë_võw_™gÀ
*180/
M_PI
)*°udít.
zoom_max
/(°udít.võw_™gÀ_max-°udít.
võw_™gÀ_mö
);

8182 if(
de°zoom_pos
>
°udít
.
zoom_max
){

8183 
de°zoom_pos
 = 
°udít
.
zoom_max
;

8185 if(
de°zoom_pos
<
°udít
.
zoom_mö
){

8186 
de°zoom_pos
 = 
°udít
.
zoom_mö
;

8188 
	`debug_¥ötf
("de°zoom = %d\n", 
de°zoom_pos
);

8189 
	`ZoomDúe˘
(
thªad_∑øm
, &
°udít
, 
de°zoom_pos
);

8193 
t_aux_ªsu…
 
ªsu…
;

8194 
	`GëAuxResu…
(&
ªsu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

8195 if(
ªsu…
.
°udít_ö_°™dög
){

8196 
	`gë_°udít_åackög_∑øm
(&
°udít_åackög_geomëry
, &
ªsu…
);

8198 
de°zoom_pos
 = (
°udít
.
võw_™gÀ_max
-
°udít_åackög_geomëry
.
èrgë_võw_™gÀ
*180/
M_PI
)*°udít.
zoom_max
/(°udít.võw_™gÀ_max-°udít.
võw_™gÀ_mö
);

8199 if(
de°zoom_pos
>
°udít
.
zoom_max
){

8200 
de°zoom_pos
 = 
°udít
.
zoom_max
;

8202 if(
de°zoom_pos
<
°udít
.
zoom_mö
){

8203 
de°zoom_pos
 = 
°udít
.
zoom_mö
;

8205 
	`debug_¥ötf
("de°zoom = %d\n", 
de°zoom_pos
);

8213 #i‚de‡
HIDEN_PAUSE


8214 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

8215 if(
acc_of_lo°
==0){

8216 if(
IsMu…ùÀTóchî
){

8217 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

8218 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

8222 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

8223 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

8225 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

8228 if(
acc_of_lo°
>=3){

8229 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

8230 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

8231 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

8236 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VID
)){

8237 if(
acc_of_lo°
==0){

8238 if(!
√ed_hidí
){

8239 if(
IsMu…ùÀTóchî
){

8240 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

8241 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

8245 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

8246 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

8248 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

8251 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

8252 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

8253 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

8257 if(
acc_of_lo°
>=3){

8258 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_TEACHER_DETECTED_NONE
, &
åuth_èbÀ
);

8259 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_ONE
, &
åuth_èbÀ
);

8260 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_TEACHER_DETECTED_MULTIPLE
, &
åuth_èbÀ
);

8266 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_AUX
)){

8267 
t_aux_ªsu…
 
ªsu…
;

8268 
	`GëAuxResu…
(&
ªsu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

8270 if(
ªsu…
.
°udít_ö_°™dög
){

8271 
	`gë_°udít_åackög_∑øm
(&
°udít_åackög_geomëry
, &
ªsu…
);

8274 if(!
ªsu…
.
°udít_ö_°™dög
){

8275 
acc_°udít_lo°
++;

8276 if(
acc_°udít_lo°
 == 6){

8277 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_STUDENT_STAND_NONE
, &
åuth_èbÀ
);

8278 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_ONE
, &
åuth_èbÀ
);

8279 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_MULTIPLE
, &
åuth_èbÀ
);

8282 if(
ªsu…
.
°udít_ö_°™dög
 == 1){

8283 
acc_°udít_lo°
 = 0;

8284 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_NONE
, &
åuth_èbÀ
);

8285 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_STUDENT_STAND_ONE
, &
åuth_èbÀ
);

8286 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_MULTIPLE
, &
åuth_èbÀ
);

8289 
acc_°udít_lo°
 = 0;

8290 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_NONE
, &
åuth_èbÀ
);

8291 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_STUDENT_STAND_ONE
, &
åuth_èbÀ
);

8292 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_STUDENT_STAND_MULTIPLE
, &
åuth_èbÀ
);

8296 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_VGA
)){

8297 
t_VGA_ªsu…
 
ªsu…
;

8298 
	`GëVGAResu…
(&
ªsu…
, (*)
	`d©afifo_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
)->
¨g
.
d©a
);

8299 if(
ªsu…
.
ch™ged
 == 1){

8300 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_VGA_CHG
, &
åuth_èbÀ
);

8301 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_VGA_UNCHG
, &
åuth_èbÀ
);

8302 
acc_of_unch™ge
 = 0;

8304 if(
ªsu…
.
ch™ged
 == 2){

8305 
acc_of_unch™ge
 = 
g_cfg
.
VGADuøti⁄
;

8306 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_VGA_UNCHG
, &
åuth_èbÀ
);

8307 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_VGA_CHG
, &
åuth_èbÀ
);

8310 
acc_of_unch™ge
++;

8311 if(
acc_of_unch™ge
 =
g_cfg
.
VGADuøti⁄
){

8312 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_£t
(
COND_VGA_UNCHG
, &
åuth_èbÀ
);

8313 
	`åuth_èbÀ_ñemít_c⁄dôi⁄_ª£t
(
COND_VGA_CHG
, &
åuth_èbÀ
);

8321 
	`d©afifo_c⁄sumî_ªmove_hód
(
thªad_∑øm
->
Evít_c⁄sumî_fifo
);

8326 
	`gëtimeofday
(&
timevÆ2
, 
NULL
);

8327 
öãrvÆ
 = (
timevÆ2
.
tv_£c
 - 
timevÆ1
.tv_£c)*1000 + (timevÆ2.
tv_u£c
 -Åimeval1.tv_usec)/1000;

8329 if(
g_cfg
.
IsAutoIn°u˘
==2 && 
öãrvÆ
>=3000){

8330 
ªt
 = 
	`fsm_°©e_upd©e
(&
fsm
);

8334 if(
ªt
 !
FSM_NOTRANSITION
){

8336 
timevÆ1
.
tv_£c
 = 
timevÆ2
.tv_sec;

8337 
timevÆ1
.
tv_u£c
 = 
timevÆ2
.tv_usec;

8338 
	`debug_¥ötf
("stateÇot change\n");

8341 if(
ªt
 =
FSM_VGA
){

8342 
size_t
 
size
;

8343 
t_cmd
 
outmsg
;

8344 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8345 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
VIDEO_FUNCTION_VGA
);

8346 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

8348 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8349 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8350 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8351 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8352 
	`vm≠_èbÀ_ª£t_pù
();

8353 
	`debug_¥ötf
("changeÅo FSM_VGA state\n");

8356 if(
ªt
 =
FSM_TEACHER_CLOSEUP
){

8357 
size_t
 
size
;

8358 
t_cmd
 
outmsg
;

8359 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8360 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

8361 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

8362 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

8364 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8365 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8366 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8367 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8368 
	`vm≠_èbÀ_ª£t_pù
();

8369 
	`debug_¥ötf
("changeÅo FSM_TEACHER_CLOSEUP state\n");

8372 if(
ªt
 =
FSM_STUDENT_CLOSEUP
){

8373 
size_t
 
size
;

8374 
t_cmd
 
outmsg
;

8375 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8376 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_CLOSEUP
);

8377 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

8378 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

8380 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8381 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8382 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8383 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8384 
	`vm≠_èbÀ_ª£t_pù
();

8385 
	`debug_¥ötf
("changeÅo FSM_STUDENT_CLOSEUP state\n");

8388 if(
ªt
 =
FSM_TEACHER_PANORAMA
){

8389 
size_t
 
size
;

8390 
t_cmd
 
outmsg
;

8391 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8392 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_PANORAMA
);

8393 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

8394 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

8396 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8397 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8398 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8399 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8400 
	`vm≠_èbÀ_ª£t_pù
();

8401 
	`debug_¥ötf
("changeÅo FSM_TEACHER_PANORAMA state\n");

8404 if(
ªt
 =
FSM_STUDENT_PANORAMA
){

8405 
size_t
 
size
;

8406 
t_cmd
 
outmsg
;

8407 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8408 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_PANORAMA
);

8409 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

8410 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

8412 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8413 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8414 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8415 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8416 
	`vm≠_èbÀ_ª£t_pù
();

8417 
	`debug_¥ötf
("changeÅo FSM_STUDENT_PANORAMA state\n");

8420 if(
ªt
 =
FSM_BOARD_CLOSEUP
){

8421 
size_t
 
size
;

8422 
t_cmd
 
outmsg
;

8423 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8424 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_BOARD_CLOSEUP
);

8425 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

8426 
	`add_©å_öt
(&
outmsg
, "PIP", 0);

8428 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8429 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8430 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8431 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8432 
	`vm≠_èbÀ_ª£t_pù
();

8433 
	`debug_¥ötf
("changeÅo FSM_BOARD_CLOSEUP state\n");

8436 if(
ªt
 =
FSM_VGA_PIP_TEACHER_CLOSEUP
){

8437 
size_t
 
size
;

8438 
t_cmd
 
outmsg
;

8439 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8441 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
VIDEO_FUNCTION_VGA
);

8442 
	`add_©å_öt
(&
outmsg
, "PIP", 1);

8444 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8445 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8446 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8447 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8448 
	`vm≠_èbÀ_£t_pù_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

8449 
	`debug_¥ötf
("changeÅo FSM_VGA_PIP_TEACHER_CLOSEUP state\n");

8452 if(
ªt
 =
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
){

8453 
size_t
 
size
;

8454 
t_cmd
 
outmsg
;

8455 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8456 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_TEACHER_CLOSEUP
);

8457 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

8458 
	`add_©å_öt
(&
outmsg
, "PIP", 1);

8460 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8461 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8462 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8463 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8464 
	`vm≠_èbÀ_£t_pù_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_CLOSEUP
);

8465 
	`debug_¥ötf
("changeÅo FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP state\n");

8468 if(
ªt
 =
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
){

8469 
size_t
 
size
;

8470 
t_cmd
 
outmsg
;

8471 
	`fûl_cmd_hódî
(&
outmsg
, 
COMMAND_SWITCHCTRL
);

8472 
ˇp_id
 = 
	`vm≠_èbÀ_gë_ˇpid_by_fun˘i⁄
(
VIDEO_FUNCTION_BOARD_CLOSEUP
);

8473 
	`add_©å_öt
(&
outmsg
, "C≠tuªId", 
ˇp_id
);

8474 
	`add_©å_öt
(&
outmsg
, "PIP", 1);

8476 
	`ch¨2hex
(
outmsg
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

8477 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

8478 
Êags
 = 
FRAME_FLAG_NEWFRAME
 | 
FRAME_FLAG_FRAMEEND
;

8479 
	`d©afifo_¥odu˚r_d©a_add
(
thªad_∑øm
->
Swôch_¥odu˚r_fifo
, (*)
outmsg
.
fuŒbuf
, ()
size
, 
Êags
, 0);

8480 
	`vm≠_èbÀ_£t_pù_by_fun˘i⁄
(
VIDEO_FUNCTION_STUDENT_CLOSEUP
);

8481 
	`debug_¥ötf
("changeÅo FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP state\n");

8485 
	`u¶ìp
(1000);

8488 
	`debug_¥ötf
("thread camholder controlÉxit\n");

8489 
thªad_∑øm
->
thªad_ˇn˚Àd
 = 2;

8491 
	`±hªad_exô
(0);

8492 
	}
}

8494 
	$make_ªg09_öt
(
t_video_m≠
 *
vm≠_èbÀ
)

8496 
vÆue
 = 0;

8497 
i
;

8498 
i
 = 0; i<5; i++){

8499 if(!(
vm≠_èbÀ
[
i
].
ˇp_id
&0x10)){

8500 
vÆue
 |(1<<
i
);

8503  
vÆue
;

8504 
	}
}

8506 
	$maö
(
¨gc
, **
¨gv
)

8508 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

8510 
	`vm≠_èbÀ_öô
(
g_vm≠_fûe
);

8511 
	`vm≠_èbÀ_lﬂd
(
SYS_CONFIG_FILE_NAME
, 
g_vm≠_èbÀ
);

8512 
g_ªg_09
 = 
	`make_ªg09_öt
(
g_vm≠_èbÀ
);

8513 
	`debug_¥ötf
("Reg_09=%x\n", 
g_ªg_09
);

8515 
	`c⁄fig_öô
(
g_c⁄fig_fûe
);

8516 
	`c⁄fig_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
g_cfg
);

8518 
	`mem£t
(&
g_f‹w¨d_èbÀ
, 0, (
t_f‹w¨d_èbÀ
));

8519 
	`f‹w¨d_èbÀ_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
g_f‹w¨d_èbÀ
);

8521 
ªt
;

8523 
t_d©afifo
 
Cål_¥odu˚r_fifo
;

8524 
t_d©afifo
 
Lo›back_¥odu˚r_fifo
;

8526 
t_d©afifo
 
Vmux_°‹e_¥odu˚r_fifo
;

8527 
t_d©afifo
 
Vmux_live_¥odu˚r_fifo
;

8528 
t_d©afifo
 
VGA_¥odu˚r_fifo
;

8529 
t_d©afifo
 
Audio_¥odu˚r_fifo
;

8530 
t_d©afifo
 
V1_¥odu˚r_fifo
;

8531 
t_d©afifo
 
V2_¥odu˚r_fifo
;

8532 
t_d©afifo
 
V3_¥odu˚r_fifo
;

8533 
t_d©afifo
 
V4_¥odu˚r_fifo
;

8534 
t_d©afifo
 
V5_¥odu˚r_fifo
;

8535 
t_d©afifo
 
V6_¥odu˚r_fifo
;

8537 
t_d©afifo
 
ImgM_¥odu˚r_fifo
;

8538 
t_d©afifo
 
ImgV_¥odu˚r_fifo
;

8539 
t_d©afifo
 
Img1_¥odu˚r_fifo
;

8540 
t_d©afifo
 
Img2_¥odu˚r_fifo
;

8541 
t_d©afifo
 
Img3_¥odu˚r_fifo
;

8542 
t_d©afifo
 
Img4_¥odu˚r_fifo
;

8543 
t_d©afifo
 
Img5_¥odu˚r_fifo
;

8544 
t_d©afifo
 
Img6_¥odu˚r_fifo
;

8546 
t_d©afifo
 
Evít_¥odu˚r_fifo_A
;

8547 
t_d©afifo
 
Evít_¥odu˚r_fifo_B
;

8548 
t_d©afifo
 
Evít_¥odu˚r_fifo_C
;

8549 
t_d©afifo
 
Evít_¥odu˚r_fifo_D
;

8550 
t_d©afifo
 
Evít_¥odu˚r_fifo_A«lyze
;

8552 
t_d©afifo
 
UART_RX_¥odu˚r_fifo_A1
;

8553 
t_d©afifo
 
UART_RX_¥odu˚r_fifo_A2
;

8554 
t_d©afifo
 
UART_RX_¥odu˚r_fifo_B1
;

8555 
t_d©afifo
 
UART_RX_¥odu˚r_fifo_B2
;

8556 
t_d©afifo
 
UART_RX_¥odu˚r_fifo_C1
;

8557 
t_d©afifo
 
UART_RX_¥odu˚r_fifo_C2
;

8559 
t_d©afifo
 
UART_TX_¥odu˚r_fifo_A
;

8560 
t_d©afifo
 
UART_TX_¥odu˚r_fifo_B
;

8561 
t_d©afifo
 
UART_TX_¥odu˚r_fifo_C
;

8563 
t_d©afifo
 
Swôch_¥odu˚r_fifo
;

8565 
t_d©afifo
 
JPEG_¥odu˚r_fifo
;

8566 
t_d©afifo
 
PIP_¥odu˚r_fifo
;

8567 
t_d©afifo
 
Fûãªd_img_¥odu˚r_fifo
;

8570 
t_d©afifo
 
Cål_c⁄sumî_fifo_A
;

8571 
t_d©afifo
 
Cål_c⁄sumî_fifo_B
;

8572 
t_d©afifo
 
Cål_c⁄sumî_fifo_C
;

8573 
t_d©afifo
 
Cål_c⁄sumî_fifo_D
;

8574 
t_d©afifo
 
Cål_c⁄sumî_fifo_loˇlßve
;

8575 
t_d©afifo
 
Cål_c⁄sumî_fifo_SwôchTøckög
;

8577 
t_d©afifo
 
V_c⁄sumî_fifo
;

8578 
t_d©afifo
 
Img_c⁄sumî_fifo
;

8580 
t_d©afifo
 
In°ru˘‹_c⁄sumî_fifo
;

8582 
t_d©afifo
 
Fûãªd_img_c⁄sumî_fifo
;

8584 
t_d©afifo
 
UART_RX_c⁄sumî_fifo_A1
;

8585 
t_d©afifo
 
UART_RX_c⁄sumî_fifo_A2
;

8586 
t_d©afifo
 
UART_RX_c⁄sumî_fifo_B1
;

8587 
t_d©afifo
 
UART_RX_c⁄sumî_fifo_B2
;

8588 
t_d©afifo
 
UART_RX_c⁄sumî_fifo_C1
;

8589 
t_d©afifo
 
UART_RX_c⁄sumî_fifo_C2
;

8590 
t_d©afifo
 
UART_TX_c⁄sumî_fifo_A
;

8591 
t_d©afifo
 
UART_TX_c⁄sumî_fifo_B
;

8592 
t_d©afifo
 
UART_TX_c⁄sumî_fifo_C
;

8594 
t_d©afifo
 
Evít_c⁄sumî_fifo
;

8597 
	`d©afifo_öô
(&
Cål_¥odu˚r_fifo
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8598 
	`d©afifo_öô
(&
Lo›back_¥odu˚r_fifo
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8600 
	`d©afifo_öô
(&
Vmux_°‹e_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8601 
	`d©afifo_öô
(&
Vmux_live_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8602 
	`d©afifo_öô
(&
VGA_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8603 
	`d©afifo_öô
(&
Audio_¥odu˚r_fifo
, 
AINBUF_SIZE
, 
AINBUF_CNT
);

8604 
	`d©afifo_öô
(&
V1_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8605 
	`d©afifo_öô
(&
V2_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8606 
	`d©afifo_öô
(&
V3_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8607 
	`d©afifo_öô
(&
V4_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8608 
	`d©afifo_öô
(&
V5_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8609 
	`d©afifo_öô
(&
V6_¥odu˚r_fifo
, 
VINBUF_SIZE
, 
VINBUF_CNT
);

8611 
	`d©afifo_öô
(&
ImgM_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8612 
	`d©afifo_öô
(&
ImgV_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8613 
	`d©afifo_öô
(&
Img1_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8614 
	`d©afifo_öô
(&
Img2_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8615 
	`d©afifo_öô
(&
Img3_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8616 
	`d©afifo_öô
(&
Img4_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8617 
	`d©afifo_öô
(&
Img5_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8618 
	`d©afifo_öô
(&
Img6_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8620 
	`d©afifo_öô
(&
Evít_¥odu˚r_fifo_A
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8621 
	`d©afifo_öô
(&
Evít_¥odu˚r_fifo_B
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8622 
	`d©afifo_öô
(&
Evít_¥odu˚r_fifo_C
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8623 
	`d©afifo_öô
(&
Evít_¥odu˚r_fifo_D
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8624 
	`d©afifo_öô
(&
Evít_¥odu˚r_fifo_A«lyze
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8626 
	`d©afifo_öô
(&
UART_TX_¥odu˚r_fifo_A
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8627 
	`d©afifo_öô
(&
UART_TX_¥odu˚r_fifo_B
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8628 
	`d©afifo_öô
(&
UART_TX_¥odu˚r_fifo_C
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8631 
	`d©afifo_öô
(&
UART_RX_¥odu˚r_fifo_A1
, 
BYPBUF_SIZE
, 
BYPBUF_CNT
);

8632 
	`d©afifo_öô
(&
UART_RX_¥odu˚r_fifo_A2
, 
BYPBUF_SIZE
, 
BYPBUF_CNT
);

8633 
	`d©afifo_öô
(&
UART_RX_¥odu˚r_fifo_B1
, 
BYPBUF_SIZE
, 
BYPBUF_CNT
);

8634 
	`d©afifo_öô
(&
UART_RX_¥odu˚r_fifo_B2
, 
BYPBUF_SIZE
, 
BYPBUF_CNT
);

8635 
	`d©afifo_öô
(&
UART_RX_¥odu˚r_fifo_C1
, 
BYPBUF_SIZE
, 
BYPBUF_CNT
);

8636 
	`d©afifo_öô
(&
UART_RX_¥odu˚r_fifo_C2
, 
BYPBUF_SIZE
, 
BYPBUF_CNT
);

8638 
	`d©afifo_öô
(&
Swôch_¥odu˚r_fifo
, 
EINBUF_SIZE
, 
EINBUF_CNT
);

8640 
	`d©afifo_öô
(&
JPEG_¥odu˚r_fifo
,
EINBUF_SIZE
, 64*
EINBUF_CNT
);

8641 
	`d©afifo_öô
(&
PIP_¥odu˚r_fifo
, 
EINBUF_SIZE
, 64*
EINBUF_CNT
);

8642 
	`d©afifo_öô
(&
Fûãªd_img_¥odu˚r_fifo
, 
IMGBUF_SIZE
, 
IMGBUF_CNT
);

8644 
	`d©afifo_öô
(&
Cål_c⁄sumî_fifo_A
, 0, 64*
EINBUF_CNT
);

8645 
	`d©afifo_c⁄√˘
(&
Cål_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_A
);

8646 
	`d©afifo_c⁄√˘
(&
Swôch_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_A
);

8647 
	`d©afifo_c⁄√˘
(&
PIP_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_A
);

8649 
	`d©afifo_öô
(&
Cål_c⁄sumî_fifo_B
, 0, 
EINBUF_CNT
);

8650 
	`d©afifo_c⁄√˘
(&
Cål_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_B
);

8652 
	`d©afifo_öô
(&
Cål_c⁄sumî_fifo_C
, 0, 
EINBUF_CNT
);

8653 
	`d©afifo_c⁄√˘
(&
Cål_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_C
);

8655 
	`d©afifo_öô
(&
Cål_c⁄sumî_fifo_D
, 0, 
EINBUF_CNT
);

8656 
	`d©afifo_c⁄√˘
(&
Cål_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_D
);

8658 
	`d©afifo_öô
(&
Cål_c⁄sumî_fifo_loˇlßve
, 0, 
EINBUF_CNT
);

8659 
	`d©afifo_c⁄√˘
(&
Cål_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_loˇlßve
);

8661 
	`d©afifo_öô
(&
Cål_c⁄sumî_fifo_SwôchTøckög
, 0, 
EINBUF_CNT
);

8662 
	`d©afifo_c⁄√˘
(&
Cål_¥odu˚r_fifo
, &
Cål_c⁄sumî_fifo_SwôchTøckög
);

8664 
	`d©afifo_öô
(&
V_c⁄sumî_fifo
, 0, 8*
VINBUF_CNT
);

8665 
	`d©afifo_c⁄√˘
(&
Vmux_°‹e_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8666 
	`d©afifo_c⁄√˘
(&
Vmux_live_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8667 
	`d©afifo_c⁄√˘
(&
VGA_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8668 
	`d©afifo_c⁄√˘
(&
Audio_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8669 
	`d©afifo_c⁄√˘
(&
V1_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8670 
	`d©afifo_c⁄√˘
(&
V2_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8671 
	`d©afifo_c⁄√˘
(&
V3_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8672 
	`d©afifo_c⁄√˘
(&
V4_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8673 
	`d©afifo_c⁄√˘
(&
V5_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8674 
	`d©afifo_c⁄√˘
(&
V6_¥odu˚r_fifo
, &
V_c⁄sumî_fifo
);

8676 
	`d©afifo_öô
(&
Img_c⁄sumî_fifo
, 0, 8*
IMGBUF_CNT
);

8677 
	`d©afifo_c⁄√˘
(&
ImgM_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8678 
	`d©afifo_c⁄√˘
(&
ImgV_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8679 
	`d©afifo_c⁄√˘
(&
Img1_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8680 
	`d©afifo_c⁄√˘
(&
Img2_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8681 
	`d©afifo_c⁄√˘
(&
Img3_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8682 
	`d©afifo_c⁄√˘
(&
Img4_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8683 
	`d©afifo_c⁄√˘
(&
Img5_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8684 
	`d©afifo_c⁄√˘
(&
Img6_¥odu˚r_fifo
, &
Img_c⁄sumî_fifo
);

8686 
	`d©afifo_öô
(&
In°ru˘‹_c⁄sumî_fifo
, 0, 64*
EINBUF_CNT
);

8687 
	`d©afifo_c⁄√˘
(&
JPEG_¥odu˚r_fifo
, &
In°ru˘‹_c⁄sumî_fifo
);

8688 
	`d©afifo_c⁄√˘
(&
Lo›back_¥odu˚r_fifo
, &
In°ru˘‹_c⁄sumî_fifo
);

8690 
	`d©afifo_öô
(&
Fûãªd_img_c⁄sumî_fifo
, 0, 
IMGBUF_CNT
);

8691 
	`d©afifo_c⁄√˘
(&
Fûãªd_img_¥odu˚r_fifo
, &
Fûãªd_img_c⁄sumî_fifo
);

8693 
	`d©afifo_öô
(&
UART_RX_c⁄sumî_fifo_A1
, 0, 
BYPBUF_CNT
);

8694 
	`d©afifo_c⁄√˘
(&
UART_RX_¥odu˚r_fifo_A1
, &
UART_RX_c⁄sumî_fifo_A1
);

8695 
	`d©afifo_öô
(&
UART_RX_c⁄sumî_fifo_A2
, 0, 
BYPBUF_CNT
);

8696 
	`d©afifo_c⁄√˘
(&
UART_RX_¥odu˚r_fifo_A2
, &
UART_RX_c⁄sumî_fifo_A2
);

8697 
	`d©afifo_öô
(&
UART_RX_c⁄sumî_fifo_B1
, 0, 
BYPBUF_CNT
);

8698 
	`d©afifo_c⁄√˘
(&
UART_RX_¥odu˚r_fifo_B1
, &
UART_RX_c⁄sumî_fifo_B1
);

8699 
	`d©afifo_öô
(&
UART_RX_c⁄sumî_fifo_B2
, 0, 
BYPBUF_CNT
);

8700 
	`d©afifo_c⁄√˘
(&
UART_RX_¥odu˚r_fifo_B2
, &
UART_RX_c⁄sumî_fifo_B2
);

8701 
	`d©afifo_öô
(&
UART_RX_c⁄sumî_fifo_C1
, 0, 
BYPBUF_CNT
);

8702 
	`d©afifo_c⁄√˘
(&
UART_RX_¥odu˚r_fifo_C1
, &
UART_RX_c⁄sumî_fifo_C1
);

8703 
	`d©afifo_öô
(&
UART_RX_c⁄sumî_fifo_C2
, 0, 
BYPBUF_CNT
);

8704 
	`d©afifo_c⁄√˘
(&
UART_RX_¥odu˚r_fifo_C2
, &
UART_RX_c⁄sumî_fifo_C2
);

8706 
	`d©afifo_öô
(&
UART_TX_c⁄sumî_fifo_A
, 0, 
EINBUF_CNT
);

8707 
	`d©afifo_c⁄√˘
(&
UART_TX_¥odu˚r_fifo_A
, &
UART_TX_c⁄sumî_fifo_A
);

8708 
	`d©afifo_öô
(&
UART_TX_c⁄sumî_fifo_B
, 0, 
EINBUF_CNT
);

8709 
	`d©afifo_c⁄√˘
(&
UART_TX_¥odu˚r_fifo_B
, &
UART_TX_c⁄sumî_fifo_B
);

8710 
	`d©afifo_öô
(&
UART_TX_c⁄sumî_fifo_C
, 0, 
EINBUF_CNT
);

8711 
	`d©afifo_c⁄√˘
(&
UART_TX_¥odu˚r_fifo_C
, &
UART_TX_c⁄sumî_fifo_C
);

8713 
	`d©afifo_öô
(&
Evít_c⁄sumî_fifo
, 0, 
EINBUF_CNT
);

8714 
	`d©afifo_c⁄√˘
(&
Evít_¥odu˚r_fifo_A
, &
Evít_c⁄sumî_fifo
);

8715 
	`d©afifo_c⁄√˘
(&
Evít_¥odu˚r_fifo_B
, &
Evít_c⁄sumî_fifo
);

8716 
	`d©afifo_c⁄√˘
(&
Evít_¥odu˚r_fifo_C
, &
Evít_c⁄sumî_fifo
);

8717 
	`d©afifo_c⁄√˘
(&
Evít_¥odu˚r_fifo_D
, &
Evít_c⁄sumî_fifo
);

8718 
	`d©afifo_c⁄√˘
(&
Evít_¥odu˚r_fifo_A«lyze
, &
Evít_c⁄sumî_fifo
);

8720 
t_ö°ru˘‹_thªad_∑øm
 
ö°ru˘‹_thªad_∑øm
;

8721 
t_c‹eA_thªad_∑øm
 
c‹eA_thªad_∑øm
;

8722 
t_c‹eBC_thªad_∑øm
 
c‹eB_thªad_∑øm
;

8723 
t_c‹eBC_thªad_∑øm
 
c‹eC_thªad_∑øm
;

8724 
t_c‹eD_thªad_∑øm
 
c‹eD_thªad_∑øm
;

8725 
t_loˇlßve_thªad_∑øm
 
loˇlßve_thªad_∑øm
;

8726 
t_SwôchTøckög_thªad_∑øm
 
SwôchTøckög_thªad_∑øm
;

8727 
t_videﬂ«lyze_thªad_∑øm
 
videﬂ«lyze_thªad_∑øm
;

8728 
t_img_thªad_∑øm
 
img_thªad_∑øm
;

8730 
±hªad_t
 
ö°ru˘‹li°í_thªad_id
;

8731 
±hªad_t
 
loˇlßve_thªad_id
;

8732 
±hªad_t
 
SwôchTøckög_thªad_id
;

8733 
±hªad_t
 
videﬂ«lyze_thªad_id
;

8734 
±hªad_t
 
img_thªad_id
;

8735 
±hªad_t
 
c‹eA_thªad_id
, 
c‹eB_thªad_id
, 
c‹eC_thªad_id
, 
c‹eD_thªad_id
;

8737 
c‹eA_thªad_∑øm
.
Audio_¥odu˚r_fifo
 = &Audio_producer_fifo;

8738 
c‹eA_thªad_∑øm
.
VGA_¥odu˚r_fifo
 = &VGA_producer_fifo;

8739 
c‹eA_thªad_∑øm
.
Vlive_¥odu˚r_fifo
 = &
Vmux_live_¥odu˚r_fifo
;

8740 
c‹eA_thªad_∑øm
.
V°‹e_¥odu˚r_fifo
 = &
Vmux_°‹e_¥odu˚r_fifo
;

8741 
c‹eA_thªad_∑øm
.
ImgM_¥odu˚r_fifo
 = &ImgM_producer_fifo;

8742 
c‹eA_thªad_∑øm
.
ImgV_¥odu˚r_fifo
 = &ImgV_producer_fifo;

8743 
c‹eA_thªad_∑øm
.
Evít_¥odu˚r_fifo
 = &
Evít_¥odu˚r_fifo_A
;

8744 
c‹eA_thªad_∑øm
.
UART_RX_¥odu˚r_fifo_1
 = &
UART_RX_¥odu˚r_fifo_A1
;

8745 
c‹eA_thªad_∑øm
.
UART_RX_¥odu˚r_fifo_2
 = &
UART_RX_¥odu˚r_fifo_A2
;

8746 
c‹eA_thªad_∑øm
.
UART_TX_c⁄sumî_fifo
 = &
UART_TX_c⁄sumî_fifo_A
;

8747 
c‹eA_thªad_∑øm
.
Cål_c⁄sumî_fifo
 = &
Cål_c⁄sumî_fifo_A
;

8748 
c‹eA_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8750 
ªt
 = 
	`±hªad_¸óã
(&
c‹eA_thªad_id
, 
NULL
, 
thªad_c‹eA
, (*)&
c‹eA_thªad_∑øm
);

8751 if(
ªt
<0){

8752 
	`debug_¥ötf
("createÅhread_coreA failed\n");

8753 
	`exô
(0);

8756 
c‹eB_thªad_∑øm
.
V1_¥odu˚r_fifo
 = &V1_producer_fifo;

8757 
c‹eB_thªad_∑øm
.
V2_¥odu˚r_fifo
 = &V2_producer_fifo;

8758 
c‹eB_thªad_∑øm
.
Img1_¥odu˚r_fifo
 = &Img1_producer_fifo;

8759 
c‹eB_thªad_∑øm
.
Img2_¥odu˚r_fifo
 = &Img2_producer_fifo;

8760 
c‹eB_thªad_∑øm
.
Evít_¥odu˚r_fifo
 = &
Evít_¥odu˚r_fifo_B
;

8761 
c‹eB_thªad_∑øm
.
UART_RX_¥odu˚r_fifo_1
 = &
UART_RX_¥odu˚r_fifo_B1
;

8762 
c‹eB_thªad_∑øm
.
UART_RX_¥odu˚r_fifo_2
 = &
UART_RX_¥odu˚r_fifo_B2
;

8763 
c‹eB_thªad_∑øm
.
UART_TX_c⁄sumî_fifo
 = &
UART_TX_c⁄sumî_fifo_B
;

8764 
c‹eB_thªad_∑øm
.
Cål_c⁄sumî_fifo
 = &
Cål_c⁄sumî_fifo_B
;

8765 
c‹eB_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8767 
ªt
 = 
	`±hªad_¸óã
(&
c‹eB_thªad_id
, 
NULL
, 
thªad_c‹eB
, (*)&
c‹eB_thªad_∑øm
);

8768 if(
ªt
<0){

8769 
	`debug_¥ötf
("createÅhread_coreB failed\n");

8770 
	`exô
(0);

8773 
c‹eC_thªad_∑øm
.
V1_¥odu˚r_fifo
 = &
V3_¥odu˚r_fifo
;

8774 
c‹eC_thªad_∑øm
.
V2_¥odu˚r_fifo
 = &
V4_¥odu˚r_fifo
;

8775 
c‹eC_thªad_∑øm
.
Img1_¥odu˚r_fifo
 = &
Img3_¥odu˚r_fifo
;

8776 
c‹eC_thªad_∑øm
.
Img2_¥odu˚r_fifo
 = &
Img4_¥odu˚r_fifo
;

8777 
c‹eC_thªad_∑øm
.
Evít_¥odu˚r_fifo
 = &
Evít_¥odu˚r_fifo_C
;

8778 
c‹eC_thªad_∑øm
.
UART_RX_¥odu˚r_fifo_1
 = &
UART_RX_¥odu˚r_fifo_C1
;

8779 
c‹eC_thªad_∑øm
.
UART_RX_¥odu˚r_fifo_2
 = &
UART_RX_¥odu˚r_fifo_C2
;

8780 
c‹eC_thªad_∑øm
.
UART_TX_c⁄sumî_fifo
 = &
UART_TX_c⁄sumî_fifo_C
;

8781 
c‹eC_thªad_∑øm
.
Cål_c⁄sumî_fifo
 = &
Cål_c⁄sumî_fifo_C
;

8782 
c‹eC_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8784 
ªt
 = 
	`±hªad_¸óã
(&
c‹eC_thªad_id
, 
NULL
, 
thªad_c‹eC
, (*)&
c‹eC_thªad_∑øm
);

8785 if(
ªt
<0){

8786 
	`debug_¥ötf
("createÅhread_coreC failed\n");

8787 
	`exô
(0);

8790 
c‹eD_thªad_∑øm
.
V1_¥odu˚r_fifo
 = &
V5_¥odu˚r_fifo
;

8791 
c‹eD_thªad_∑øm
.
V2_¥odu˚r_fifo
 = &
V6_¥odu˚r_fifo
;

8792 
c‹eD_thªad_∑øm
.
Img1_¥odu˚r_fifo
 = &
Img5_¥odu˚r_fifo
;

8793 
c‹eD_thªad_∑øm
.
Img2_¥odu˚r_fifo
 = &
Img6_¥odu˚r_fifo
;

8794 
c‹eD_thªad_∑øm
.
Evít_¥odu˚r_fifo
 = &
Evít_¥odu˚r_fifo_D
;

8795 
c‹eD_thªad_∑øm
.
Cål_c⁄sumî_fifo
 = &
Cål_c⁄sumî_fifo_D
;

8796 
c‹eD_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8798 
ªt
 = 
	`±hªad_¸óã
(&
c‹eD_thªad_id
, 
NULL
, 
thªad_c‹eD
, (*)&
c‹eD_thªad_∑øm
);

8799 if(
ªt
<0){

8800 
	`debug_¥ötf
("createÅhread_coreD failed\n");

8801 
	`exô
(0);

8804 
loˇlßve_thªad_∑øm
.
Cål_c⁄sumî_fifo
 = &
Cål_c⁄sumî_fifo_loˇlßve
;

8805 
loˇlßve_thªad_∑øm
.
av_c⁄sumî_fifo
 = &
V_c⁄sumî_fifo
;

8806 
loˇlßve_thªad_∑øm
.
Vmux_°‹e
 = &
Vmux_°‹e_¥odu˚r_fifo
;

8807 
loˇlßve_thªad_∑øm
.
Vmux_live
 = &
Vmux_live_¥odu˚r_fifo
;

8808 
loˇlßve_thªad_∑øm
.
VGA
 = &
VGA_¥odu˚r_fifo
;

8809 
loˇlßve_thªad_∑øm
.
audio
 = &
Audio_¥odu˚r_fifo
;

8810 
loˇlßve_thªad_∑øm
.
V1
 = &
V1_¥odu˚r_fifo
;

8811 
loˇlßve_thªad_∑øm
.
V2
 = &
V2_¥odu˚r_fifo
;

8812 
loˇlßve_thªad_∑øm
.
V3
 = &
V3_¥odu˚r_fifo
;

8813 
loˇlßve_thªad_∑øm
.
V4
 = &
V4_¥odu˚r_fifo
;

8814 
loˇlßve_thªad_∑øm
.
V5
 = &
V5_¥odu˚r_fifo
;

8815 
loˇlßve_thªad_∑øm
.
V6
 = &
V6_¥odu˚r_fifo
;

8816 
loˇlßve_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8817 
loˇlßve_thªad_∑øm
.
sock
 = -1;

8820 
ªt
 = 
	`±hªad_¸óã
(&
loˇlßve_thªad_id
, 
NULL
, 
thªad_loˇlßve
, (*)&
loˇlßve_thªad_∑øm
);

8821 if(
ªt
<0){

8822 
	`debug_¥ötf
("createÅhread_localsave failed\n");

8823 
	`exô
(0);

8826 
SwôchTøckög_thªad_∑øm
.
Swôch_¥odu˚r_fifo
 = &Switch_producer_fifo;

8827 
SwôchTøckög_thªad_∑øm
.
TX_¥odu˚r_fifo_A
 = &
UART_TX_¥odu˚r_fifo_A
;

8828 
SwôchTøckög_thªad_∑øm
.
TX_¥odu˚r_fifo_B
 = &
UART_TX_¥odu˚r_fifo_B
;

8829 
SwôchTøckög_thªad_∑øm
.
TX_¥odu˚r_fifo_C
 = &
UART_TX_¥odu˚r_fifo_C
;

8830 
SwôchTøckög_thªad_∑øm
.
RX_c⁄sumî_fifo_A1
 = &
UART_RX_c⁄sumî_fifo_A1
;

8831 
SwôchTøckög_thªad_∑øm
.
RX_c⁄sumî_fifo_A2
 = &
UART_RX_c⁄sumî_fifo_A2
;

8832 
SwôchTøckög_thªad_∑øm
.
RX_c⁄sumî_fifo_B1
 = &
UART_RX_c⁄sumî_fifo_B1
;

8833 
SwôchTøckög_thªad_∑øm
.
RX_c⁄sumî_fifo_B2
 = &
UART_RX_c⁄sumî_fifo_B2
;

8834 
SwôchTøckög_thªad_∑øm
.
RX_c⁄sumî_fifo_C1
 = &
UART_RX_c⁄sumî_fifo_C1
;

8835 
SwôchTøckög_thªad_∑øm
.
RX_c⁄sumî_fifo_C2
 = &
UART_RX_c⁄sumî_fifo_C2
;

8836 
SwôchTøckög_thªad_∑øm
.
Evít_c⁄sumî_fifo
 = &Event_consumer_fifo;

8837 
SwôchTøckög_thªad_∑øm
.
Cål_c⁄sumî_fifo
 = &
Cål_c⁄sumî_fifo_SwôchTøckög
;

8838 
SwôchTøckög_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8840 
ªt
 = 
	`±hªad_¸óã
(&
SwôchTøckög_thªad_id
, 
NULL
, 
thªad_SwôchTøckög
, (*)&
SwôchTøckög_thªad_∑øm
);

8841 if(
ªt
<0){

8842 
	`debug_¥ötf
("createÅhread_SwitchTracking failed\n");

8843 
	`exô
(0);

8846 
videﬂ«lyze_thªad_∑øm
.
¥odu˚r_fifo
 = &
Evít_¥odu˚r_fifo_A«lyze
;

8847 
videﬂ«lyze_thªad_∑øm
.
c⁄sumî_fifo
 = &
Fûãªd_img_c⁄sumî_fifo
;

8848 
videﬂ«lyze_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8850 
ªt
 = 
	`±hªad_¸óã
(&
videﬂ«lyze_thªad_id
, 
NULL
, 
thªad_™Æyze
, (*)&
videﬂ«lyze_thªad_∑øm
);

8851 if(
ªt
<0){

8852 
	`debug_¥ötf
("createÅhread_analyze failed\n");

8853 
	`exô
(0);

8856 
img_thªad_∑øm
.
JPEG_¥odu˚r_fifo
 = &JPEG_producer_fifo;

8857 
img_thªad_∑øm
.
PIP_¥odu˚r_fifo
 = &PIP_producer_fifo;

8858 
img_thªad_∑øm
.
fûãªd_img_¥odu˚r_fifo
 = &
Fûãªd_img_¥odu˚r_fifo
;

8859 
img_thªad_∑øm
.
img_c⁄sumî_fifo
 = &
Img_c⁄sumî_fifo
;

8860 
img_thªad_∑øm
.
imgM
 = &
ImgM_¥odu˚r_fifo
;

8861 
img_thªad_∑øm
.
imgV
 = &
ImgV_¥odu˚r_fifo
;

8862 
img_thªad_∑øm
.
img1
 = &
Img1_¥odu˚r_fifo
;

8863 
img_thªad_∑øm
.
img2
 = &
Img2_¥odu˚r_fifo
;

8864 
img_thªad_∑øm
.
img3
 = &
Img3_¥odu˚r_fifo
;

8865 
img_thªad_∑øm
.
img4
 = &
Img4_¥odu˚r_fifo
;

8866 
img_thªad_∑øm
.
img5
 = &
Img5_¥odu˚r_fifo
;

8867 
img_thªad_∑øm
.
img6
 = &
Img6_¥odu˚r_fifo
;

8868 
img_thªad_∑øm
.
thªad_ˇn˚Àd
 = 0;

8870 
ªt
 = 
	`±hªad_¸óã
(&
img_thªad_id
, 
NULL
, 
thªad_img
, (*)&
img_thªad_∑øm
);

8871 if(
ªt
<0){

8872 
	`debug_¥ötf
("createÅhread_img failed\n");

8873 
	`exô
(0);

8876 
	`¶ìp
(1);

8879 
ö°ru˘‹_thªad_∑øm
.
¥odu˚r_fifo
 = &
Cål_¥odu˚r_fifo
;

8880 
ö°ru˘‹_thªad_∑øm
.
c⁄sumî_fifo
 = &
In°ru˘‹_c⁄sumî_fifo
;

8881 
ö°ru˘‹_thªad_∑øm
.
c‹eA_thªad_∑øm
 = &coreA_thread_param;

8882 
ö°ru˘‹_thªad_∑øm
.
c‹eB_thªad_∑øm
 = &coreB_thread_param;

8883 
ö°ru˘‹_thªad_∑øm
.
c‹eC_thªad_∑øm
 = &coreC_thread_param;

8884 
ö°ru˘‹_thªad_∑øm
.
c‹eD_thªad_∑øm
 = &coreD_thread_param;

8885 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

8886 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
p‹t
 = 3000;

8887 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
thªad_ˇn˚Àd
 = 0;

8888 
ö°ru˘‹_thªad_∑øm
.
°©us
 = 
RECBC_IDLE
;

8891 
ªt
 = 
	`±hªad_¸óã
(&
ö°ru˘‹li°í_thªad_id
, 
NULL
, 
thªad_li°í
, (*)&
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
);

8892 if(
ªt
<0){

8893 
	`debug_¥ötf
("createÅhread_listen for instructor failed\n");

8894 
	`exô
(0);

8899 
fd_£t
 
fd§
;

8900 
timevÆ
 
tv
;

8901 
busy
;

8903 
busy
 = 0;

8906 if(
	`d©afifo_hód
(
ö°ru˘‹_thªad_∑øm
.
c⁄sumî_fifo
)){

8907 if(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
>=0){

8908 
ªt
=
	`£nd
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
(ö°ru˘‹_thªad_∑øm.
c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód(ö°ru˘‹_thªad_∑øm.c⁄sumî_fifo)->¨g.
Àn
, 0);

8909 if(
ªt
<0){

8910 
	`˛o£
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
);

8911 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

8914 
	`d©afifo_c⁄sumî_ªmove_hód
(
ö°ru˘‹_thªad_∑øm
.
c⁄sumî_fifo
);

8915 
busy
++;

8919 if(
	`d©afifo_hód
(
ö°ru˘‹_thªad_∑øm
.
c⁄sumî_fifo
Ë=
NULL
){

8924 if(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
>=0){

8925 
ªt
=
	`£nd
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, 
	`d©afifo_hód
(ö°ru˘‹_thªad_∑øm.
c⁄sumî_fifo
)->
¨g
.
d©a
, d©afifo_hód(ö°ru˘‹_thªad_∑øm.c⁄sumî_fifo)->¨g.
Àn
, 0);

8926 if(
ªt
<0){

8927 
	`˛o£
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
);

8928 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

8931 
	`d©afifo_c⁄sumî_ªmove_hód
(
ö°ru˘‹_thªad_∑øm
.
c⁄sumî_fifo
);

8938 if(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
>=0){

8939 
	`FD_ZERO
(&
fd§
);

8940 
	`FD_SET
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, &
fd§
);

8942 
maxfd
 = 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
;

8943 
tv
.
tv_£c
 = 0;

8944 
tv
.
tv_u£c
 = 0;

8945 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

8948 if(
ªt
<0){

8949 
	`debug_¥ötf
("instructor selectÉrror\n");

8950 
	`˛o£
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
);

8951 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

8955 if(
ªt
==0){

8960 if(
	`FD_ISSET
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

8961 
MsgGŸ
;

8963 
buf
[
CMD_BUFSIZE
];

8965 
MsgGŸ
 = 
	`gëMsg
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, 
buf
);

8968 if(
MsgGŸ
<0){

8969 
	`debug_¥ötf
("instructor disconnectedÅo server\n");

8970 
	`˛o£
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
);

8971 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

8976 if(
MsgGŸ
 == 0){

8978 
	`u¶ìp
(1000);

8981 if(
MsgGŸ
>0){

8982 
	`debug_¥ötf
("Message got from server\n");

8983 
	`MsgDump
(
buf
);

8985 
	`In°ru˘‹MsgH™dÀ
(&
ö°ru˘‹_thªad_∑øm
, 
buf
);

8986 
busy
++;

8993 if(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
>=0){

8994 
	`FD_ZERO
(&
fd§
);

8995 
	`FD_SET
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, &
fd§
);

8997 
maxfd
 = 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
;

8998 
tv
.
tv_£c
 = 0;

8999 
tv
.
tv_u£c
 = 1000;

9000 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, &
tv
);

9003 if(
ªt
<0){

9004 
	`debug_¥ötf
("selectÉrror\n");

9005 
	`˛o£
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
);

9006 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

9010 if(
ªt
==0){

9015 if(
	`FD_ISSET
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, &
fd§
)){

9016 
MsgGŸ
;

9018 
buf
[
CMD_BUFSIZE
];

9020 
MsgGŸ
 = 
	`gëMsg
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
, 
buf
);

9023 if(
MsgGŸ
<0){

9024 
	`debug_¥ötf
("disconnectedÅo server\n");

9025 
	`˛o£
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
);

9026 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

9031 if(
MsgGŸ
 == 0){

9033 
	`u¶ìp
(1000);

9036 if(
MsgGŸ
>0){

9037 
	`debug_¥ötf
("Message got from server\n");

9038 
	`MsgDump
(
buf
);

9040 
	`In°ru˘‹MsgH™dÀ
(&
ö°ru˘‹_thªad_∑øm
, 
buf
);

9045 
	`u¶ìp
(1000);

9052 if(!
busy
){

9053 
	`u¶ìp
(1000);

9057 
	`u¶ìp
(1000);

9061 !
	`thªad_li°í_exôed
(&
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
)){

9062 
	`thªad_li°í_askexô
(&
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
);

9065 if(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
>=0){

9066 
	`˛o£
(
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
);

9067 
ö°ru˘‹_thªad_∑øm
.
thªad_li°í_∑øm
.
sockë
 = -1;

9070 
	}
}

	@recbc_srv.h

8 #i‚de‡
RECBC_SRV_H_


9 
	#RECBC_SRV_H_


	)

11 
	~"d©afifo.h
"

12 
	#MAXDEVNUM
 100

	)

14 
	ee_VideoSrc


16 
	mVIDEO_SRC_NONE
 = -1,

17 
	mVIDEO_SRC_MUX
,

18 
	mVIDEO_SRC_VGA
,

19 
	mVIDEO_SRC_V1
,

20 
	mVIDEO_SRC_V2
,

21 
	mVIDEO_SRC_V3
,

22 
	mVIDEO_SRC_V4
,

23 
	mVIDEO_SRC_V5
,

24 
	mVIDEO_SRC_VAUX1
,

25 
	mVIDEO_SRC_VAUX2
,

28 
	ee_C≠tuªIf


30 
	mCAPTURE_IF_NONE
 = -1,

31 
	mCAPTURE_IF_VGA
,

32 
	mCAPTURE_IF_HDSDI
,

33 
	mCAPTURE_IF_HDMI
,

34 
	mCAPTURE_IF_CVBS
,

37 
	ee_A«lyzögMode


39 
	mANALYZING_MODE_NONE
 = -1,

40 
	mANALYZING_MODE_VIDEO
,

41 
	mANALYZING_MODE_VGA
,

42 
	mANALYZING_MODE_AUX
,

44 
	ss_videoc⁄fig


46 
e_VideoSrc
 
	mv§c
;

47 
	mPª£¡
;

48 
	mC≠tuªId
;

49 
e_C≠tuªIf
 
	mˇpif
;

50 
	mC‹eId
;

51 
	mP‹tId
;

52 
e_A«lyzögMode
 
	m™Æymode
;

53 
	mU¨tId
;

54 
	msockfd
;

55 } 
	tt_videoc⁄fig
;

57 
	ss_idx_id_m≠


59 
	mBrdIdx
;

60 
	mBrdId
[13];

61 }
	tt_idx_id_m≠
;

63 
	ss_sock_id_m≠


65 
	msockë
;

66 
	mBrdId
[13];

67 }
	tt_sock_id_m≠
;

69 
	ss_dev_cfg


71 
	mvÆid
;

72 
t_sock_id_m≠
 
	mBrdTbl
[4];

73 }
	tt_dev_cfg
;

75 
	ss_hñlo_©å


77 
	mAârName
[8];

78 
	mAârVÆue
[64];

79 }
	tt_hñlo_©å
;

82 
	ss_hñlo_©ås


84 
	mNumofAâr
;

85 
t_hñlo_©å
 
	m©ås
[3];

86 }
	tt_hñlo_©ås
;

88 
	#CMD_BUFSIZE
 1536

	)

89 
	#VERSION_SIZE
 2

	)

90 
	#CMD_SIZE
 4

	)

91 
	#DATA_LEN_SIZE
 4

	)

92 
	#ARG_NAME_LEN_SIZE
 1

	)

93 
	#ARG_LEN_SIZE
 4

	)

94 
	#PACKET_HEADER_SIZE
 (
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
)

	)

95 
	#COMMAND_VERSION
 "01"

	)

96 
	sw_cmd


98 
	mfuŒbuf
[
CMD_BUFSIZE
];

99 *
	mvîsi⁄
;

100 *
	mcmd
;

101 *
	md©a_Àn
;

102 *
	md©a
;

104 *
	mcmd_p
;

105 }
	tt_cmd
;

107 
	ss_li°í_thªad_∑øm


109 
	msockë
;

110 
	mp‹t
;

111 
	mthªad_ˇn˚Àd
;

112 
	m£ndîr
;

113 
	mªcvîr
;

114 }
	tt_li°í_thªad_∑øm
;

116 
	ss_loˇlßve_thªad_∑øm


118 
	mthªad_ˇn˚Àd
;

119 
t_d©afifo
 *
	mav_c⁄sumî_fifo
;

120 
t_d©afifo
 *
	mCål_c⁄sumî_fifo
;

121 
t_d©afifo
 *
	maudio
;

122 
t_d©afifo
 *
	mVmux_°‹e
;

123 
t_d©afifo
 *
	mVmux_live
;

124 
t_d©afifo
 *
	mVGA
;

125 
t_d©afifo
 *
	mV1
;

126 
t_d©afifo
 *
	mV2
;

127 
t_d©afifo
 *
	mV3
;

128 
t_d©afifo
 *
	mV4
;

129 
t_d©afifo
 *
	mV5
;

130 
t_d©afifo
 *
	mV6
;

132 
	mV°‹e_°©us
;

133 
	mVlive_°©us
;

134 
	mVGA_°©us
;

135 
	mV1_°©us
;

136 
	mV2_°©us
;

137 
	mV3_°©us
;

138 
	mV4_°©us
;

139 
	mV5_°©us
;

140 
	mV6_°©us
;

141 
	msock
;

143 }
	tt_loˇlßve_thªad_∑øm
;

145 
	ss_SwôchTøckög_thªad_∑øm


147 
	mthªad_ˇn˚Àd
;

148 
t_d©afifo
 *
	mTX_¥odu˚r_fifo_A
;

149 
t_d©afifo
 *
	mTX_¥odu˚r_fifo_B
;

150 
t_d©afifo
 *
	mTX_¥odu˚r_fifo_C
;

151 
t_d©afifo
 *
	mSwôch_¥odu˚r_fifo
;

152 
t_d©afifo
 *
	mRX_c⁄sumî_fifo_A1
;

153 
t_d©afifo
 *
	mRX_c⁄sumî_fifo_A2
;

154 
t_d©afifo
 *
	mRX_c⁄sumî_fifo_B1
;

155 
t_d©afifo
 *
	mRX_c⁄sumî_fifo_B2
;

156 
t_d©afifo
 *
	mRX_c⁄sumî_fifo_C1
;

157 
t_d©afifo
 *
	mRX_c⁄sumî_fifo_C2
;

158 
t_d©afifo
 *
	mEvít_c⁄sumî_fifo
;

159 
t_d©afifo
 *
	mCål_c⁄sumî_fifo
;

160 
	mãachî_°©us
;

161 
	m°udít_°©us
;

162 }
	tt_SwôchTøckög_thªad_∑øm
;

164 
	ss_videﬂ«lyze_thªad_∑øm


166 
	mthªad_ˇn˚Àd
;

167 
t_d©afifo
 *
	m¥odu˚r_fifo
;

168 
t_d©afifo
 *
	mc⁄sumî_fifo
;

170 }
	tt_videﬂ«lyze_thªad_∑øm
;

172 
	ss_img_thªad_∑øm


174 
	mthªad_ˇn˚Àd
;

175 
t_d©afifo
 *
	mPIP_¥odu˚r_fifo
;

176 
t_d©afifo
 *
	mJPEG_¥odu˚r_fifo
;

177 
t_d©afifo
 *
	mfûãªd_img_¥odu˚r_fifo
;

178 
t_d©afifo
 *
	mimg_c⁄sumî_fifo
;

179 
t_d©afifo
 *
	mimgM
;

180 
t_d©afifo
 *
	mimgV
;

181 
t_d©afifo
 *
	mimg1
;

182 
t_d©afifo
 *
	mimg2
;

183 
t_d©afifo
 *
	mimg3
;

184 
t_d©afifo
 *
	mimg4
;

185 
t_d©afifo
 *
	mimg5
;

186 
t_d©afifo
 *
	mimg6
;

187 }
	tt_img_thªad_∑øm
;

189 
	ss_c‹eA_thªad_∑øm


191 
	mthªad_ˇn˚Àd
;

192 
t_d©afifo
 *
	mV°‹e_¥odu˚r_fifo
;

193 
t_d©afifo
 *
	mVlive_¥odu˚r_fifo
;

194 
t_d©afifo
 *
	mVGA_¥odu˚r_fifo
;

195 
t_d©afifo
 *
	mAudio_¥odu˚r_fifo
;

196 
t_d©afifo
 *
	mImgM_¥odu˚r_fifo
;

197 
t_d©afifo
 *
	mImgV_¥odu˚r_fifo
;

198 
t_d©afifo
 *
	mEvít_¥odu˚r_fifo
;

199 
t_d©afifo
 *
	mUART_RX_¥odu˚r_fifo_1
;

200 
t_d©afifo
 *
	mUART_RX_¥odu˚r_fifo_2
;

201 
t_d©afifo
 *
	mCål_c⁄sumî_fifo
;

202 
t_d©afifo
 *
	mUART_TX_c⁄sumî_fifo
;

203 
t_li°í_thªad_∑øm
 
	mthªad_li°í_∑øm
;

204 }
	tt_c‹eA_thªad_∑øm
;

206 
	ss_c‹eBC_thªad_∑øm


208 
	mthªad_ˇn˚Àd
;

209 
t_d©afifo
 *
	mV1_¥odu˚r_fifo
;

210 
t_d©afifo
 *
	mV2_¥odu˚r_fifo
;

211 
t_d©afifo
 *
	mImg1_¥odu˚r_fifo
;

212 
t_d©afifo
 *
	mImg2_¥odu˚r_fifo
;

213 
t_d©afifo
 *
	mEvít_¥odu˚r_fifo
;

214 
t_d©afifo
 *
	mUART_RX_¥odu˚r_fifo_1
;

215 
t_d©afifo
 *
	mUART_RX_¥odu˚r_fifo_2
;

216 
t_d©afifo
 *
	mCål_c⁄sumî_fifo
;

217 
t_d©afifo
 *
	mUART_TX_c⁄sumî_fifo
;

218 
t_li°í_thªad_∑øm
 
	mthªad_li°í_∑øm
;

219 }
	tt_c‹eBC_thªad_∑øm
;

221 
	ss_c‹eD_thªad_∑øm


223 
	mthªad_ˇn˚Àd
;

224 
t_d©afifo
 *
	mV1_¥odu˚r_fifo
;

225 
t_d©afifo
 *
	mV2_¥odu˚r_fifo
;

226 
t_d©afifo
 *
	mImg1_¥odu˚r_fifo
;

227 
t_d©afifo
 *
	mImg2_¥odu˚r_fifo
;

228 
t_d©afifo
 *
	mEvít_¥odu˚r_fifo
;

229 
t_d©afifo
 *
	mCål_c⁄sumî_fifo
;

230 
t_li°í_thªad_∑øm
 
	mthªad_li°í_∑øm
;

231 }
	tt_c‹eD_thªad_∑øm
;

233 
	ss_ö°ru˘‹_åód_∑øm


235 
t_d©afifo
 *
	m¥odu˚r_fifo
;

236 
t_d©afifo
 *
	mc⁄sumî_fifo
;

237 
t_li°í_thªad_∑øm
 
	mthªad_li°í_∑øm
;

238 
t_c‹eA_thªad_∑øm
 *
	mc‹eA_thªad_∑øm
;

239 
t_c‹eBC_thªad_∑øm
 *
	mc‹eB_thªad_∑øm
;

240 
t_c‹eBC_thªad_∑øm
 *
	mc‹eC_thªad_∑øm
;

241 
t_c‹eD_thªad_∑øm
 *
	mc‹eD_thªad_∑øm
;

242 
	m°©us
;

243 }
	tt_ö°ru˘‹_thªad_∑øm
;

245 
	ss_Dëe˘Resu…


247 
	mdëe˘ed
;

248 
	mavg_t›
;

249 
	mavg_À·
;

250 
	mavg_bŸtom
;

251 
	mavg_right
;

252 
	mmax_t›
;

253 
	mmax_À·
;

254 
	mmax_bŸtom
;

255 
	mmax_right
;

256 }
	tt_Dëe˘Resu…
;

258 
	#VINBUF_SIZE
 1024*1024

	)

259 
	#VINBUF_CNT
 3

	)

261 
	#AINBUF_SIZE
 1024

	)

262 
	#AINBUF_CNT
 10

	)

264 
	#EINBUF_SIZE
 1536

	)

265 
	#EINBUF_CNT
 10

	)

267 
	#BYPBUF_SIZE
 8

	)

268 
	#BYPBUF_CNT
 200

	)

270 
	#IMGBUF_SIZE
 72*1024

	)

271 
	#IMGBUF_CNT
 3

	)

275 
	mFRMTYPE_VIDEO_IDR
,

276 
	mFRMTYPE_VIDEO_I
,

277 
	mFRMTYPE_VIDEO_P
,

278 
	mFRMTYPE_AUDIO


279 }
	te_‰ame_ty≥
;

281 
	ss_‰ame_öfo


283 
	m‰ame_ty≥
;

284 
	m‰ame_Àngth
;

285 
	m‰ame_num
;

286 
	m∑ckë_num
;

287 
	m‰ame_øã
;

288 
	mtime_°amp
;

289 
	mpkts_ö_‰ame
;

290 }
	tt_‰ame_öfo
;

292 
	#MAX_AVPKT_SIZE
 1024

	)

296 
	mLOCALSAVE_IDLE
 = 0,

297 
	mLOCALSAVE_START
,

298 
	mLOCALSAVE_WORKING
,

299 
	mLOCALSAVE_PAUSE
,

300 
	mLOCALSAVE_RESUME
,

301 
	mLOCALSAVE_STOP
,

302 }
	te_loˇlßve_°©us
;

306 
	mRECBC_IDLE
 = 0,

307 
	mRECBC_WORKING
,

308 }
	te_ªcbc_°©us
;

310 
	ss_mp4f‹m©


312 
	mfûíame
[256];

313 
	mÂs
[16];

314 
	mhas_audio
;

315 }
	tt_mp4f‹m©
;

319 
	mVIDEO_FUNCTION_VGA
 = 0,

320 
	mVIDEO_FUNCTION_TEACHER_CLOSEUP
,

321 
	mVIDEO_FUNCTION_STUDENT_CLOSEUP
,

322 
	mVIDEO_FUNCTION_TEACHER_PANORAMA
,

323 
	mVIDEO_FUNCTION_STUDENT_PANORAMA
,

324 
	mVIDEO_FUNCTION_BOARD_CLOSEUP
,

325 }
	te_video_fun˘i⁄
;

327 
	ss_video_m≠


329 
	mödex
;

330 
	mfun˘i⁄
;

332 
	mu¨t_ch™√l
;

333 
	mpù
;

334 
	mˇp_id
;

335 
	mˇm_víd‹
[32];

336 
	mˇm_modñ
[32];

337 }
	tt_video_m≠
;

339 
	ss_ªcbc_cfg


341 
	m‰ame_width
;

342 
	m‰ame_height
;

343 
	m‰ame_øã
;

344 
	mbôøã
;

345 
	mlive_bôøã
;

346 
	mIsResou˚Mode
;

347 
	mnum_of_C‹eBﬂrd
;

348 
	mIsAutoIn°u˘
;

349 
	mhasA
;

350 
	mhasB
;

351 
	mhasC
;

352 
	mhasD
;

353 
	mPﬁicyFûeName
[64];

354 
	mVGADuøti⁄
;

355 }
	tt_ªcbc_cfg
;

357 
	ss_¥e£t_pos


359 
	m∑n_pos
;

360 
	mtût_pos
;

361 
	mzoom_pos
;

362 }
	tt_¥e£t_pos
;

364 
	ss_ˇmîa_hﬁdî


366 
	mu¨t_ch™√l
;

367 
	mRx_buf
[16];

368 *
	mRx_buf_p
;

369 
	mR•Lí
;

370 
	mcomm™d_≥ndög
;

371 
	mP™Pos
;

372 
	mTûtPos
;

373 
	mZoomPos
;

374 
	mèrgë_P™Pos
;

375 
	mèrgë_TûtPos
;

376 
	mèrgë_ZoomPos
;

377 
	m∑n_mö
;

378 
	m∑n_max
;

379 
	mtût_mö
;

380 
	mtût_max
;

381 
	mzoom_mö
;

382 
	mzoom_max
;

383 
	m∑n•ìd_u£
;

384 
	mtût•ìd_u£
;

385 
	mvõw_™gÀ_mö
;

386 
	mvõw_™gÀ_max
;

387 
	m∑n_™gÀ_À·
;

388 
	m∑n_™gÀ_right
;

389 
	mtût_™gÀ_up
;

390 
	mtût_™gÀ_down
;

391 
timevÆ
 
	mtv
;

394 
t_¥e£t_pos
 
	m¥e£t
[16];

395 }
	tt_ˇmîa_hﬁdî
;

397 
	#CH_COMPLETION_PENDING
 1

	)

398 
	#CH_PTINQ_PENDING
 (1<<1)

	)

399 
	#CH_ZOOMINQ_PENDING
 (1<<2)

	)

400 
	#CH_ERROR
 (1<<31)

	)

402 
	#LINK_READY
 1

	)

403 
	#LINK_NOTREADY
 0

	)

407 
	mCOND_VGA_UNCHG
 = 0,

408 
	mCOND_VGA_CHG
,

409 
	mCOND_TEACHER_DETECTED_NONE
,

410 
	mCOND_TEACHER_DETECTED_ONE
,

411 
	mCOND_TEACHER_DETECTED_MULTIPLE
,

412 
	mCOND_STUDENT_STAND_NONE
,

413 
	mCOND_STUDENT_STAND_ONE
,

414 
	mCOND_STUDENT_STAND_MULTIPLE
,

415 
	mCOND_BOARD_NOTWRITE
,

416 
	mCOND_BOARD_WRITE
,

418 
	mCOND_COMBINATION_1
,

419 
	mCOND_COMBINATION_2
,

420 
	mCOND_COMBINATION_3
,

421 
	mCOND_COMBINATION_4
,

422 
	mCOND_COMBINATION_5
,

423 
	mCOND_COMBINATION_6
,

424 
	mCOND_COMBINATION_7
,

425 
	mCOND_COMBINATION_8
,

426 
	mCOND_COMBINATION_9
,

427 
	mCOND_COMBINATION_10
,

428 
	mCOND_COMBINATION_11
,

429 
	mCOND_COMBINATION_12
,

430 
	mCOND_COMBINATION_13
,

431 
	mCOND_COMBINATION_14
,

432 
	mCOND_COMBINATION_15
,

433 
	mCOND_COMBINATION_16
,

434 
	mCOND_COMBINATION_17
,

435 
	mCOND_COMBINATION_18
,

436 
	mCOND_COMBINATION_19
,

437 
	mCOND_COMBINATION_20
,

438 
	mCOND_COMBINATION_21
,

439 
	mCOND_COMBINATION_22
,

440 
	mCOND_COMBINATION_23
,

441 
	mCOND_COMBINATION_24
,

442 
	mCOND_COMBINATION_25
,

443 
	mCOND_COMBINATION_26
,

444 
	mCOND_COMBINATION_27
,

445 
	mCOND_COMBINATION_28
,

446 
	mCOND_COMBINATION_29
,

447 
	mCOND_COMBINATION_30
,

448 
	mCOND_COMBINATION_31
,

449 
	mCOND_COMBINATION_32
,

450 
	mCOND_COMBINATION_33
,

451 
	mCOND_COMBINATION_34
,

452 
	mCOND_COMBINATION_35
,

453 
	mCOND_COMBINATION_36
,

454 
	mCOND_MAX
,

455 }
	te_c⁄d_idx
;

457 
	#MAX_COND_NAME_LENGTH
 16

	)

458 
	#MAX_ELEMENT_NUM
 4

	)

459 
	ss_c⁄d_ôem


461 
	mvÆid
;

462 
	mc⁄d_idx
;

463 
	mvÆue
;

465 
	mc⁄d_ty≥
;

466 
	mnum_of_comböed_ñemít
;

467 
s_c⁄d_ôem
 *
	mñemít
[
MAX_ELEMENT_NUM
];

468 }
	tt_c⁄d_ôem
;

471 
	ss_åuth_èbÀ


473 
	môem_num
;

474 
t_c⁄d_ôem
 
	mc⁄d
[
COND_MAX
];

475 }
	tt_åuth_èbÀ
;

479 
	mFSM_NOTRANSITION
 = -1,

480 
	mFSM_VGA
,

481 
	mFSM_TEACHER_CLOSEUP
,

482 
	mFSM_STUDENT_CLOSEUP
,

483 
	mFSM_TEACHER_PANORAMA
,

484 
	mFSM_STUDENT_PANORAMA
,

485 
	mFSM_BOARD_CLOSEUP
,

486 
	mFSM_VGA_PIP_TEACHER_CLOSEUP
,

487 
	mFSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
,

488 
	mFSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
,

489 
	mFSM_STATE_MAX
,

490 }
	te_fsm_°©e
;

492 
	ss_å™sôi⁄_èbÀ


494 
	môem
[
FSM_STATE_MAX
][
COND_MAX
];

495 }
	tt_å™sôi⁄_èbÀ
;

497 
	ss_föôe_°©e_machöe


499 
	möôül_°©e
;

500 
	mcuºít_°©e
;

501 
t_åuth_èbÀ
 *
	måuth_èbÀ
;

502 
t_å™sôi⁄_èbÀ
 *
	må™sôi⁄_èbÀ
;

503 }
	tt_föôe_°©e_machöe
;

505 
	ss_VGA_ªsu…


507 
	mch™ged
;

508 }
	tt_VGA_ªsu…
;

510 
	ss_ˇmîa_geomëry


512 
	mx
;

513 
	my
;

514 
	mz
;

515 
	m™gÀ_h
;

516 
	m™gÀ_v
;

517 
	mvõw_™gÀ
;

518 }
	tt_ˇmîa_geomëry
;

520 
	ss_¨ó


522 
	mÀ·
;

523 
	m‰⁄t
;

524 
	mright
;

525 
	mª¨
;

526 }
	tt_¨ó
;

528 
	ss_loˇti⁄


530 
	mx
;

531 
	my
;

532 }
	tt_loˇti⁄
;

534 
	ss_aux_ˇmîa_∑øm


536 
	mèrgë_num
;

537 
	mmax_t›
;

538 
	mmax_À·
;

539 
	mmax_bŸtom
;

540 
	mmax_right
;

541 }
	tt_aux_ˇmîa_∑øm
;

543 
	ss_aux_ªsu…


545 
t_aux_ˇmîa_∑øm
 
	maux
[2];

546 
	m°udít_ö_°™dög
;

547 }
	tt_aux_ªsu…
;

549 
	ss_°udít_åackög_geomëry


551 
t_ˇmîa_geomëry
 
	mˇmîa_geomëry
[3];

552 
t_¨ó
 
	m°udít_¨ó
;

553 
t_loˇti⁄
 
	m°udít_loˇti⁄
;

554 
t_loˇti⁄
 
	mœ°_loˇti⁄
;

555 
	mèrgë_∑n_™gÀ
;

556 
	mèrgë_tût_™gÀ
;

557 
	mèrgë_võw_™gÀ
;

558 
	mdŸøckög
;

559 }
	tt_°udít_åackög_geomëry
;

561 
	ss_s¸ìn_geomëry


563 
	mhas_s¸ìn
;

564 
	mx_À·
;

565 
	mx_right
;

566 
	my
;

567 
	mˇmîa_öôül_™gÀ
;

568 }
	tt_s¸ìn_geomëry
;

570 
	ss_öã∫Æ_abbr_cmd


572 
	mcmd
[8];

573 
	m∑ø1
[2];

574 
	m∑ø2
[2];

575 
	m∑ø3
[2];

576 
	m∑ø4
[2];

577 
	mötvÆue
[4];

578 }
	tt_öã∫Æ_abbr_cmd
;

580 
	ss_f‹w¨d_èbÀ


582 
	mãachî•ecül
;

583 
	m°udít•ecül
;

584 
	mãachîfuŒ
;

585 
	m°udítfuŒ
;

586 
	mbœckbﬂrd
;

587 }
	tt_f‹w¨d_èbÀ
;

	@rt_generic.h

8 #i‚de‡
RT_GENERIC_H_


9 
	#RT_GENERIC_H_


	)

11 
	~<sys/time.h
>

12 
	~<time.h
>

13 
	~<°rög.h
>

14 
	~<°dlib.h
>

15 
	~<°döt.h
>

16 
	~<°dio.h
>

17 
	~<±hªad.h
>

18 
	~<î∫o.h
>

19 
	~<f˙é.h
>

20 
	~<uni°d.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<sys/sockë.h
>

23 
	~<√töë/ö.h
>

24 
	~<√töë/t˝.h
>

25 
	~<m©h.h
>

27 
	tu8
;

28 sig√d 
	ts8
;

29 
	tu16
;

30 sig√d 
	ts16
;

31 
	tu32
;

32 sig√d 
	ts32
;

33 
	tu64
;

34 sig√d 
	ts64
;

	@server_emulator.c

8 
	~<°dio.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<sys/sockë.h
>

11 
	~<√töë/ö.h
>

12 
	~<°rög.h
>

13 
	~<°dlib.h
>

14 
	~<uni°d.h
>

15 
	~<¨∑/öë.h
>

16 
	~<±hªad.h
>

18 
	~"ªcbc_§v.h
"

20 
	#debug_¥ötf
(
x
...Ë
	`¥ötf
(x)

	)

21 
	#COMMAND_SERVER
 "ffff"

	)

22 
	#COMMAND_HELLO
 "0001"

	)

24 
	#COMMAND_CONFIG
 "0006"

	)

25 
	#COMMAND_SWITCHCTRL
 "0008"

	)

26 
	#COMMAND_GETDATA
 "0010"

	)

27 
	#COMMAND_GETDATA_ACK
 "0011"

	)

28 
	#COMMAND_EVENT_VID
 "0021"

	)

29 
	#COMMAND_EVENT_VGA
 "0023"

	)

30 
	#COMMAND_EVENT_AUX
 "0025"

	)

31 
	#COMMAND_CAMHLD_BYPASS
 "0012"

	)

32 
	#COMMAND_BYP_RSP
 "0013"

	)

33 
	#COMMAND_EVENT_UCI
 "0027"

	)

34 
	#COMMAND_EVENT_JPEG
 "0029"

	)

35 
	#COMMAND_EVENT_PIP
 "0031"

	)

36 
	#COMMAND_INTERNAL
 "0000"

	)

37 
	$ch¨2hex
(*
§c
, *
hex
, 
Àn
)

39 if(
Àn
 > 8)

41 
	`debug_¥ötf
("theÜength of char isÅooÜarge\n");

44 
i
,
j
;

45 *
hex
 = 0;

46 
i
 = 0;ò< 
Àn
; i++)

48 
j
 = 
Àn
 - 
i
 - 1;

49 *
hex
 &(~(0x‡<< (
j
*4)));

50 if((
§c
[
i
]>='0') && (src[i]<='9'))

52 *
hex
 |(
§c
[
i
]-0x30Ë<< (
j
*4);

54 if((
§c
[
i
]>='a') && (src[i]<='z'))

56 *
hex
 |(
§c
[
i
]-0x57Ë<< (
j
*4);

58 if((
§c
[
i
]>='A') && (src[i]<='Z'))

60 *
hex
 |(
§c
[
i
]-0x37Ë<< (
j
*4);

65 
	}
}

67 
	$add_©å_ch¨
(
t_cmd
 *
cmd
, *
«me
, *
vÆue
)

69 
d©Æí
[
DATA_LEN_SIZE
+1];

70 
	`•rötf
(
cmd
->
cmd_p
, "%01x%04x%s%s", 
	`°æí
(
«me
), såÀn(
vÆue
),Çame, value);

72 
cmd
->
cmd_p
 +(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
	`°æí
(
«me
Ë+ såÀn(
vÆue
));

73 
	`•rötf
(
d©Æí
, "%04x", 
cmd
->
cmd_p
-cmd->
d©a
);

74 
	`mem˝y
(
cmd
->
d©a_Àn
, 
d©Æí
, 
DATA_LEN_SIZE
);

75 
	}
}

77 
	$add_©å_öt
(
t_cmd
 *
cmd
, *
«me
, 
vÆue
)

79 
c
[10];

80 
	`mem£t
(
c
, 0, (c));

81 
	`•rötf
(
c
, "%x",
vÆue
);

82 
	`add_©å_ch¨
(
cmd
, 
«me
, 
c
);

83 
	}
}

85 
	$fûl_cmd_hódî
(
t_cmd
 *
cmd
, *
cmd_p
)

87 
cmd
->
vîsi⁄
 = cmd->
fuŒbuf
;

88 
cmd
->cmd = &cmd->
fuŒbuf
[2];

89 
cmd
->
d©a_Àn
 = &cmd->
fuŒbuf
[6];

90 
cmd
->
d©a
 = &cmd->
fuŒbuf
[10];

91 
cmd
->
cmd_p
 =cmd->
d©a
;

92 
	`mem£t
(
cmd
, 0, (cmd));

93 
	`mem˝y
(
cmd
->
vîsi⁄
, 
COMMAND_VERSION
, 
VERSION_SIZE
);

94 
	`mem˝y
(
cmd
->cmd, 
cmd_p
, 
CMD_SIZE
);

95 
	}
}

98 
	$MsgDump
(*
msg
)

100 
buf
[
CMD_BUFSIZE
];

101 
Àn
;

102 *
±r
, *
vîsi⁄
, *
comm™d
, *
d©a_Àn
;

104 
	`debug_¥ötf
("\n");

105 
	`debug_¥ötf
("******************************************************************\n");

106 
	`debug_¥ötf
("\n");

107 
vîsi⁄
 = 
msg
;

108 
comm™d
 = &
msg
[2];

109 
d©a_Àn
 = &
msg
[6];

110 
±r
 = &
msg
[10];

112 
	`mem˝y
(
buf
, 
vîsi⁄
, 
VERSION_SIZE
);

113 
buf
[
VERSION_SIZE
]='\0';

114 if(
	`°rcmp
(
buf
, "01")){

115 
	`debug_¥ötf
("Wrong msg format\n");

118 
	`debug_¥ötf
("Msg vîsi⁄: %s\n", 
buf
);

120 
	`mem˝y
(
buf
, 
comm™d
, 
CMD_SIZE
);

121 
buf
[
CMD_SIZE
] = '\0';

122 
	`debug_¥ötf
("Comm™d: %s\n", 
buf
);

124 
	`ch¨2hex
(
d©a_Àn
, &
Àn
, 
DATA_LEN_SIZE
);

125 
	`debug_¥ötf
("TŸÆÜígth o‡©åibuãs: %d(%x)\n", 
Àn
,Üen);

127 
Àn
){

128 
«me_Àn
, 
vÆue_Àn
;

130 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

131 
±r
++;

133 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

134 
±r
 += 4;

136 
	`mem˝y
(
buf
, 
±r
, 
«me_Àn
);

137 
buf
[
«me_Àn
] = '\0';

138 
	`debug_¥ötf
("%s(öÜígth o‡%d): ", 
buf
, 
«me_Àn
);

139 
±r
 +
«me_Àn
;

141 
	`mem˝y
(
buf
, 
±r
, 
vÆue_Àn
);

142 
buf
[
vÆue_Àn
] = '\0';

143 
±r
 +
vÆue_Àn
;

144 
	`debug_¥ötf
("%s(öÜígth o‡%d)\n", 
buf
, 
vÆue_Àn
);

146 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

148 
	`debug_¥ötf
("\n");

149 
	`debug_¥ötf
("******************************************************************\n");

150 
	`debug_¥ötf
("\n");

151 
	}
}

154 
	$gëMsg
(
sock
, * 
buf
)

156 
ªt
;

157 
Àn
;

159 
ªt
 = 
	`ªcv
(
sock
, 
buf
, 10, 
MSG_PEEK
);

161 if(
ªt
<=0){

165 if(
ªt
<10){

169 
	`ch¨2hex
(&
buf
[6], &
Àn
, 
DATA_LEN_SIZE
);

170 
Àn
 +
PACKET_HEADER_SIZE
;

172 
ªt
 = 
	`ªcv
(
sock
, 
buf
, 
Àn
, 
MSG_PEEK
);

174 if(
ªt
<
Àn
){

178 
	`ªcv
(
sock
, 
buf
, 
Àn
, 0);

180  
Àn
;

181 
	}
}

183 
	$°¨t
(
sock
)

185 
t_cmd
 
cmd
;

186 
size_t
 
size
;

187 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

188 
	`add_©å_öt
(&
cmd
, "Start", 1);

189 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

190 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

191 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

192 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

193 
	`debug_¥ötf
("Serve sent start message\n");

194 
	}
}

196 
	$°›
(
sock
)

198 
t_cmd
 
cmd
;

199 
size_t
 
size
;

200 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

201 
	`add_©å_öt
(&
cmd
, "Stop", 1);

202 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

203 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

204 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

205 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

206 
	`debug_¥ötf
("Serve sent stop message\n");

207 
	}
}

209 
	$∑u£Rec‹d
(
sock
)

211 
t_cmd
 
cmd
;

212 
size_t
 
size
;

213 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

214 
	`add_©å_öt
(&
cmd
, "Pause", 1);

215 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

216 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

217 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

218 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

219 
	`debug_¥ötf
("Serve sentÖause message\n");

220 
	}
}

222 
	$ªsumeRec‹d
(
sock
)

224 
t_cmd
 
cmd
;

225 
size_t
 
size
;

226 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

227 
	`add_©å_öt
(&
cmd
, "Resume", 1);

228 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

229 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

230 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

231 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

232 
	`debug_¥ötf
("Serve sentÑesume message\n");

233 
	}
}

235 
	$swôchtoVGA
(
sock
)

237 
t_cmd
 
cmd
;

238 
size_t
 
size
;

239 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

240 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "VGA");

241 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

242 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

243 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

244 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

245 
	}
}

247 
	$swôchtoTóchî_˛o£up
(
sock
)

249 
t_cmd
 
cmd
;

250 
size_t
 
size
;

251 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

252 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "TeacherSpecial");

253 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

254 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

255 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

256 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

257 
	}
}

259 
	$swôchtoStudít_˛o£up
(
sock
)

261 
t_cmd
 
cmd
;

262 
size_t
 
size
;

263 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

264 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "StudentSpecial");

265 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

266 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

267 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

268 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

269 
	}
}

271 
	$swôchtoTóchî_∑n‹ama
(
sock
)

273 
t_cmd
 
cmd
;

274 
size_t
 
size
;

275 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

276 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "TeacherFull");

277 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

278 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

279 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

280 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

281 
	}
}

283 
	$swôchtoStudít_∑n‹ama
(
sock
)

285 
t_cmd
 
cmd
;

286 
size_t
 
size
;

287 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

288 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "StudentFull");

289 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

290 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

291 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

292 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

293 
	}
}

295 
	$swôchtoBœckbﬂrd_˛o£up
(
sock
)

297 
t_cmd
 
cmd
;

298 
size_t
 
size
;

299 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

300 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "Blackboard");

301 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

302 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

303 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

304 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

305 
	}
}

307 
	$swôchtoVGAwôhTóchî_˛o£up
(
sock
)

309 
t_cmd
 
cmd
;

310 
size_t
 
size
;

311 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

312 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "VGAWithTeacherSpecial");

313 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

314 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

315 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

316 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

317 
	}
}

319 
	$swôchtoTóchîS≥cülwôhStudítS≥cül
(
sock
)

321 
t_cmd
 
cmd
;

322 
size_t
 
size
;

323 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

324 
	`add_©å_ch¨
(&
cmd
, "SwitchVideo", "TeacherSpecialWithStudentSpecial");

325 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

326 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

327 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

328 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

329 
	}
}

331 
	$SëRec‹dMode
(
mode
, 
sock
)

333 
t_cmd
 
cmd
;

334 
size_t
 
size
;

335 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

337 
mode
){

339 
	`add_©å_ch¨
(&
cmd
, "SetRecordMode", "Manual");

342 
	`add_©å_ch¨
(&
cmd
, "SetRecordMode", "HalfAuto");

345 
	`add_©å_ch¨
(&
cmd
, "SetRecordMode", "Auto");

349 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

350 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

351 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

352 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

353 
	}
}

355 
	$CamZoom
(
dúe˘i⁄
, 
who
, 
sock
)

357 
t_cmd
 
cmd
;

358 
size_t
 
size
;

359 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

361 
dúe˘i⁄
){

363 
	`add_©å_ch¨
(&
cmd
, "CamZoom", "Wide");

366 
	`add_©å_ch¨
(&
cmd
, "CamZoom", "Tele");

370 
who
){

372 
	`add_©å_ch¨
(&
cmd
, "Camera", "TeacherSpecial");

375 
	`add_©å_ch¨
(&
cmd
, "Camera", "StudentSpecial");

379 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

380 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

381 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

382 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

383 
	}
}

385 
	$CamP™Tût
(
dúe˘i⁄
, 
who
, 
sock
)

387 
t_cmd
 
cmd
;

388 
size_t
 
size
;

389 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

391 
dúe˘i⁄
){

393 
	`add_©å_ch¨
(&
cmd
, "CamPanTilt", "Left");

396 
	`add_©å_ch¨
(&
cmd
, "CamPanTilt", "Right");

399 
	`add_©å_ch¨
(&
cmd
, "CamPanTilt", "Up");

402 
	`add_©å_ch¨
(&
cmd
, "CamPanTilt", "Down");

406 
who
){

408 
	`add_©å_ch¨
(&
cmd
, "Camera", "TeacherSpecial");

411 
	`add_©å_ch¨
(&
cmd
, "Camera", "StudentSpecial");

415 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

416 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

417 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

418 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

419 
	}
}

421 
	$CamMem‹yInq
(
numbî
, 
who
, 
sock
)

423 
t_cmd
 
cmd
;

424 
size_t
 
size
;

425 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

426 
	`add_©å_öt
(&
cmd
, "CamMem‹yInq", 
numbî
);

428 
who
){

430 
	`add_©å_ch¨
(&
cmd
, "Camera", "TeacherSpecial");

433 
	`add_©å_ch¨
(&
cmd
, "Camera", "StudentSpecial");

437 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

438 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

439 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

440 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

441 
	}
}

443 
	$CamMem‹ySave
(
numbî
, 
who
, 
sock
)

445 
t_cmd
 
cmd
;

446 
size_t
 
size
;

447 
	`fûl_cmd_hódî
(&
cmd
, 
COMMAND_SERVER
);

448 
	`add_©å_öt
(&
cmd
, "CamMem‹ySave", 
numbî
);

450 
who
){

452 
	`add_©å_ch¨
(&
cmd
, "Camera", "TeacherSpecial");

455 
	`add_©å_ch¨
(&
cmd
, "Camera", "StudentSpecial");

459 
	`debug_¥ötf
("Msg: %s\n", 
cmd
.
fuŒbuf
);

460 
	`ch¨2hex
(
cmd
.
d©a_Àn
, &
size
, 
DATA_LEN_SIZE
);

461 
size
 +(
VERSION_SIZE
 + 
CMD_SIZE
 + 
DATA_LEN_SIZE
);

462 
	`£nd
(
sock
, 
cmd
.
fuŒbuf
, 
size
, 0);

463 
	}
}

465 
	gj≥g_˙t
 = 0;

466 
FILE
 *
	gj≥g_fd
 = 
NULL
;

468 
	$MsgH™dÀ
(*
Msg
)

472 
cmd
[
CMD_SIZE
+1];

473 
Àn
;

474 *
±r
;

476 
	`mem˝y
(
cmd
, &
Msg
[
VERSION_SIZE
], 
CMD_SIZE
);

477 
cmd
[
CMD_SIZE
] = '\0';

479 
	`ch¨2hex
(&
Msg
[
VERSION_SIZE
+
CMD_SIZE
], &
Àn
, 
DATA_LEN_SIZE
);

482 
±r
 = &
Msg
[
PACKET_HEADER_SIZE
];

484 if(!
	`°rcmp
(
cmd
, 
COMMAND_EVENT_JPEG
)){

485 
ch™√l
 = 0;

486 
Àn
){

488 
«me_Àn
, 
vÆue_Àn
;

489 
©å_«me
[16];

490 
©å_vÆue
[1536];

491 
t_‰ame_öfo
 
‰ame_öfo
;

493 
	`ch¨2hex
(
±r
, &
«me_Àn
, 1);

494 
±r
++;

496 
	`ch¨2hex
(
±r
, &
vÆue_Àn
, 4);

497 
±r
 += 4;

499 
	`mem˝y
(
©å_«me
, 
±r
, 
«me_Àn
);

500 
©å_«me
[
«me_Àn
] = '\0';

501 
±r
 +
«me_Àn
;

503 
	`mem˝y
(
©å_vÆue
, 
±r
, 
vÆue_Àn
);

504 
©å_vÆue
[
vÆue_Àn
] = '\0';

505 
±r
 +
vÆue_Àn
;

507 
Àn
 -(
ARG_NAME_LEN_SIZE
 + 
ARG_LEN_SIZE
 + 
«me_Àn
 + 
vÆue_Àn
);

509 if(!
	`°rcmp
(
©å_«me
, "Info")){

516 
	`mem˝y
(&
‰ame_öfo
, 
©å_vÆue
, 
vÆue_Àn
);

531 if(!
	`°rcmp
(
©å_«me
, "StreamId")){

532 
	`ch¨2hex
(
©å_vÆue
, &
ch™√l
, 
vÆue_Àn
);

535 if(!
	`°rcmp
(
©å_«me
, "Data")){

536 if(
ch™√l
==0){

537 if(
j≥g_˙t
==0){

538 if(!
j≥g_fd
){

539 
j≥g_fd
 = 
	`f›í
("vga.jpg", "w");

541 if(
j≥g_fd
){

542 
	`fwrôe
(
©å_vÆue
, 1, 
vÆue_Àn
, 
j≥g_fd
);

544 if(
‰ame_öfo
.
∑ckë_num
==‰ame_öfo.
pkts_ö_‰ame
-1){

545 
	`f˛o£
(
j≥g_fd
);

546 
j≥g_fd
 = 
NULL
;

547 
j≥g_˙t
++;

548 
	`debug_¥ötf
("one jpeg saved\n");

553 if(
‰ame_öfo
.
∑ckë_num
==‰ame_öfo.
pkts_ö_‰ame
-1){

554 if(
ch™√l
==0){

555 
	`debug_¥ötf
("VGA JPEGÑeceived\n");

558 if(
ch™√l
==1){

559 
	`debug_¥ötf
("TeacherSpecial JPEGÑeceived\n");

562 if(
ch™√l
==2){

563 
	`debug_¥ötf
("StudentSpecial JPEGÑeceived\n");

566 if(
ch™√l
==3){

567 
	`debug_¥ötf
("TeacherPanorama JPEGÑeceived\n");

570 if(
ch™√l
==4){

571 
	`debug_¥ötf
("StudentPanorama JPEGÑeceived\n");

574 if(
ch™√l
==5){

575 
	`debug_¥ötf
("Blackboard JPEGÑeceived\n");

582 
	}
}

584 
	$maö
(
¨gc
, **
¨gv
)

586 
sock_ö°ru˘‹
;

588 
sockaddr_ö
 
˛i
;

590 
›t
=1;

591 
fd_£t
 
fd§
;

593 
ªt
;

597 if((
sock_ö°ru˘‹
=
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0))==-1){

598 
	`debug_¥ötf
("open socketÉrror\n");

599 
	`exô
(1);

602 
	`debug_¥ötf
("sockë fd = %d\n", 
sock_ö°ru˘‹
);

605 if(
	`£tsock›t
(
sock_ö°ru˘‹
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
›t
, ())==-1){

606 
	`debug_¥ötf
("set socket optionÉrror\n");

607 
	`exô
(1);

610 
	`mem£t
(&
˛i
, 0, (cli));

611 
˛i
.
sö_Ámûy
 = 
AF_INET
;

612 
˛i
.
sö_p‹t
 = 
	`ht⁄s
(3000);

613 
˛i
.
sö_addr
.
s_addr
 = 
	`öë_addr
("127.0.0.1");

615 if(
	`c⁄√˘
(
sock_ö°ru˘‹
, (
sockaddr
*)&
˛i
, (cli))<0){

616 
	`debug_¥ötf
("connectÉrror\n");

617 
	`˛o£
(
sock_ö°ru˘‹
);

618 
	`¶ìp
(3);

625 
	`debug_¥ötf
("connectedÅoÑecbc server\n");

628 
	`¥ötf
("Command:\n");

629 
	`¥ötf
("[0] ExitÖrogram\n");

630 
	`¥ötf
("[1] Start\n");

631 
	`¥ötf
("[2] Stop\n");

632 
	`¥ötf
("[3] Pause\n");

633 
	`¥ötf
("[4] Resume\n");

634 
	`¥ötf
("[5] switchÅo VGA\n");

635 
	`¥ötf
("[6] switchÅo TeacherSpecial\n");

636 
	`¥ötf
("[7] switchÅo StudentSpecial\n");

637 
	`¥ötf
("[8] switchÅo TeacherFull\n");

638 
	`¥ötf
("[9] switchÅo StudentFull\n");

639 
	`¥ötf
("[A] switchÅo Blackboard\n");

640 
	`¥ötf
("[B] switchÅo VGAWithTeacherSpecial\n");

641 
	`¥ötf
("[C] switchÅo TeacherSpecialWithStudentSpecial\n");

642 
	`¥ötf
("[D] SetRecordModeÅo manual\n");

643 
	`¥ötf
("[E] SetRecordModeÅo semi-auto\n");

644 
	`¥ötf
("[F] SetRecordModeÅoáuto\n");

645 
	`¥ötf
("[10] Teacher ZoomTele\n");

646 
	`¥ötf
("[11] Teacher ZoomWide\n");

647 
	`¥ötf
("[12] Teacher PanTiltÜeft\n");

648 
	`¥ötf
("[13] Teacher PanTiltÑight\n");

649 
	`¥ötf
("[14] Teacher PanTilt up\n");

650 
	`¥ötf
("[15] Teacher PanTilt down\n");

651 
	`¥ötf
("[16] Teacher MemInq\n");

652 
	`¥ötf
("[17] Teacher MemSave\n");

656 
	`FD_ZERO
(&
fd§
);

657 
	`FD_SET
(
sock_ö°ru˘‹
, &
fd§
);

658 
	`FD_SET
(0, &
fd§
);

660 
maxfd
 = (
sock_ö°ru˘‹
>0)?sock_instructor:0;

666 
ªt
 = 
	`£À˘
(
maxfd
+1, &
fd§
, 
NULL
, NULL, NULL);

668 if(
ªt
<0){

669 
	`debug_¥ötf
("selectÉrror\n");

670 
	`exô
(1);

673 if(
ªt
==0){

674 
	`u¶ìp
(10000);

678 if(
	`FD_ISSET
(
sock_ö°ru˘‹
, &
fd§
)){

679 
buf
[
CMD_BUFSIZE
];

680 
MsgGŸ
 = 
	`gëMsg
(
sock_ö°ru˘‹
, 
buf
);

682 if(
MsgGŸ
<0){

683 
	`debug_¥ötf
("disconnectedÅo client\n");

684 
	`˛o£
(
sock_ö°ru˘‹
);

689 if(
MsgGŸ
 == 0){

691 
	`u¶ìp
(1000);

694 if(
MsgGŸ
>0){

697 
	`MsgH™dÀ
(
buf
);

701 if(
	`FD_ISSET
(0, &
fd§
)){

703 
sbuf
[10];

704 
	`fgës
(
sbuf
, 10, 
°dö
);

705 
sbuf
[
	`°æí
(sbuf)-1]='\0';

707 if(!
	`°rcmp
(
sbuf
, "0")){

708 if(
sock_ö°ru˘‹
){

709 
	`˛o£
(
sock_ö°ru˘‹
);

710 
	`˛o£
(
sock_ö°ru˘‹
);

715 if(!
	`°rcmp
(
sbuf
, "1")){

716 
	`°¨t
(
sock_ö°ru˘‹
);

719 if(!
	`°rcmp
(
sbuf
, "2")){

720 
	`°›
(
sock_ö°ru˘‹
);

723 if(!
	`°rcmp
(
sbuf
, "3")){

724 
	`∑u£Rec‹d
(
sock_ö°ru˘‹
);

727 if(!
	`°rcmp
(
sbuf
, "4")){

728 
	`ªsumeRec‹d
(
sock_ö°ru˘‹
);

731 if(!
	`°rcmp
(
sbuf
, "5")){

732 
	`swôchtoVGA
(
sock_ö°ru˘‹
);

735 if(!
	`°rcmp
(
sbuf
, "6")){

736 
	`swôchtoTóchî_˛o£up
(
sock_ö°ru˘‹
);

739 if(!
	`°rcmp
(
sbuf
, "7")){

740 
	`swôchtoStudít_˛o£up
(
sock_ö°ru˘‹
);

743 if(!
	`°rcmp
(
sbuf
, "8")){

744 
	`swôchtoTóchî_∑n‹ama
(
sock_ö°ru˘‹
);

747 if(!
	`°rcmp
(
sbuf
, "9")){

748 
	`swôchtoStudít_∑n‹ama
(
sock_ö°ru˘‹
);

751 if(!
	`°rcmp
(
sbuf
, "A")){

752 
	`swôchtoBœckbﬂrd_˛o£up
(
sock_ö°ru˘‹
);

755 if(!
	`°rcmp
(
sbuf
, "B")){

756 
	`swôchtoVGAwôhTóchî_˛o£up
(
sock_ö°ru˘‹
);

759 if(!
	`°rcmp
(
sbuf
, "C")){

760 
	`swôchtoTóchîS≥cülwôhStudítS≥cül
(
sock_ö°ru˘‹
);

763 if(!
	`°rcmp
(
sbuf
, "D")){

764 
	`SëRec‹dMode
(0, 
sock_ö°ru˘‹
);

767 if(!
	`°rcmp
(
sbuf
, "E")){

768 
	`SëRec‹dMode
(1, 
sock_ö°ru˘‹
);

771 if(!
	`°rcmp
(
sbuf
, "F")){

772 
	`SëRec‹dMode
(2, 
sock_ö°ru˘‹
);

775 if(!
	`°rcmp
(
sbuf
, "10")){

776 
	`CamZoom
(1, 0, 
sock_ö°ru˘‹
);

779 if(!
	`°rcmp
(
sbuf
, "11")){

780 
	`CamZoom
(0, 0, 
sock_ö°ru˘‹
);

783 if(!
	`°rcmp
(
sbuf
, "12")){

784 
	`CamP™Tût
(0, 0, 
sock_ö°ru˘‹
);

787 if(!
	`°rcmp
(
sbuf
, "13")){

788 
	`CamP™Tût
(1, 0, 
sock_ö°ru˘‹
);

791 if(!
	`°rcmp
(
sbuf
, "14")){

792 
	`CamP™Tût
(2, 0, 
sock_ö°ru˘‹
);

795 if(!
	`°rcmp
(
sbuf
, "15")){

796 
	`CamP™Tût
(3, 0, 
sock_ö°ru˘‹
);

799 if(!
	`°rcmp
(
sbuf
, "16")){

800 
	`CamMem‹yInq
(0, 0, 
sock_ö°ru˘‹
);

803 if(!
	`°rcmp
(
sbuf
, "17")){

804 
	`CamMem‹ySave
(0, 0, 
sock_ö°ru˘‹
);

807 
	`¥ötf
("Command:\n");

808 
	`¥ötf
("[0] ExitÖrogram\n");

809 
	`¥ötf
("[1] Start\n");

810 
	`¥ötf
("[2] Stop\n");

811 
	`¥ötf
("[3] Pause\n");

812 
	`¥ötf
("[4] Resume\n");

813 
	`¥ötf
("[5] switchÅo VGA\n");

814 
	`¥ötf
("[6] switchÅo TeacherSpecial\n");

815 
	`¥ötf
("[7] switchÅo StudentSpecial\n");

816 
	`¥ötf
("[8] switchÅo TeacherFull\n");

817 
	`¥ötf
("[9] switchÅo StudentFull\n");

818 
	`¥ötf
("[A] switchÅo Blackboard\n");

819 
	`¥ötf
("[B] switchÅo VGAWithTeacherSpecial\n");

820 
	`¥ötf
("[C] switchÅo TeacherSpecialWithStudentSpecial\n");

821 
	`¥ötf
("[D] SetRecordModeÅo manual\n");

822 
	`¥ötf
("[E] SetRecordModeÅo semi-auto\n");

823 
	`¥ötf
("[F] SetRecordModeÅoáuto\n");

824 
	`¥ötf
("[10] Teacher ZoomTele\n");

825 
	`¥ötf
("[11] Teacher ZoomWide\n");

826 
	`¥ötf
("[12] Teacher PanTiltÜeft\n");

827 
	`¥ötf
("[13] Teacher PanTiltÑight\n");

828 
	`¥ötf
("[14] Teacher PanTilt up\n");

829 
	`¥ötf
("[15] Teacher PanTilt down\n");

830 
	`¥ötf
("[16] Teacher MemInq\n");

831 
	`¥ötf
("[17] Teacher MemSave\n");

835 
	}
}

	@streaming_srv.h

8 
	~"d©afifo.h
"

10 #i‚de‡
STREAMING_SRV_H_


11 
	#STREAMING_SRV_H_


	)

13 
	#MAX_DATA_SRC_NUM
 1

	)

14 
	#MAX_CLIENT_NUM
 5

	)

15 
	#MAX_FRAME_BUFFERED
 60

	)

16 
	#STREAMING_PACKET_HEADER_LENGTH
 16

	)

18 
	ss_d©asök


21 
t_d©afifo
 
	mc⁄sumî_fifo
;

22 
	mtime°amp
;

23 * 
	mp_d©a§c_˘x
;

24 * 
	mp_maö°ªamög_˘x
;

25 }
	tt_d©asök
;

27 
	ss_˛õ¡°ªamög


30 
t_d©afifo
 *
	mp_c⁄sumî_fifo
;

31 
t_d©asök
 *
	mp_d©asök
;

32 
	msock
;

33 * 
	mp_maö°ªamög_˘x
;

34 }
	tt_˛õ¡°ªamög
;

36 
	ss_dÂoﬁ_ôem


38 
	mÆloˇãd
;

39 
t_d©afifo
 
	mdf
;

40 }
	tt_fif›oﬁ_ôem
;

43 
	ss_°ªamög˛õ¡


45 
	ma˘ive
;

46 
t_˛õ¡°ªamög
 *
	mp_˛õ¡°ªamög
;

47 }
	tt_°ªamög˛õ¡
;

50 
	ss_d©a§c_˘x


52 
	mvÆid
;

53 
	mªf˙t
;

55 
	msock_d©a§c
;

57 
	m§c_id
[16];

58 
t_d©afifo
 
	m¥odu˚r_fifo
;

59 
t_d©asök
 
	md©asök
;

61 *
	md©abuf
;

62 *
	md©a_p
;

64 }
	tt_d©a§c_˘x
;

66 
	ss_fif›oﬁ


68 
±hªad_muãx_t
 
	mmuãx
;

69 
t_fif›oﬁ_ôem
 
	m˛õ¡_fifo_ôem
[
MAX_CLIENT_NUM
];

70 }
	tt_fif›oﬁ
;

72 
	ss_d©a§c_˘x_poﬁ


74 
±hªad_muãx_t
 
	mmuãx
;

75 
t_d©a§c_˘x
 
	md©a§c_˘x
[
MAX_DATA_SRC_NUM
];

76 }
	tt_d©a§c_˘x_poﬁ
;

78 
	ss_maö°ªamög_˘x


80 
	msock_§c_li°í
;

81 
	msock_˛õ¡_li°í
;

82 
t_d©a§c_˘x_poﬁ
 
	md©a§c_˘x_poﬁ
;

83 
t_fif›oﬁ
 
	m˛õ¡_fifo_poﬁ
;

84 
	mmax_fd
;

85 }
	tt_maö°ªamög_˘x
;

87 
	#d©a§c_˘x_poﬁ_lock
(
d©a§c_˘x_poﬁ
Ë
	`±hªad_muãx_lock
(&(d©a§c_˘x_poﬁ)->
muãx
)

	)

88 
	#d©a§c_˘x_poﬁ_u∆ock
(
d©a§c_˘x_poﬁ
Ë
	`±hªad_muãx_u∆ock
(&(d©a§c_˘x_poﬁ)->
muãx
)

	)

90 
	ss_°ªamög_∑ckë_hódî


92 
	msize
;

93 
	mty≥
;

94 
	mÊag
;

95 
	mtime°amp
;

96 }
	tt_°ªamög_∑ckë_hódî
;

101 
	mFRMTYPE_VIDEO_IDR
,

102 
	mFRMTYPE_VIDEO_I
,

103 
	mFRMTYPE_VIDEO_P
,

104 
	mFRMTYPE_AUDIO


105 }
	te_‰ame_ty≥
;

110 
	mPACKET_TYPE_ID
,

111 
	mPACKET_TYPE_VIDEO
,

112 
	mPACKET_TYPE_AUDIO
,

113 }
	te_∑ckë_ty≥
;

	@tlv320aic3254.h

1 #i‚de‡
__TLV320AIC3254_H__


2 
	#__TLV320AIC3254_H_


	)

4 
°π˘
 
	ti2c_ªg_vÆ
 {

5 
	gªg
;

6 
	gvÆue
;

9 
	ti2c_ªg_vÆ
 
	taic3254_∑øms
[16];

	@xmlparser.c

8 
	~<°dio.h
>

9 
	~"mxml.h
"

10 
	~"ªcbc_§v.h
"

12 
	$vm≠_èbÀ_lﬂd
(* 
fûíame
, 
t_video_m≠
 *
vm≠_èbÀ
)

14 
FILE
 *
Â
;

15 
mxml_node_t
 *
node1
 = 
NULL
;

16 
mxml_node_t
 *
node
 = 
NULL
;

17 
mxml_node_t
 *
node0
 = 
NULL
;

18 
mxml_node_t
 *
åì
 = 
NULL
;

19 c⁄° *
nodeName
;

21 c⁄° *
nodeAâr
;

23 
ˇpbrd
;

25 
Â
 = 
	`f›í
(
fûíame
, "r");

26 if(!
Â
){

27 
	`¥ötf
("canÇot open specified xml\n");

31 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

32 
	`f˛o£
(
Â
);

34 if(
åì
 =
NULL
){

35 
	`¥ötf
("load xml failed\n");

40 
i
;

41 
i
=0; i<6; i++){

42 
vm≠_èbÀ
[
i
].
fun˘i⁄
 = -1;

45 
node1
 = 
åì
;

46 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

48 
node1
){

50 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

51 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

53 if(!
	`°rcmp
(
nodeName
, "module"))

56 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

57 if(!
	`°rcmp
(
nodeAâr
, "CaptureBoard")){

58 
	`¥ötf
("module captureboard found\n");

59 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

61 
node
){

62 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

63 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

64 if(!
	`°rcmp
(
nodeName
, "group")){

65 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

66 if(!
	`°rcmp
(
nodeAâr
, "CaptureBoard1")){

67 
	`¥ötf
("group CaptureBoard1 found\n");

68 
ˇpbrd
 = 0;

69 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

70 
node0
){

71 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

72 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

73 if(!
	`°rcmp
(
nodeName
, "configValue")){

74 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

75 if(!
	`°rcmp
(
nodeAâr
, "Interface")){

76 
	`¥ötf
("ConfigValue Interface found\n");

77 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

78 if(!
	`°rcmp
(
nodeTxt
, "HDSDI")){

79 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+1;

81 if(!
	`°rcmp
(
nodeTxt
, "HDMI")){

82 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+16+1;

86 if(!
	`°rcmp
(
nodeAâr
, "Bind")){

87 
	`¥ötf
("ConfigValue Bind found\n");

88 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

89 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Special")){

90 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 1;

91 
vm≠_èbÀ
[
ˇpbrd
].
u¨t_ch™√l
 = 1;

93 if(!
	`°rcmp
(
nodeTxt
, "Student_Special")){

94 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 2;

95 
vm≠_èbÀ
[
ˇpbrd
].
u¨t_ch™√l
 = 3;

97 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Full")){

98 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 3;

100 if(!
	`°rcmp
(
nodeTxt
, "Student_Full")){

101 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 4;

103 if(!
	`°rcmp
(
nodeTxt
, "Blackboard")){

104 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 5;

108 if(!
	`°rcmp
(
nodeAâr
, "Vendor")){

109 
	`¥ötf
("ConfigValue vendor found\n");

110 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

111 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
, 
nodeTxt
);

112 
	`¥ötf
("CamVíd‹ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
);

115 if(!
	`°rcmp
(
nodeAâr
, "CamModel")){

116 
	`¥ötf
("ConfigValue CamModel found\n");

117 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

118 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
, 
nodeTxt
);

119 
	`¥ötf
("CamModñ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
);

124 
node0
 = 
	`mxmlGëNextSiblög
(node0);

127 if(!
	`°rcmp
(
nodeAâr
, "CaptureBoard2")){

128 
	`¥ötf
("group CaptureBoard2 found\n");

129 
ˇpbrd
 = 1;

130 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

131 
node0
){

132 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

133 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

134 if(!
	`°rcmp
(
nodeName
, "configValue")){

135 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

136 if(!
	`°rcmp
(
nodeAâr
, "Interface")){

137 
	`¥ötf
("ConfigValue Interface found\n");

138 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

139 if(!
	`°rcmp
(
nodeTxt
, "HDSDI")){

140 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+1;

142 if(!
	`°rcmp
(
nodeTxt
, "HDMI")){

143 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+16+1;

147 if(!
	`°rcmp
(
nodeAâr
, "Bind")){

148 
	`¥ötf
("ConfigValue Bind found\n");

149 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

150 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Special")){

151 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 1;

153 if(!
	`°rcmp
(
nodeTxt
, "Student_Special")){

154 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 2;

156 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Full")){

157 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 3;

159 if(!
	`°rcmp
(
nodeTxt
, "Student_Full")){

160 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 4;

162 if(!
	`°rcmp
(
nodeTxt
, "Blackboard")){

163 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 5;

167 if(!
	`°rcmp
(
nodeAâr
, "Vendor")){

168 
	`¥ötf
("ConfigValue vendor found\n");

169 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

170 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
, 
nodeTxt
);

171 
	`¥ötf
("CamVíd‹ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
);

174 if(!
	`°rcmp
(
nodeAâr
, "CamModel")){

175 
	`¥ötf
("ConfigValue CamModel found\n");

176 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

177 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
, 
nodeTxt
);

178 
	`¥ötf
("CamModñ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
);

183 
node0
 = 
	`mxmlGëNextSiblög
(node0);

187 if(!
	`°rcmp
(
nodeAâr
, "CaptureBoard3")){

188 
	`¥ötf
("group CaptureBoard3 found\n");

189 
ˇpbrd
 = 2;

190 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

191 
node0
){

192 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

193 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

194 if(!
	`°rcmp
(
nodeName
, "configValue")){

195 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

196 if(!
	`°rcmp
(
nodeAâr
, "Interface")){

197 
	`¥ötf
("ConfigValue Interface found\n");

198 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

199 if(!
	`°rcmp
(
nodeTxt
, "HDSDI")){

200 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+1;

202 if(!
	`°rcmp
(
nodeTxt
, "HDMI")){

203 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+16+1;

207 if(!
	`°rcmp
(
nodeAâr
, "Bind")){

208 
	`¥ötf
("ConfigValue Bind found\n");

209 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

210 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Special")){

211 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 1;

213 if(!
	`°rcmp
(
nodeTxt
, "Student_Special")){

214 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 2;

216 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Full")){

217 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 3;

219 if(!
	`°rcmp
(
nodeTxt
, "Student_Full")){

220 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 4;

222 if(!
	`°rcmp
(
nodeTxt
, "Blackboard")){

223 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 5;

227 if(!
	`°rcmp
(
nodeAâr
, "Vendor")){

228 
	`¥ötf
("ConfigValue vendor found\n");

229 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

230 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
, 
nodeTxt
);

231 
	`¥ötf
("CamVíd‹ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
);

234 if(!
	`°rcmp
(
nodeAâr
, "CamModel")){

235 
	`¥ötf
("ConfigValue CamModel found\n");

236 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

237 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
, 
nodeTxt
);

238 
	`¥ötf
("CamModñ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
);

243 
node0
 = 
	`mxmlGëNextSiblög
(node0);

247 if(!
	`°rcmp
(
nodeAâr
, "CaptureBoard4")){

248 
	`¥ötf
("group CaptureBoard4 found\n");

249 
ˇpbrd
 = 3;

250 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

251 
node0
){

252 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

253 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

254 if(!
	`°rcmp
(
nodeName
, "configValue")){

255 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

256 if(!
	`°rcmp
(
nodeAâr
, "Interface")){

257 
	`¥ötf
("ConfigValue Interface found\n");

258 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

259 if(!
	`°rcmp
(
nodeTxt
, "HDSDI")){

260 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+1;

262 if(!
	`°rcmp
(
nodeTxt
, "HDMI")){

263 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+16+1;

267 if(!
	`°rcmp
(
nodeAâr
, "Bind")){

268 
	`¥ötf
("ConfigValue Bind found\n");

269 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

270 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Special")){

271 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 1;

273 if(!
	`°rcmp
(
nodeTxt
, "Student_Special")){

274 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 2;

276 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Full")){

277 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 3;

279 if(!
	`°rcmp
(
nodeTxt
, "Student_Full")){

280 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 4;

282 if(!
	`°rcmp
(
nodeTxt
, "Blackboard")){

283 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 5;

287 if(!
	`°rcmp
(
nodeAâr
, "Vendor")){

288 
	`¥ötf
("ConfigValue vendor found\n");

289 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

290 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
, 
nodeTxt
);

291 
	`¥ötf
("CamVíd‹ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
);

294 if(!
	`°rcmp
(
nodeAâr
, "CamModel")){

295 
	`¥ötf
("ConfigValue CamModel found\n");

296 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

297 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
, 
nodeTxt
);

298 
	`¥ötf
("CamModñ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
);

303 
node0
 = 
	`mxmlGëNextSiblög
(node0);

307 if(!
	`°rcmp
(
nodeAâr
, "CaptureBoard5")){

308 
	`¥ötf
("group CaptureBoard5 found\n");

309 
ˇpbrd
 = 4;

310 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

311 
node0
){

312 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

313 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

314 if(!
	`°rcmp
(
nodeName
, "configValue")){

315 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

316 if(!
	`°rcmp
(
nodeAâr
, "Interface")){

317 
	`¥ötf
("ConfigValue Interface found\n");

318 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

319 if(!
	`°rcmp
(
nodeTxt
, "HDSDI")){

320 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+1;

322 if(!
	`°rcmp
(
nodeTxt
, "HDMI")){

323 
vm≠_èbÀ
[
ˇpbrd
].
ˇp_id
 = capbrd+16+1;

327 if(!
	`°rcmp
(
nodeAâr
, "Bind")){

328 
	`¥ötf
("ConfigValue Bind found\n");

329 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

330 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Special")){

331 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 1;

333 if(!
	`°rcmp
(
nodeTxt
, "Student_Special")){

334 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 2;

336 if(!
	`°rcmp
(
nodeTxt
, "Teacher_Full")){

337 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 3;

339 if(!
	`°rcmp
(
nodeTxt
, "Student_Full")){

340 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 4;

342 if(!
	`°rcmp
(
nodeTxt
, "Blackboard")){

343 
vm≠_èbÀ
[
ˇpbrd
].
fun˘i⁄
 = 5;

347 if(!
	`°rcmp
(
nodeAâr
, "Vendor")){

348 
	`¥ötf
("ConfigValue vendor found\n");

349 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

350 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
, 
nodeTxt
);

351 
	`¥ötf
("CamVíd‹ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_víd‹
);

354 if(!
	`°rcmp
(
nodeAâr
, "CamModel")){

355 
	`¥ötf
("ConfigValue CamModel found\n");

356 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

357 
	`°r˝y
(
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
, 
nodeTxt
);

358 
	`¥ötf
("CamModñ = %s\n", 
vm≠_èbÀ
[
ˇpbrd
].
ˇm_modñ
);

363 
node0
 = 
	`mxmlGëNextSiblög
(node0);

369 
node
 = 
	`mxmlGëNextSiblög
(node);

377 
node1
 = 
	`mxmlGëNextSiblög
(node1);

380 
	`mxmlDñëe
(
åì
);

382 
	}
}

383 
	$audio_equÆizî_lﬂd
(*
fûíame
, 
i2c_ªg_vÆue
 *
cfg
, 
Êag
)

385 
FILE
 *
Â
;

386 
mxml_node_t
 *
node1
 = 
NULL
;

387 
mxml_node_t
 *
node
 = 
NULL
;

388 
mxml_node_t
 *
node0
 = 
NULL
;

389 
mxml_node_t
 *
åì
 = 
NULL
;

390 c⁄° *
nodeName
;

391 c⁄° *
nodeAâr
;

393 
Â
 = 
	`f›í
(
fûíame
, "r");

394 if(!
Â
){

395 
	`¥ötf
("canÇot open specified xml\n");

399 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

400 
	`f˛o£
(
Â
);

402 if(
åì
 =
NULL
){

403 
	`¥ötf
("load xml failed\n");

407 
node1
 = 
åì
;

408 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

409 
node1
){

410 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

411 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

412 if(!
	`°rcmp
(
nodeName
, "module")){

413 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

414 if(!
	`°rcmp
(
nodeAâr
, "AudioSampleSocConfig")){

415 
	`¥ötf
("module AudioSampleSocConfig found\n");

416 
Êag
)

419 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

420 
node
){

421 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

422 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

423 if(!
	`°rcmp
(
nodeName
, "group")){

424 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

425 if(!
	`°rcmp
(
nodeAâr
, "Float")){

426 
	`¥ötf
("group Float found\n");

427 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

428 
node0
){

429 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

430 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

431 if(!
	`°rcmp
(
nodeName
, "configValue")){

432 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

433 if(!
	`°rcmp
(
nodeAâr
, "1")){

434 
	`¥ötf
("FileBitRate=");

435 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

436 
cfg
->
bôøã
 = 
	`©oi
(
nodeTxt
);

437 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

441 
node0
 = 
	`mxmlGëNextSiblög
(node0);

468 
knode
 = 
	`mxmlGëNextSiblög
(
node
);

471 
	`mxmlDñëe
(
åì
);

473 
	}
}

474 
	$c⁄fig_lﬂd
(* 
fûíame
, 
t_ªcbc_cfg
 *
cfg
)

476 
FILE
 *
Â
;

477 
mxml_node_t
 *
node1
 = 
NULL
;

478 
mxml_node_t
 *
node
 = 
NULL
;

479 
mxml_node_t
 *
node0
 = 
NULL
;

480 
mxml_node_t
 *
åì
 = 
NULL
;

481 c⁄° *
nodeName
;

483 c⁄° *
nodeAâr
;

487 
Â
 = 
	`f›í
(
fûíame
, "r");

488 if(!
Â
){

489 
	`¥ötf
("canÇot open specified xml\n");

493 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

494 
	`f˛o£
(
Â
);

496 if(
åì
 =
NULL
){

497 
	`¥ötf
("load xml failed\n");

501 
node1
 = 
åì
;

502 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

503 
node1
){

504 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

505 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

506 if(!
	`°rcmp
(
nodeName
, "module")){

507 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

508 if(!
	`°rcmp
(
nodeAâr
, "Codec")){

509 
	`¥ötf
("module Codec found\n");

510 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

511 
node
){

512 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

513 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

514 if(!
	`°rcmp
(
nodeName
, "group")){

515 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

516 if(!
	`°rcmp
(
nodeAâr
, "BitRate")){

517 
	`¥ötf
("group BitRate found\n");

518 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

519 
node0
){

520 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

521 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

522 if(!
	`°rcmp
(
nodeName
, "configValue")){

523 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

524 if(!
	`°rcmp
(
nodeAâr
, "LiveBitRate")){

525 
	`¥ötf
("LiveBitRate=");

526 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

527 
cfg
->
live_bôøã
 = 
	`©oi
(
nodeTxt
);

528 
	`¥ötf
("%d\n", 
cfg
->
live_bôøã
);

531 if(!
	`°rcmp
(
nodeAâr
, "FrameRate")){

532 
	`¥ötf
("FrameRate=");

533 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

534 
cfg
->
‰ame_øã
 = 
	`©oi
(
nodeTxt
);

535 
	`¥ötf
("%f\n", 
cfg
->
‰ame_øã
);

537 if(!
	`°rcmp
(
nodeAâr
, "resolutions")){

538 
	`¥ötf
("resolutions\n");

539 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

540 if(!
	`°rcmp
(
nodeTxt
, "1080p")){

541 
cfg
->
‰ame_height
 = 1080;

542 
cfg
->
‰ame_width
 = 1920;

543 
	`¥ötf
("‰amêwidth = %d\n",
cfg
->
‰ame_width
);

544 
	`¥ötf
("‰amêheighà%d\n",
cfg
->
‰ame_height
);

546 if(!
	`°rcmp
(
nodeTxt
, "720p")){

547 
cfg
->
‰ame_height
 = 720;

548 
cfg
->
‰ame_width
 = 1280;

549 
	`¥ötf
("‰amêwidth = %d\n",
cfg
->
‰ame_width
);

550 
	`¥ötf
("‰amêheighà%d\n",
cfg
->
‰ame_height
);

554 if(!
	`°rcmp
(
nodeAâr
, "RecordMode")){

555 
	`¥ötf
("IsResouseMode=");

556 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

557 if(!
	`°rcmp
(
nodeTxt
, "SingleStream")){

558 
cfg
->
IsResou˚Mode
 = 0;

561 
cfg
->
IsResou˚Mode
 = 1;

563 
	`¥ötf
("%d\n", 
cfg
->
IsResou˚Mode
);

567 
node0
 = 
	`mxmlGëNextSiblög
(node0);

572 
node
 = 
	`mxmlGëNextSiblög
(node);

576 if(!
	`°rcmp
(
nodeAâr
, "System")){

577 
	`¥ötf
("module System found\n");

578 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

579 
node
){

580 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

581 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

582 if(!
	`°rcmp
(
nodeName
, "group")){

583 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

584 if(!
	`°rcmp
(
nodeAâr
, "Default")){

585 
	`¥ötf
("group Default found\n");

586 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

587 
node0
){

588 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

589 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

590 if(!
	`°rcmp
(
nodeName
, "configValue")){

591 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

592 if(!
	`°rcmp
(
nodeAâr
, "PolicyFile")){

593 
	`¥ötf
("PolicyFile=");

594 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

595 
	`°r˝y
(
cfg
->
PﬁicyFûeName
, 
nodeTxt
);

596 
	`¥ötf
("%s\n", 
cfg
->
PﬁicyFûeName
);

598 if(!
	`°rcmp
(
nodeAâr
, "SetRecordMode")){

599 
	`¥ötf
("SetRecordMode=");

600 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

601 if(!
	`°rcmp
(
nodeTxt
, "Manual")){

602 
cfg
->
IsAutoIn°u˘
 = 0;

605 if(!
	`°rcmp
(
nodeTxt
, "HalfAuto")){

606 
cfg
->
IsAutoIn°u˘
 = 1;

609 if(!
	`°rcmp
(
nodeTxt
, "Auto")){

610 
cfg
->
IsAutoIn°u˘
 = 2;

613 
	`¥ötf
("%d\n", 
cfg
->
IsAutoIn°u˘
);

615 if(!
	`°rcmp
(
nodeAâr
, "VGADuration")){

616 
	`¥ötf
("VGADuration=");

617 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

618 
cfg
->
VGADuøti⁄
 = 
	`©oi
(
nodeTxt
);

619 
	`¥ötf
("%d\n", 
cfg
->
VGADuøti⁄
);

623 
node0
 = 
	`mxmlGëNextSiblög
(node0);

628 
node
 = 
	`mxmlGëNextSiblög
(node);

633 
node1
 = 
	`mxmlGëNextSiblög
(node1);

636 
	`mxmlDñëe
(
åì
);

638 
	}
}

640 
	$f‹w¨d_èbÀ_lﬂd
(*
fûíame
, 
t_f‹w¨d_èbÀ
 *
f‹w¨d_èbÀ
)

643 
FILE
 *
Â
;

644 
mxml_node_t
 *
node1
 = 
NULL
;

645 
mxml_node_t
 *
node
 = 
NULL
;

646 
mxml_node_t
 *
node0
 = 
NULL
;

647 
mxml_node_t
 *
åì
 = 
NULL
;

648 c⁄° *
nodeName
;

650 c⁄° *
nodeAâr
;

654 
Â
 = 
	`f›í
(
fûíame
, "r");

655 if(!
Â
){

656 
	`¥ötf
("canÇot open specified xml\n");

660 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

661 
	`f˛o£
(
Â
);

663 if(
åì
 =
NULL
){

664 
	`¥ötf
("load xml failed\n");

668 
node1
 = 
åì
;

669 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

670 
node1
){

671 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

672 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

673 if(!
	`°rcmp
(
nodeName
, "module")){

674 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

675 if(!
	`°rcmp
(
nodeAâr
, "Codec")){

676 
	`¥ötf
("module Codec found\n");

677 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

678 
node
){

679 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

680 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

681 if(!
	`°rcmp
(
nodeName
, "group")){

682 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

683 if(!
	`°rcmp
(
nodeAâr
, "BitRate")){

684 
	`¥ötf
("group BitRate found\n");

685 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

686 
node0
){

687 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

688 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

689 if(!
	`°rcmp
(
nodeName
, "configValue")){

690 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

691 if(!
	`°rcmp
(
nodeAâr
, "VideoStreamToSend")){

692 
	`¥ötf
("VideoStreamToSend=");

693 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

694 
	`¥ötf
("%s\n", 
nodeTxt
);

695 if(
	`°rchr
(
nodeTxt
, '1')){

696 
f‹w¨d_èbÀ
->
ãachî•ecül
 = 1;

698 if(
	`°rchr
(
nodeTxt
, '2')){

699 
f‹w¨d_èbÀ
->
°udít•ecül
 = 1;

701 if(
	`°rchr
(
nodeTxt
, '3')){

702 
f‹w¨d_èbÀ
->
ãachîfuŒ
 = 1;

704 if(
	`°rchr
(
nodeTxt
, '4')){

705 
f‹w¨d_èbÀ
->
°udítfuŒ
 = 1;

707 if(
	`°rchr
(
nodeTxt
, '5')){

708 
f‹w¨d_èbÀ
->
bœckbﬂrd
 = 1;

710 
	`¥ötf
("f‹w¨d_èbÀ->ãachî•ecü»%d\n", 
f‹w¨d_èbÀ
->
ãachî•ecül
);

711 
	`¥ötf
("f‹w¨d_èbÀ->°udít•ecü»%d\n", 
f‹w¨d_èbÀ
->
°udít•ecül
);

712 
	`¥ötf
("f‹w¨d_èbÀ->ãachîfuŒ = %d\n", 
f‹w¨d_èbÀ
->
ãachîfuŒ
);

713 
	`¥ötf
("f‹w¨d_èbÀ->°udítfuŒ = %d\n", 
f‹w¨d_èbÀ
->
°udítfuŒ
);

714 
	`¥ötf
("f‹w¨d_èbÀ->bœckbﬂrd = %d\n", 
f‹w¨d_èbÀ
->
bœckbﬂrd
);

718 
node0
 = 
	`mxmlGëNextSiblög
(node0);

723 
node
 = 
	`mxmlGëNextSiblög
(node);

728 
node1
 = 
	`mxmlGëNextSiblög
(node1);

731 
	`mxmlDñëe
(
åì
);

734 
	}
}

735 
	$ˇm_∑øm_lﬂd
(*
fûíame
, *
víd‹
, *
modñ
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

737 
FILE
 *
Â
;

738 
mxml_node_t
 *
node1
 = 
NULL
;

739 
mxml_node_t
 *
node
 = 
NULL
;

740 
mxml_node_t
 *
node0
 = 
NULL
;

741 
mxml_node_t
 *
åì
 = 
NULL
;

742 c⁄° *
nodeName
;

744 c⁄° *
nodeAâr
;

748 
Â
 = 
	`f›í
(
fûíame
, "r");

749 if(!
Â
){

750 
	`¥ötf
("canÇot open specified xml\n");

754 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

755 
	`f˛o£
(
Â
);

757 if(
åì
 =
NULL
){

758 
	`¥ötf
("load xml failed\n");

762 
node1
 = 
åì
;

763 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

764 
node1
){

765 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

766 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

767 if(!
	`°rcmp
(
nodeName
, "module")){

768 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

769 if(!
	`°rcmp
(
nodeAâr
, 
víd‹
)){

770 
	`¥ötf
("moduÀ %†found\n", 
víd‹
);

771 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

772 
node
){

773 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

774 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

775 if(!
	`°rcmp
(
nodeName
, "group")){

776 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

777 if(!
	`°rcmp
(
nodeAâr
, 
modñ
)){

778 
	`¥ötf
("grou∞%†found\n", 
modñ
);

779 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

780 
node0
){

781 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

782 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

783 if(!
	`°rcmp
(
nodeName
, "configValue")){

784 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

785 if(!
	`°rcmp
(
nodeAâr
, "PanMinAngle")){

786 
	`¥ötf
("PanMinAngle=");

787 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

788 
ˇmîa_hﬁdî
->
∑n_™gÀ_À·
 = 
	`©oi
(
nodeTxt
);

789 
	`¥ötf
("%f\n", 
ˇmîa_hﬁdî
->
∑n_™gÀ_À·
);

791 if(!
	`°rcmp
(
nodeAâr
, "PanMaxAngle")){

792 
	`¥ötf
("PanMaxAngle=");

793 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

794 
ˇmîa_hﬁdî
->
∑n_™gÀ_right
 = 
	`©oi
(
nodeTxt
);

795 
	`¥ötf
("%f\n", 
ˇmîa_hﬁdî
->
∑n_™gÀ_right
);

797 if(!
	`°rcmp
(
nodeAâr
, "TiltMinAngle")){

798 
	`¥ötf
("TiltMinAngle=");

799 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

800 
ˇmîa_hﬁdî
->
tût_™gÀ_down
 = 
	`©oi
(
nodeTxt
);

801 
	`¥ötf
("%f\n", 
ˇmîa_hﬁdî
->
tût_™gÀ_down
);

803 if(!
	`°rcmp
(
nodeAâr
, "TiltMaxAngle")){

804 
	`¥ötf
("TiltMaxAngle=");

805 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

806 
ˇmîa_hﬁdî
->
tût_™gÀ_up
 = 
	`©oi
(
nodeTxt
);

807 
	`¥ötf
("%f\n", 
ˇmîa_hﬁdî
->
tût_™gÀ_up
);

809 if(!
	`°rcmp
(
nodeAâr
, "PanLeftPos")){

810 
	`¥ötf
("PanLeftPos=");

811 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

812 
ˇmîa_hﬁdî
->
∑n_mö
 = 
	`©oi
(
nodeTxt
);

813 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
∑n_mö
);

815 if(!
	`°rcmp
(
nodeAâr
, "PanRightPos")){

816 
	`¥ötf
("PanRightPos=");

817 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

818 
ˇmîa_hﬁdî
->
∑n_max
 = 
	`©oi
(
nodeTxt
);

819 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
∑n_max
);

821 if(!
	`°rcmp
(
nodeAâr
, "TiltLeftPos")){

822 
	`¥ötf
("TiltDownPos=");

823 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

824 
ˇmîa_hﬁdî
->
tût_mö
 = 
	`©oi
(
nodeTxt
);

825 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
tût_mö
);

827 if(!
	`°rcmp
(
nodeAâr
, "TiltRightPos")){

828 
	`¥ötf
("TiltUpPos=");

829 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

830 
ˇmîa_hﬁdî
->
tût_max
 = 
	`©oi
(
nodeTxt
);

831 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
tût_max
);

833 if(!
	`°rcmp
(
nodeAâr
, "WidePos")){

834 
	`¥ötf
("WidePos=");

835 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

836 
ˇmîa_hﬁdî
->
zoom_mö
 = 
	`©oi
(
nodeTxt
);

837 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
zoom_mö
);

839 if(!
	`°rcmp
(
nodeAâr
, "TelePos")){

840 
	`¥ötf
("TelePos=");

841 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

842 
ˇmîa_hﬁdî
->
zoom_max
 = 
	`©oi
(
nodeTxt
);

843 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
zoom_max
);

845 if(!
	`°rcmp
(
nodeAâr
, "WideView")){

846 
	`¥ötf
("WideView=");

847 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

848 
ˇmîa_hﬁdî
->
võw_™gÀ_max
 = 
	`©of
(
nodeTxt
);

849 
	`¥ötf
("%f\n", 
ˇmîa_hﬁdî
->
võw_™gÀ_max
);

851 if(!
	`°rcmp
(
nodeAâr
, "TeleView")){

852 
	`¥ötf
("TeleView=");

853 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

854 
ˇmîa_hﬁdî
->
võw_™gÀ_mö
 = 
	`©of
(
nodeTxt
);

855 
	`¥ötf
("%f\n", 
ˇmîa_hﬁdî
->
võw_™gÀ_mö
);

859 
node0
 = 
	`mxmlGëNextSiblög
(node0);

864 
node
 = 
	`mxmlGëNextSiblög
(node);

869 
node1
 = 
	`mxmlGëNextSiblög
(node1);

872 
	`mxmlDñëe
(
åì
);

874 
	}
}

876 
	$ãachî_±_•ìd_lﬂd
(*
fûíame
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

878 
FILE
 *
Â
;

879 
mxml_node_t
 *
node1
 = 
NULL
;

880 
mxml_node_t
 *
node
 = 
NULL
;

881 
mxml_node_t
 *
node0
 = 
NULL
;

882 
mxml_node_t
 *
åì
 = 
NULL
;

883 c⁄° *
nodeName
;

885 c⁄° *
nodeAâr
;

889 
Â
 = 
	`f›í
(
fûíame
, "r");

890 if(!
Â
){

891 
	`¥ötf
("canÇot open specified xml\n");

895 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

896 
	`f˛o£
(
Â
);

898 if(
åì
 =
NULL
){

899 
	`¥ötf
("load xml failed\n");

903 
node1
 = 
åì
;

904 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

905 
node1
){

906 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

907 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

908 if(!
	`°rcmp
(
nodeName
, "module")){

909 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

910 if(!
	`°rcmp
(
nodeAâr
, "Analyze")){

911 
	`¥ötf
("module Analyze found\n");

912 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

913 
node
){

914 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

915 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

916 if(!
	`°rcmp
(
nodeName
, "group")){

917 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

918 if(!
	`°rcmp
(
nodeAâr
, "TeacherTrace")){

919 
	`¥ötf
("group TeacherTrace found\n");

920 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

921 
node0
){

922 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

923 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

924 if(!
	`°rcmp
(
nodeName
, "configValue")){

925 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

926 if(!
	`°rcmp
(
nodeAâr
, "PTZSpeedLevel")){

927 
	`¥ötf
("PTZSpeedLevel=");

928 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

929 
ˇmîa_hﬁdî
->
∑n•ìd_u£
 = 
	`©oi
(
nodeTxt
);

930 
ˇmîa_hﬁdî
->
tût•ìd_u£
 = 
	`©oi
(
nodeTxt
);

931 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
∑n•ìd_u£
);

935 
node0
 = 
	`mxmlGëNextSiblög
(node0);

940 
node
 = 
	`mxmlGëNextSiblög
(node);

945 
node1
 = 
	`mxmlGëNextSiblög
(node1);

948 
	`mxmlDñëe
(
åì
);

950 
	}
}

952 
	$ãachî_ex˛ude_lﬂd
(*
fûíame
, *
IsEx˛ude
)

955 
FILE
 *
Â
;

956 
mxml_node_t
 *
node1
 = 
NULL
;

957 
mxml_node_t
 *
node
 = 
NULL
;

958 
mxml_node_t
 *
node0
 = 
NULL
;

959 
mxml_node_t
 *
åì
 = 
NULL
;

960 c⁄° *
nodeName
;

962 c⁄° *
nodeAâr
;

966 
Â
 = 
	`f›í
(
fûíame
, "r");

967 if(!
Â
){

968 
	`¥ötf
("canÇot open specified xml\n");

972 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

973 
	`f˛o£
(
Â
);

975 if(
åì
 =
NULL
){

976 
	`¥ötf
("load xml failed\n");

980 
node1
 = 
åì
;

981 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

982 
node1
){

983 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

984 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

985 if(!
	`°rcmp
(
nodeName
, "module")){

986 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

987 if(!
	`°rcmp
(
nodeAâr
, "Analyze")){

988 
	`¥ötf
("module Analyze found\n");

989 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

990 
node
){

991 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

992 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

993 if(!
	`°rcmp
(
nodeName
, "group")){

994 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

995 if(!
	`°rcmp
(
nodeAâr
, "TeacherTrace")){

996 
	`¥ötf
("group TeacherTrace found\n");

997 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

998 
node0
){

999 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1000 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1001 if(!
	`°rcmp
(
nodeName
, "configValue")){

1002 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1003 if(!
	`°rcmp
(
nodeAâr
, "IsExclude")){

1004 
	`¥ötf
("IsExclude=");

1005 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1006 *
IsEx˛ude
 = 
	`©oi
(
nodeTxt
);

1007 
	`¥ötf
("%d\n", *
IsEx˛ude
);

1011 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1016 
node
 = 
	`mxmlGëNextSiblög
(node);

1021 
node1
 = 
	`mxmlGëNextSiblög
(node1);

1024 
	`mxmlDñëe
(
åì
);

1026 
	}
}

1028 
	$°udít_±_•ìd_lﬂd
(*
fûíame
, 
t_ˇmîa_hﬁdî
 *
ˇmîa_hﬁdî
)

1030 
FILE
 *
Â
;

1031 
mxml_node_t
 *
node1
 = 
NULL
;

1032 
mxml_node_t
 *
node
 = 
NULL
;

1033 
mxml_node_t
 *
node0
 = 
NULL
;

1034 
mxml_node_t
 *
åì
 = 
NULL
;

1035 c⁄° *
nodeName
;

1037 c⁄° *
nodeAâr
;

1041 
Â
 = 
	`f›í
(
fûíame
, "r");

1042 if(!
Â
){

1043 
	`¥ötf
("canÇot open specified xml\n");

1047 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

1048 
	`f˛o£
(
Â
);

1050 if(
åì
 =
NULL
){

1051 
	`¥ötf
("load xml failed\n");

1055 
node1
 = 
åì
;

1056 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

1057 
node1
){

1058 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

1059 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

1060 if(!
	`°rcmp
(
nodeName
, "module")){

1061 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

1062 if(!
	`°rcmp
(
nodeAâr
, "Analyze")){

1063 
	`¥ötf
("module Analyze found\n");

1064 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

1065 
node
){

1066 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1067 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1068 if(!
	`°rcmp
(
nodeName
, "group")){

1069 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1070 if(!
	`°rcmp
(
nodeAâr
, "StudentTrace")){

1071 
	`¥ötf
("group StudentTrace found\n");

1072 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1073 
node0
){

1074 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1075 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1076 if(!
	`°rcmp
(
nodeName
, "configValue")){

1077 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1078 if(!
	`°rcmp
(
nodeAâr
, "PTZSpeedLevel")){

1079 
	`¥ötf
("PTZSpeedLevel=");

1080 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1081 
ˇmîa_hﬁdî
->
∑n•ìd_u£
 = 
	`©oi
(
nodeTxt
);

1082 
ˇmîa_hﬁdî
->
tût•ìd_u£
 = 
	`©oi
(
nodeTxt
);

1083 
	`¥ötf
("%d\n", 
ˇmîa_hﬁdî
->
∑n•ìd_u£
);

1087 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1092 
node
 = 
	`mxmlGëNextSiblög
(node);

1097 
node1
 = 
	`mxmlGëNextSiblög
(node1);

1100 
	`mxmlDñëe
(
åì
);

1102 
	}
}

1104 
	$°udít_åackög_geomëry_lﬂd
(*
fûíame
, 
t_°udít_åackög_geomëry
 *
°udít_åackög_geomëry
)

1107 
FILE
 *
Â
;

1108 
mxml_node_t
 *
node1
 = 
NULL
;

1109 
mxml_node_t
 *
node
 = 
NULL
;

1110 
mxml_node_t
 *
node0
 = 
NULL
;

1111 
mxml_node_t
 *
åì
 = 
NULL
;

1112 c⁄° *
nodeName
;

1114 c⁄° *
nodeAâr
;

1118 
Â
 = 
	`f›í
(
fûíame
, "r");

1119 if(!
Â
){

1120 
	`¥ötf
("canÇot open specified xml\n");

1124 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

1125 
	`f˛o£
(
Â
);

1127 if(
åì
 =
NULL
){

1128 
	`¥ötf
("load xml failed\n");

1132 
node1
 = 
åì
;

1133 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

1134 
node1
){

1135 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

1136 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

1137 if(!
	`°rcmp
(
nodeName
, "module")){

1138 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

1139 if(!
	`°rcmp
(
nodeAâr
, "Analyze")){

1140 
	`¥ötf
("module Analyze found\n");

1141 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

1142 
node
){

1143 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1144 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1145 if(!
	`°rcmp
(
nodeName
, "group")){

1146 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1147 if(!
	`°rcmp
(
nodeAâr
, "StudentTrace")){

1148 
	`¥ötf
("group StudentTrace found\n");

1149 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1150 
node0
){

1151 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1152 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1153 if(!
	`°rcmp
(
nodeName
, "configValue")){

1154 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1155 if(!
	`°rcmp
(
nodeAâr
, "Camera1PosX")){

1156 
	`¥ötf
("Camera1PosX=");

1157 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1158 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
x
 = 
	`©oi
(
nodeTxt
);

1159 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
x
);

1161 if(!
	`°rcmp
(
nodeAâr
, "Camera1PosY")){

1162 
	`¥ötf
("Camera1PosY=");

1163 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1164 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
y
 = 
	`©oi
(
nodeTxt
);

1165 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
y
);

1167 if(!
	`°rcmp
(
nodeAâr
, "Camera1PosZ")){

1168 
	`¥ötf
("Camera1PosZ=");

1169 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1170 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
z
 = 
	`©oi
(
nodeTxt
);

1171 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
z
);

1173 if(!
	`°rcmp
(
nodeAâr
, "Camera1PitchAngle")){

1174 
	`¥ötf
("Camera1PitchAngle=");

1175 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1176 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
™gÀ_v
 = 
	`©of
(
nodeTxt
);

1177 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
™gÀ_v
);

1179 if(!
	`°rcmp
(
nodeAâr
, "Camera1AzimuthalAngle")){

1180 
	`¥ötf
("Camera1AzimuthalAngle=");

1181 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1182 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
™gÀ_h
 = 
	`©of
(
nodeTxt
);

1183 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
™gÀ_h
);

1185 if(!
	`°rcmp
(
nodeAâr
, "Camera1ViewAngle")){

1186 
	`¥ötf
("Camera1ViewAngle=");

1187 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1188 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
võw_™gÀ
 = 
	`©of
(
nodeTxt
);

1189 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[0].
võw_™gÀ
);

1191 if(!
	`°rcmp
(
nodeAâr
, "Camera2PosX")){

1192 
	`¥ötf
("Camera2PosX=");

1193 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1194 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
x
 = 
	`©oi
(
nodeTxt
);

1195 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
x
);

1197 if(!
	`°rcmp
(
nodeAâr
, "Camera2PosY")){

1198 
	`¥ötf
("Camera2PosY=");

1199 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1200 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
y
 = 
	`©oi
(
nodeTxt
);

1201 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
y
);

1203 if(!
	`°rcmp
(
nodeAâr
, "Camera2PosZ")){

1204 
	`¥ötf
("Camera2PosZ=");

1205 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1206 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
z
 = 
	`©oi
(
nodeTxt
);

1207 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
z
);

1209 if(!
	`°rcmp
(
nodeAâr
, "Camera2PitchAngle")){

1210 
	`¥ötf
("Camera2PitchAngle=");

1211 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1212 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
™gÀ_v
 = 
	`©of
(
nodeTxt
);

1213 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
™gÀ_v
);

1215 if(!
	`°rcmp
(
nodeAâr
, "Camera2AzimuthalAngle")){

1216 
	`¥ötf
("Camera2AzimuthalAngle=");

1217 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1218 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
™gÀ_h
 = 
	`©of
(
nodeTxt
);

1219 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
™gÀ_h
);

1221 if(!
	`°rcmp
(
nodeAâr
, "Camera2ViewAngle")){

1222 
	`¥ötf
("Camera2ViewAngle=");

1223 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1224 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
võw_™gÀ
 = 
	`©of
(
nodeTxt
);

1225 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[1].
võw_™gÀ
);

1227 if(!
	`°rcmp
(
nodeAâr
, "StudentSpecialPosX")){

1228 
	`¥ötf
("StudentSpecialPosX=");

1229 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1230 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
x
 = 
	`©oi
(
nodeTxt
);

1231 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
x
);

1233 if(!
	`°rcmp
(
nodeAâr
, "StudentSpecialPosY")){

1234 
	`¥ötf
("StudentSpecialPosY=");

1235 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1236 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
y
 = 
	`©oi
(
nodeTxt
);

1237 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
y
);

1239 if(!
	`°rcmp
(
nodeAâr
, "StudentSpecialPosZ")){

1240 
	`¥ötf
("StudentSpecialPosZ=");

1241 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1242 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
z
 = 
	`©oi
(
nodeTxt
);

1243 
	`¥ötf
("%d\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
z
);

1245 if(!
	`°rcmp
(
nodeAâr
, "StudentSpecPitchAngle")){

1246 
	`¥ötf
("StudentSpecPitchAngle=");

1247 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1248 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
™gÀ_v
 = 
	`©of
(
nodeTxt
);

1249 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
™gÀ_v
);

1251 if(!
	`°rcmp
(
nodeAâr
, "StudentSpecAzimuthalAngle")){

1252 
	`¥ötf
("StudentSpecAzimuthalAngle=");

1253 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1254 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
™gÀ_h
 = 
	`©of
(
nodeTxt
);

1255 
	`¥ötf
("%f\n", 
°udít_åackög_geomëry
->
ˇmîa_geomëry
[2].
™gÀ_h
);

1259 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1264 
node
 = 
	`mxmlGëNextSiblög
(node);

1269 
node1
 = 
	`mxmlGëNextSiblög
(node1);

1272 
	`mxmlDñëe
(
åì
);

1274 
	}
}

1276 
	$s¸ìn_geomëry_lﬂd
(*
fûíame
, 
t_s¸ìn_geomëry
 *
s¸ìn_geomëry
)

1278 
FILE
 *
Â
;

1279 
mxml_node_t
 *
node1
 = 
NULL
;

1280 
mxml_node_t
 *
node
 = 
NULL
;

1281 
mxml_node_t
 *
node0
 = 
NULL
;

1282 
mxml_node_t
 *
åì
 = 
NULL
;

1283 c⁄° *
nodeName
;

1285 c⁄° *
nodeAâr
;

1289 
Â
 = 
	`f›í
(
fûíame
, "r");

1290 if(!
Â
){

1291 
	`¥ötf
("canÇot open specified xml\n");

1295 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

1296 
	`f˛o£
(
Â
);

1298 if(
åì
 =
NULL
){

1299 
	`¥ötf
("load xml failed\n");

1303 
node1
 = 
åì
;

1304 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

1305 
node1
){

1306 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

1307 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

1308 if(!
	`°rcmp
(
nodeName
, "module")){

1309 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

1310 if(!
	`°rcmp
(
nodeAâr
, "Analyze")){

1311 
	`¥ötf
("module Analyze found\n");

1312 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

1313 
node
){

1314 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1315 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1316 if(!
	`°rcmp
(
nodeName
, "group")){

1317 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1318 if(!
	`°rcmp
(
nodeAâr
, "TeacherTrace")){

1319 
	`¥ötf
("group TeacherTrace found\n");

1320 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1321 
node0
){

1322 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1323 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1324 if(!
	`°rcmp
(
nodeName
, "configValue")){

1325 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1326 if(!
	`°rcmp
(
nodeAâr
, "IsExcludeFeatureDetect")){

1327 
	`¥ötf
("HasScreen=");

1328 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1329 
s¸ìn_geomëry
->
has_s¸ìn
 = 
	`©oi
(
nodeTxt
);

1330 
	`¥ötf
("%d\n", 
s¸ìn_geomëry
->
has_s¸ìn
);

1333 if(!
	`°rcmp
(
nodeAâr
, "ExcludeFDLeftX")){

1334 
	`¥ötf
("ScreenÜeft=");

1335 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1336 
s¸ìn_geomëry
->
x_À·
 = 
	`©oi
(
nodeTxt
);

1337 
	`¥ötf
("%d\n", 
s¸ìn_geomëry
->
x_À·
);

1340 if(!
	`°rcmp
(
nodeAâr
, "ExcludeFDRightX")){

1341 
	`¥ötf
("ScreenÑight=");

1342 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1343 
s¸ìn_geomëry
->
x_right
 = 
	`©oi
(
nodeTxt
);

1344 
	`¥ötf
("%d\n", 
s¸ìn_geomëry
->
x_right
);

1347 if(!
	`°rcmp
(
nodeAâr
, "ExcludeFDY")){

1348 
	`¥ötf
("Screen Y=");

1349 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1350 
s¸ìn_geomëry
->
y
 = 
	`©oi
(
nodeTxt
);

1351 
	`¥ötf
("%d\n", 
s¸ìn_geomëry
->
y
);

1354 if(!
	`°rcmp
(
nodeAâr
, "TeacherSpecAzimuthalAngle")){

1355 
	`¥ötf
("TeacherSpecAzimuthalAngle=");

1356 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1357 
s¸ìn_geomëry
->
ˇmîa_öôül_™gÀ
 = 
	`©of
(
nodeTxt
);

1358 
	`¥ötf
("%f\n", 
s¸ìn_geomëry
->
ˇmîa_öôül_™gÀ
);

1362 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1367 
node
 = 
	`mxmlGëNextSiblög
(node);

1372 
node1
 = 
	`mxmlGëNextSiblög
(node1);

1375 
	`mxmlDñëe
(
åì
);

1377 
	}
}

1379 
	$°r2°©e
(c⁄° *
°©e_°r
){

1380 
ªt
;

1381 
ªt
 = 
FSM_TEACHER_PANORAMA
;

1382 if(!
	`°rcmp
(
°©e_°r
, "VGA")){

1383 
ªt
 = 
FSM_VGA
;

1385 if(!
	`°rcmp
(
°©e_°r
, "TeacherSpecial")){

1386 
ªt
 = 
FSM_TEACHER_CLOSEUP
;

1388 if(!
	`°rcmp
(
°©e_°r
, "StudentSpecial")){

1389 
ªt
 = 
FSM_STUDENT_CLOSEUP
;

1391 if(!
	`°rcmp
(
°©e_°r
, "TeacherFull")){

1392 
ªt
 = 
FSM_TEACHER_PANORAMA
;

1394 if(!
	`°rcmp
(
°©e_°r
, "StudentFull")){

1395 
ªt
 = 
FSM_STUDENT_PANORAMA
;

1397 if(!
	`°rcmp
(
°©e_°r
, "Blackboard")){

1398 
ªt
 = 
FSM_BOARD_CLOSEUP
;

1400 if(!
	`°rcmp
(
°©e_°r
, "VGAWithTeacherSpecial")){

1401 
ªt
 = 
FSM_VGA_PIP_TEACHER_CLOSEUP
;

1403 if(!
	`°rcmp
(
°©e_°r
, "TeacherSpecialWithStudentSpecial")){

1404 
ªt
 = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

1406 if(!
	`°rcmp
(
°©e_°r
, "BlackboardWithStudentSpecial")){

1407 
ªt
 = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

1409  
ªt
;

1410 
	}
}

1412 
	$fûl_å™sôi⁄_èbÀ
(c⁄° *
nodeAâr
, 
fsm_°©e
, 
mxml_node_t
 *
node0
, 
t_föôe_°©e_machöe
 *
fsm
)

1414 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_1")){

1415 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1416 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_1
] = 
	`°r2°©e
(
nodeTxt
);

1417 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_1] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_1
]);

1419 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_2")){

1420 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1421 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_2
] = 
	`°r2°©e
(
nodeTxt
);

1422 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_2] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_2
]);

1424 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_3")){

1425 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1426 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_3
] = 
	`°r2°©e
(
nodeTxt
);

1427 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_3] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_3
]);

1429 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_4")){

1430 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1431 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_4
] = 
	`°r2°©e
(
nodeTxt
);

1432 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_4] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_4
]);

1434 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_5")){

1435 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1436 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_5
] = 
	`°r2°©e
(
nodeTxt
);

1437 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_5] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_5
]);

1439 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_6")){

1440 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1441 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_6
] = 
	`°r2°©e
(
nodeTxt
);

1442 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_6] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_6
]);

1444 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_7")){

1445 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1446 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_7
] = 
	`°r2°©e
(
nodeTxt
);

1447 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_7] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_7
]);

1449 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_8")){

1450 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1451 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_8
] = 
	`°r2°©e
(
nodeTxt
);

1452 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_8] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_8
]);

1454 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_9")){

1455 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1456 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_9
] = 
	`°r2°©e
(
nodeTxt
);

1457 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_9] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_9
]);

1459 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_10")){

1460 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1461 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_10
] = 
	`°r2°©e
(
nodeTxt
);

1462 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_10] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_10
]);

1464 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_11")){

1465 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1466 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_11
] = 
	`°r2°©e
(
nodeTxt
);

1467 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_11] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_11
]);

1469 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_12")){

1470 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1471 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_12
] = 
	`°r2°©e
(
nodeTxt
);

1472 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_12] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_12
]);

1474 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_13")){

1475 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1476 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_13
] = 
	`°r2°©e
(
nodeTxt
);

1477 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_13] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_13
]);

1479 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_14")){

1480 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1481 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_14
] = 
	`°r2°©e
(
nodeTxt
);

1482 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_14] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_14
]);

1484 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_15")){

1485 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1486 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_15
] = 
	`°r2°©e
(
nodeTxt
);

1487 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_15] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_15
]);

1489 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_16")){

1490 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1491 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_16
] = 
	`°r2°©e
(
nodeTxt
);

1492 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_16] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_16
]);

1494 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_17")){

1495 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1496 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_17
] = 
	`°r2°©e
(
nodeTxt
);

1497 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_17] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_17
]);

1499 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_18")){

1500 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1501 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_18
] = 
	`°r2°©e
(
nodeTxt
);

1502 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_18] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_18
]);

1504 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_19")){

1505 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1506 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_19
] = 
	`°r2°©e
(
nodeTxt
);

1507 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_19] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_19
]);

1509 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_20")){

1510 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1511 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_20
] = 
	`°r2°©e
(
nodeTxt
);

1512 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_20] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_20
]);

1514 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_21")){

1515 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1516 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_21
] = 
	`°r2°©e
(
nodeTxt
);

1517 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_21] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_21
]);

1519 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_22")){

1520 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1521 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_22
] = 
	`°r2°©e
(
nodeTxt
);

1522 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_22] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_22
]);

1524 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_23")){

1525 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1526 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_23
] = 
	`°r2°©e
(
nodeTxt
);

1527 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_23] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_23
]);

1529 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_24")){

1530 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1531 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_24
] = 
	`°r2°©e
(
nodeTxt
);

1532 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_24] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_24
]);

1534 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_25")){

1535 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1536 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_25
] = 
	`°r2°©e
(
nodeTxt
);

1537 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_25] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_25
]);

1539 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_26")){

1540 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1541 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_26
] = 
	`°r2°©e
(
nodeTxt
);

1542 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_26] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_26
]);

1544 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_27")){

1545 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1546 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_27
] = 
	`°r2°©e
(
nodeTxt
);

1547 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_27] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_27
]);

1549 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_28")){

1550 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1551 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_28
] = 
	`°r2°©e
(
nodeTxt
);

1552 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_28] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_28
]);

1554 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_29")){

1555 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1556 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_29
] = 
	`°r2°©e
(
nodeTxt
);

1557 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_29] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_29
]);

1559 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_30")){

1560 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1561 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_30
] = 
	`°r2°©e
(
nodeTxt
);

1562 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_30] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_30
]);

1564 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_31")){

1565 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1566 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_31
] = 
	`°r2°©e
(
nodeTxt
);

1567 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_31] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_31
]);

1569 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_32")){

1570 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1571 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_32
] = 
	`°r2°©e
(
nodeTxt
);

1572 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_32] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_32
]);

1574 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_33")){

1575 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1576 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_33
] = 
	`°r2°©e
(
nodeTxt
);

1577 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_33] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_33
]);

1579 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_34")){

1580 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1581 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_34
] = 
	`°r2°©e
(
nodeTxt
);

1582 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_34] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_34
]);

1584 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_35")){

1585 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1586 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_35
] = 
	`°r2°©e
(
nodeTxt
);

1587 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_35] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_35
]);

1589 if(!
	`°rcmp
(
nodeAâr
, "COND_COMBINATION_36")){

1590 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1591 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[
fsm_°©e
][
COND_COMBINATION_36
] = 
	`°r2°©e
(
nodeTxt
);

1592 
	`¥ötf
("å™sôi⁄ÅabÀ[%d][COND_COMBINATION_36] = %d\n",
fsm_°©e
, 
fsm
->
å™sôi⁄_èbÀ
->
ôem
[fsm_°©e][
COND_COMBINATION_36
]);

1594 
	}
}

1596 
	$swôch_pﬁicy_lﬂd
(*
fûíame
, 
t_föôe_°©e_machöe
 *
fsm
)

1598 
FILE
 *
Â
;

1599 
mxml_node_t
 *
node1
 = 
NULL
;

1600 
mxml_node_t
 *
node
 = 
NULL
;

1601 
mxml_node_t
 *
node0
 = 
NULL
;

1602 
mxml_node_t
 *
åì
 = 
NULL
;

1603 c⁄° *
nodeName
;

1605 c⁄° *
nodeAâr
;

1609 
Â
 = 
	`f›í
(
fûíame
, "r");

1610 if(!
Â
){

1611 
	`¥ötf
("canÇot open specified xml\n");

1616 
	`mem£t
(
fsm
->
å™sôi⁄_èbÀ
, -1, (
t_å™sôi⁄_èbÀ
));

1618 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

1619 
	`f˛o£
(
Â
);

1621 if(
åì
 =
NULL
){

1622 
	`¥ötf
("load xml failed\n");

1626 
node1
 = 
åì
;

1627 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

1628 
node1
){

1629 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

1630 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

1631 if(!
	`°rcmp
(
nodeName
, "module")){

1632 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

1633 if(!
	`°rcmp
(
nodeAâr
, "FSM")){

1634 
	`¥ötf
("module FSM found\n");

1635 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

1636 
node
){

1637 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1638 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1639 if(!
	`°rcmp
(
nodeName
, "group")){

1640 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1641 if(!
	`°rcmp
(
nodeAâr
, "INITIAL")){

1642 
	`¥ötf
("group INITIAL found\n");

1643 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1644 
node0
){

1645 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1646 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1647 if(!
	`°rcmp
(
nodeName
, "configValue")){

1648 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1649 if(!
	`°rcmp
(
nodeAâr
, "NOCOND")){

1650 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1651 
fsm
->
öôül_°©e
 = 
	`°r2°©e
(
nodeTxt
);

1652 
	`¥ötf
("fsm cuºíà°©ê%d\n", 
fsm
->
cuºít_°©e
);

1656 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1659 if(!
	`°rcmp
(
nodeAâr
, "VGA")){

1660 
	`¥ötf
("group VGA found\n");

1661 
fsm_°©e
 = 
FSM_VGA
;

1662 
	`¥ötf
("fsm_°©ê%d\n", 
fsm_°©e
);

1663 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1664 
node0
){

1665 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1666 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1667 if(!
	`°rcmp
(
nodeName
, "configValue")){

1668 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1669 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1672 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1677 if(!
	`°rcmp
(
nodeAâr
, "TeacherSpecial")){

1678 
	`¥ötf
("group TeacherSpecial found\n");

1679 
fsm_°©e
 = 
FSM_TEACHER_CLOSEUP
;

1680 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1681 
node0
){

1682 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1683 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1684 if(!
	`°rcmp
(
nodeName
, "configValue")){

1685 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1686 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1689 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1694 if(!
	`°rcmp
(
nodeAâr
, "StudentSpecial")){

1695 
	`¥ötf
("group StudentSpecial found\n");

1696 
fsm_°©e
 = 
FSM_STUDENT_CLOSEUP
;

1697 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1698 
node0
){

1699 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1700 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1701 if(!
	`°rcmp
(
nodeName
, "configValue")){

1702 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1703 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1706 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1711 if(!
	`°rcmp
(
nodeAâr
, "TeacherFull")){

1712 
	`¥ötf
("group TeacherFull found\n");

1713 
fsm_°©e
 = 
FSM_TEACHER_PANORAMA
;

1714 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1715 
node0
){

1716 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1717 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1718 if(!
	`°rcmp
(
nodeName
, "configValue")){

1719 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1720 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1723 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1728 if(!
	`°rcmp
(
nodeAâr
, "StudentFull")){

1729 
	`¥ötf
("group StudentFull found\n");

1730 
fsm_°©e
 = 
FSM_STUDENT_PANORAMA
;

1731 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1732 
node0
){

1733 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1734 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1735 if(!
	`°rcmp
(
nodeName
, "configValue")){

1736 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1737 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1740 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1745 if(!
	`°rcmp
(
nodeAâr
, "Blackboard")){

1746 
	`¥ötf
("group Blackboard found\n");

1747 
fsm_°©e
 = 
FSM_BOARD_CLOSEUP
;

1748 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1749 
node0
){

1750 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1751 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1752 if(!
	`°rcmp
(
nodeName
, "configValue")){

1753 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1754 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1757 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1762 if(!
	`°rcmp
(
nodeAâr
, "VGAWithTeacherSpecial")){

1763 
	`¥ötf
("group VGAWithTeacherSpecial found\n");

1764 
fsm_°©e
 = 
FSM_VGA_PIP_TEACHER_CLOSEUP
;

1765 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1766 
node0
){

1767 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1768 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1769 if(!
	`°rcmp
(
nodeName
, "configValue")){

1770 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1771 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1774 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1779 if(!
	`°rcmp
(
nodeAâr
, "TeacherSpecialWithStudentSpecial")){

1780 
	`¥ötf
("group TeacherSpecialWithStudentSpecial found\n");

1781 
fsm_°©e
 = 
FSM_TEACHER_CLOSEUP_PIP_STUDENT_CLOSEUP
;

1782 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1783 
node0
){

1784 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1785 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1786 if(!
	`°rcmp
(
nodeName
, "configValue")){

1787 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1788 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1791 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1794 if(!
	`°rcmp
(
nodeAâr
, "BlackboardWithStudentSpecial")){

1795 
	`¥ötf
("group BlackboardWithStudentSpecial found\n");

1796 
fsm_°©e
 = 
FSM_BLACKBOARD_PIP_STUDENT_CLOSEUP
;

1797 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1798 
node0
){

1799 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1800 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1801 if(!
	`°rcmp
(
nodeName
, "configValue")){

1802 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1803 
	`fûl_å™sôi⁄_èbÀ
(
nodeAâr
, 
fsm_°©e
, 
node0
, 
fsm
);

1806 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1811 
node
 = 
	`mxmlGëNextSiblög
(node);

1816 
node1
 = 
	`mxmlGëNextSiblög
(node1);

1819 
	`mxmlDñëe
(
åì
);

1821 
	}
}

	@xmlparser.h

8 #i‚de‡
XMLPARSER_H_


9 
	#XMLPARSER_H_


	)

	@xmltmp.c

1 
	~"mxml.h
"

2 
	~<°dio.h
>

4 
	#SYS_CONFIG_FILE_NAME
 "./sys-c⁄fig-v3.xml"

	)

6 
	#AUDIO_BUFFER_A
 ()1

	)

7 
	#AUDIO_BUFFER_B
 ()2

	)

10 
	ss_ªg_vÆue
{

11 
	mªg
;

12 
	mvÆue
;

13 }
	tt_ªg_vÆue
;

16 
audio_equÆizî_öô
(
t_ªg_vÆue
 *
cfg
, 
audio_buf„r_ty≥
);

17 
audio_equÆizî_lﬂd
(*
fûíame
, 
t_ªg_vÆue
 *
cfg
, 
Êag
);

18 
audio_equÆizî_dól
(
t_ªg_vÆue
 *
cfg_A
,Å_ªg_vÆuê*
cfg_B
);

20 
	$maö
(
¨gc
, *
¨gv
[])

22 
t_ªg_vÆue
 
i2c_ªg_vÆue_A
[16];

23 
t_ªg_vÆue
 
i2c_ªg_vÆue_B
[16];

24 
	`audio_equÆizî_öô
(
i2c_ªg_vÆue_A
, 
AUDIO_BUFFER_A
);

25 
	`audio_equÆizî_öô
(
i2c_ªg_vÆue_B
, 
AUDIO_BUFFER_B
);

26 
	`audio_equÆizî_lﬂd
(
SYS_CONFIG_FILE_NAME
, &
i2c_ªg_vÆue_A
[1], 4);

27 
	`audio_equÆizî_dól
(
i2c_ªg_vÆue_A
, 
i2c_ªg_vÆue_B
);

28 
	}
}

30 
	$audio_equÆizî_dól
(
t_ªg_vÆue
 *
cfg_A
,Å_ªg_vÆuê*
cfg_B
)

32 
i
;

33 
cfg_A
++;

35 
i
 = 1; i < 16; i++)

37 
cfg_A
->
vÆue
 -= 48;

38 i‡(
cfg_A
->
vÆue
 >= 0)

39 
cfg_A
->
vÆue
 *= 2;

42 
cfg_A
->
vÆue
 *= 2;

43 
cfg_A
->
vÆue
 = 0xf8 + cfg_A->value;

44 
cfg_A
->
vÆue
 += 2;

46 
cfg_B
->
vÆue
 = 
cfg_A
->value;

47 
cfg_A
++;

49 
	}
}

52 
	$audio_equÆizî_öô
(
t_ªg_vÆue
 *
cfg
, 
audio_buf„r_ty≥
)

54 
i
;

55 
ªg
;

57 
	#REGISTER_ADDRESS
 28

	)

60 i‡(
AUDIO_BUFFER_A
 =
audio_buf„r_ty≥
)

62 
cfg
->
ªg
 = 0;

63 
cfg
->
vÆue
 = 0x08;

65 i‡(
AUDIO_BUFFER_B
 =
audio_buf„r_ty≥
)

67 
cfg
->
ªg
 = 0;

68 
cfg
->
vÆue
 = 0x1a;

71 
ªg
 = 
REGISTER_ADDRESS
;

72 
i
 = 1; i < 16; i++)

74 
cfg
++;

75 
cfg
->
ªg
 =Ñeg;

76 
ªg
 += 4;

78 
	}
}

83 
	$audio_equÆizî_lﬂd
(*
fûíame
, 
t_ªg_vÆue
 *
cfg
, 
Êag
)

85 
FILE
 *
Â
;

86 
mxml_node_t
 *
node1
 = 
NULL
;

87 
mxml_node_t
 *
node
 = 
NULL
;

88 
mxml_node_t
 *
node0
 = 
NULL
;

89 
mxml_node_t
 *
åì
 = 
NULL
;

90 c⁄° *
nodeName
;

91 c⁄° *
nodeAâr
;

93 
Â
 = 
	`f›í
(
fûíame
, "r");

94 if(!
Â
){

95 
	`¥ötf
("canÇot open specified xml\n");

99 
åì
 = 
	`mxmlLﬂdFûe
(
NULL
,
Â
,
MXML_TEXT_CALLBACK
);

100 
	`f˛o£
(
Â
);

102 if(
åì
 =
NULL
){

103 
	`¥ötf
("load xml failed\n");

107 
node1
 = 
åì
;

108 
node1
 = 
	`mxmlFödEÀmít
“ode1,node1, "moduÀ", 
NULL
, NULL, 
MXML_DESCEND
);

109 
node1
){

110 if(
	`mxmlGëTy≥
(
node1
)==
MXML_ELEMENT
){

111 
nodeName
 = 
	`mxmlGëEÀmít
(
node1
);

112 if(!
	`°rcmp
(
nodeName
, "module")){

113 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node1
, "name");

114 if(!
	`°rcmp
(
nodeAâr
, "AudioSampleSocConfig")){

115 
	`¥ötf
("module AudioSampleSocConfig found\n");

116 
node
 = 
	`mxmlGëFú°Chûd
(
node1
);

117 
Êag
)

120 
node
){

121 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

122 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

123 if(!
	`°rcmp
(
nodeName
, "group")){

124 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

125 if(!
	`°rcmp
(
nodeAâr
, "Float")){

126 
	`¥ötf
("group Float found\n");

127 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

128 
node0
){

129 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

130 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

131 if(!
	`°rcmp
(
nodeName
, "configValue")){

132 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

133 if(!
	`°rcmp
(
nodeAâr
, "1")){

134 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

135 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

136 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

137 
cfg
++;

139 if(!
	`°rcmp
(
nodeAâr
, "2")){

140 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

141 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

142 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

143 
cfg
++;

145 if(!
	`°rcmp
(
nodeAâr
, "3")){

146 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

147 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

148 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

149 
cfg
++;

151 if(!
	`°rcmp
(
nodeAâr
, "4")){

152 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

153 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

154 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

155 
cfg
++;

157 if(!
	`°rcmp
(
nodeAâr
, "5")){

158 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

159 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

160 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

161 
cfg
++;

163 if(!
	`°rcmp
(
nodeAâr
, "6")){

164 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

165 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

166 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

167 
cfg
++;

169 if(!
	`°rcmp
(
nodeAâr
, "7")){

170 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

171 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

172 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

173 
cfg
++;

175 if(!
	`°rcmp
(
nodeAâr
, "8")){

176 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

177 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

178 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

179 
cfg
++;

181 if(!
	`°rcmp
(
nodeAâr
, "9")){

182 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

183 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

184 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

185 
cfg
++;

187 if(!
	`°rcmp
(
nodeAâr
, "10")){

188 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

189 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

190 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

191 
cfg
++;

193 if(!
	`°rcmp
(
nodeAâr
, "11")){

194 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

195 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

196 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

197 
cfg
++;

199 if(!
	`°rcmp
(
nodeAâr
, "12")){

200 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

201 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

202 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

203 
cfg
++;

205 if(!
	`°rcmp
(
nodeAâr
, "13")){

206 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

207 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

208 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

209 
cfg
++;

211 if(!
	`°rcmp
(
nodeAâr
, "14")){

212 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

213 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

214 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

215 
cfg
++;

217 if(!
	`°rcmp
(
nodeAâr
, "15")){

218 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

219 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

220 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

221 
cfg
++;

225 
node0
 = 
	`mxmlGëNextSiblög
(node0);

230 
node
 = 
	`mxmlGëNextSiblög
(node);

234 
node
){

235 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

236 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

237 if(!
	`°rcmp
(
nodeName
, "group")){

238 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

239 if(!
	`°rcmp
(
nodeAâr
, "Rap")){

240 
	`¥ötf
("group Rap found\n");

241 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

242 
node0
){

243 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

244 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

245 if(!
	`°rcmp
(
nodeName
, "configValue")){

246 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

247 if(!
	`°rcmp
(
nodeAâr
, "1")){

248 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

249 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

250 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

251 
cfg
++;

253 if(!
	`°rcmp
(
nodeAâr
, "2")){

254 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

255 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

256 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

257 
cfg
++;

259 if(!
	`°rcmp
(
nodeAâr
, "3")){

260 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

261 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

262 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

263 
cfg
++;

265 if(!
	`°rcmp
(
nodeAâr
, "4")){

266 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

267 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

268 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

269 
cfg
++;

271 if(!
	`°rcmp
(
nodeAâr
, "5")){

272 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

273 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

274 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

275 
cfg
++;

277 if(!
	`°rcmp
(
nodeAâr
, "6")){

278 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

279 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

280 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

281 
cfg
++;

283 if(!
	`°rcmp
(
nodeAâr
, "7")){

284 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

285 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

286 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

287 
cfg
++;

289 if(!
	`°rcmp
(
nodeAâr
, "8")){

290 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

291 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

292 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

293 
cfg
++;

295 if(!
	`°rcmp
(
nodeAâr
, "9")){

296 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

297 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

298 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

299 
cfg
++;

301 if(!
	`°rcmp
(
nodeAâr
, "10")){

302 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

303 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

304 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

305 
cfg
++;

307 if(!
	`°rcmp
(
nodeAâr
, "11")){

308 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

309 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

310 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

311 
cfg
++;

313 if(!
	`°rcmp
(
nodeAâr
, "12")){

314 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

315 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

316 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

317 
cfg
++;

319 if(!
	`°rcmp
(
nodeAâr
, "13")){

320 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

321 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

322 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

323 
cfg
++;

325 if(!
	`°rcmp
(
nodeAâr
, "14")){

326 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

327 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

328 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

329 
cfg
++;

331 if(!
	`°rcmp
(
nodeAâr
, "15")){

332 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

333 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

334 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

335 
cfg
++;

339 
node0
 = 
	`mxmlGëNextSiblög
(node0);

344 
node
 = 
	`mxmlGëNextSiblög
(node);

348 
node
){

349 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

350 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

351 if(!
	`°rcmp
(
nodeName
, "group")){

352 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

353 if(!
	`°rcmp
(
nodeAâr
, "Hip-Hop")){

354 
	`¥ötf
("group Hip-Hop found\n");

355 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

356 
node0
){

357 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

358 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

359 if(!
	`°rcmp
(
nodeName
, "configValue")){

360 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

361 if(!
	`°rcmp
(
nodeAâr
, "1")){

362 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

363 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

364 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

365 
cfg
++;

367 if(!
	`°rcmp
(
nodeAâr
, "2")){

368 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

369 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

370 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

371 
cfg
++;

373 if(!
	`°rcmp
(
nodeAâr
, "3")){

374 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

375 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

376 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

377 
cfg
++;

379 if(!
	`°rcmp
(
nodeAâr
, "4")){

380 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

381 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

382 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

383 
cfg
++;

385 if(!
	`°rcmp
(
nodeAâr
, "5")){

386 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

387 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

388 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

389 
cfg
++;

391 if(!
	`°rcmp
(
nodeAâr
, "6")){

392 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

393 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

394 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

395 
cfg
++;

397 if(!
	`°rcmp
(
nodeAâr
, "7")){

398 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

399 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

400 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

401 
cfg
++;

403 if(!
	`°rcmp
(
nodeAâr
, "8")){

404 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

405 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

406 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

407 
cfg
++;

409 if(!
	`°rcmp
(
nodeAâr
, "9")){

410 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

411 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

412 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

413 
cfg
++;

415 if(!
	`°rcmp
(
nodeAâr
, "10")){

416 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

417 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

418 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

419 
cfg
++;

421 if(!
	`°rcmp
(
nodeAâr
, "11")){

422 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

423 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

424 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

425 
cfg
++;

427 if(!
	`°rcmp
(
nodeAâr
, "12")){

428 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

429 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

430 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

431 
cfg
++;

433 if(!
	`°rcmp
(
nodeAâr
, "13")){

434 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

435 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

436 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

437 
cfg
++;

439 if(!
	`°rcmp
(
nodeAâr
, "14")){

440 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

441 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

442 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

443 
cfg
++;

445 if(!
	`°rcmp
(
nodeAâr
, "15")){

446 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

447 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

448 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

449 
cfg
++;

453 
node0
 = 
	`mxmlGëNextSiblög
(node0);

458 
node
 = 
	`mxmlGëNextSiblög
(node);

462 
node
){

463 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

464 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

465 if(!
	`°rcmp
(
nodeName
, "group")){

466 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

467 if(!
	`°rcmp
(
nodeAâr
, "Reggeaaton")){

468 
	`¥ötf
("group Reggeaaton found\n");

469 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

470 
node0
){

471 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

472 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

473 if(!
	`°rcmp
(
nodeName
, "configValue")){

474 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

475 if(!
	`°rcmp
(
nodeAâr
, "1")){

476 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

477 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

478 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

479 
cfg
++;

481 if(!
	`°rcmp
(
nodeAâr
, "2")){

482 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

483 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

484 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

485 
cfg
++;

487 if(!
	`°rcmp
(
nodeAâr
, "3")){

488 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

489 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

490 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

491 
cfg
++;

493 if(!
	`°rcmp
(
nodeAâr
, "4")){

494 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

495 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

496 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

497 
cfg
++;

499 if(!
	`°rcmp
(
nodeAâr
, "5")){

500 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

501 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

502 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

503 
cfg
++;

505 if(!
	`°rcmp
(
nodeAâr
, "6")){

506 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

507 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

508 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

509 
cfg
++;

511 if(!
	`°rcmp
(
nodeAâr
, "7")){

512 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

513 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

514 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

515 
cfg
++;

517 if(!
	`°rcmp
(
nodeAâr
, "8")){

518 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

519 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

520 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

521 
cfg
++;

523 if(!
	`°rcmp
(
nodeAâr
, "9")){

524 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

525 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

526 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

527 
cfg
++;

529 if(!
	`°rcmp
(
nodeAâr
, "10")){

530 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

531 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

532 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

533 
cfg
++;

535 if(!
	`°rcmp
(
nodeAâr
, "11")){

536 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

537 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

538 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

539 
cfg
++;

541 if(!
	`°rcmp
(
nodeAâr
, "12")){

542 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

543 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

544 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

545 
cfg
++;

547 if(!
	`°rcmp
(
nodeAâr
, "13")){

548 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

549 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

550 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

551 
cfg
++;

553 if(!
	`°rcmp
(
nodeAâr
, "14")){

554 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

555 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

556 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

557 
cfg
++;

559 if(!
	`°rcmp
(
nodeAâr
, "15")){

560 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

561 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

562 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

563 
cfg
++;

567 
node0
 = 
	`mxmlGëNextSiblög
(node0);

572 
node
 = 
	`mxmlGëNextSiblög
(node);

576 
node
){

577 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

578 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

579 if(!
	`°rcmp
(
nodeName
, "group")){

580 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

581 if(!
	`°rcmp
(
nodeAâr
, "Reggae")){

582 
	`¥ötf
("group Reggae found\n");

583 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

584 
node0
){

585 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

586 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

587 if(!
	`°rcmp
(
nodeName
, "configValue")){

588 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

589 if(!
	`°rcmp
(
nodeAâr
, "1")){

590 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

591 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

592 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

593 
cfg
++;

595 if(!
	`°rcmp
(
nodeAâr
, "2")){

596 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

597 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

598 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

599 
cfg
++;

601 if(!
	`°rcmp
(
nodeAâr
, "3")){

602 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

603 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

604 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

605 
cfg
++;

607 if(!
	`°rcmp
(
nodeAâr
, "4")){

608 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

609 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

610 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

611 
cfg
++;

613 if(!
	`°rcmp
(
nodeAâr
, "5")){

614 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

615 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

616 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

617 
cfg
++;

619 if(!
	`°rcmp
(
nodeAâr
, "6")){

620 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

621 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

622 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

623 
cfg
++;

625 if(!
	`°rcmp
(
nodeAâr
, "7")){

626 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

627 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

628 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

629 
cfg
++;

631 if(!
	`°rcmp
(
nodeAâr
, "8")){

632 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

633 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

634 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

635 
cfg
++;

637 if(!
	`°rcmp
(
nodeAâr
, "9")){

638 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

639 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

640 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

641 
cfg
++;

643 if(!
	`°rcmp
(
nodeAâr
, "10")){

644 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

645 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

646 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

647 
cfg
++;

649 if(!
	`°rcmp
(
nodeAâr
, "11")){

650 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

651 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

652 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

653 
cfg
++;

655 if(!
	`°rcmp
(
nodeAâr
, "12")){

656 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

657 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

658 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

659 
cfg
++;

661 if(!
	`°rcmp
(
nodeAâr
, "13")){

662 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

663 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

664 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

665 
cfg
++;

667 if(!
	`°rcmp
(
nodeAâr
, "14")){

668 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

669 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

670 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

671 
cfg
++;

673 if(!
	`°rcmp
(
nodeAâr
, "15")){

674 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

675 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

676 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

677 
cfg
++;

681 
node0
 = 
	`mxmlGëNextSiblög
(node0);

686 
node
 = 
	`mxmlGëNextSiblög
(node);

690 
node
){

691 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

692 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

693 if(!
	`°rcmp
(
nodeName
, "group")){

694 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

695 if(!
	`°rcmp
(
nodeAâr
, "Classical")){

696 
	`¥ötf
("group Classical found\n");

697 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

698 
node0
){

699 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

700 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

701 if(!
	`°rcmp
(
nodeName
, "configValue")){

702 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

703 if(!
	`°rcmp
(
nodeAâr
, "1")){

704 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

705 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

706 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

707 
cfg
++;

709 if(!
	`°rcmp
(
nodeAâr
, "2")){

710 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

711 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

712 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

713 
cfg
++;

715 if(!
	`°rcmp
(
nodeAâr
, "4")){

716 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

717 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

718 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

719 
cfg
++;

721 if(!
	`°rcmp
(
nodeAâr
, "5")){

722 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

723 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

724 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

725 
cfg
++;

727 if(!
	`°rcmp
(
nodeAâr
, "6")){

728 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

729 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

730 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

731 
cfg
++;

733 if(!
	`°rcmp
(
nodeAâr
, "7")){

734 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

735 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

736 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

737 
cfg
++;

739 if(!
	`°rcmp
(
nodeAâr
, "8")){

740 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

741 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

742 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

743 
cfg
++;

745 if(!
	`°rcmp
(
nodeAâr
, "9")){

746 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

747 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

748 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

749 
cfg
++;

751 if(!
	`°rcmp
(
nodeAâr
, "10")){

752 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

753 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

754 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

755 
cfg
++;

757 if(!
	`°rcmp
(
nodeAâr
, "11")){

758 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

759 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

760 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

761 
cfg
++;

763 if(!
	`°rcmp
(
nodeAâr
, "12")){

764 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

765 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

766 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

767 
cfg
++;

769 if(!
	`°rcmp
(
nodeAâr
, "13")){

770 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

771 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

772 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

773 
cfg
++;

775 if(!
	`°rcmp
(
nodeAâr
, "14")){

776 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

777 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

778 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

779 
cfg
++;

781 if(!
	`°rcmp
(
nodeAâr
, "15")){

782 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

783 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

784 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

785 
cfg
++;

789 
node0
 = 
	`mxmlGëNextSiblög
(node0);

794 
node
 = 
	`mxmlGëNextSiblög
(node);

798 
node
){

799 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

800 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

801 if(!
	`°rcmp
(
nodeName
, "group")){

802 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

803 if(!
	`°rcmp
(
nodeAâr
, "Blues")){

804 
	`¥ötf
("group Blues found\n");

805 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

806 
node0
){

807 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

808 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

809 if(!
	`°rcmp
(
nodeName
, "configValue")){

810 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

811 if(!
	`°rcmp
(
nodeAâr
, "1")){

812 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

813 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

814 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

815 
cfg
++;

817 if(!
	`°rcmp
(
nodeAâr
, "2")){

818 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

819 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

820 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

821 
cfg
++;

823 if(!
	`°rcmp
(
nodeAâr
, "3")){

824 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

825 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

826 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

827 
cfg
++;

829 if(!
	`°rcmp
(
nodeAâr
, "4")){

830 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

831 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

832 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

833 
cfg
++;

835 if(!
	`°rcmp
(
nodeAâr
, "5")){

836 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

837 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

838 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

839 
cfg
++;

841 if(!
	`°rcmp
(
nodeAâr
, "6")){

842 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

843 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

844 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

845 
cfg
++;

847 if(!
	`°rcmp
(
nodeAâr
, "7")){

848 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

849 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

850 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

851 
cfg
++;

853 if(!
	`°rcmp
(
nodeAâr
, "8")){

854 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

855 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

856 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

857 
cfg
++;

859 if(!
	`°rcmp
(
nodeAâr
, "9")){

860 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

861 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

862 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

863 
cfg
++;

865 if(!
	`°rcmp
(
nodeAâr
, "10")){

866 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

867 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

868 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

869 
cfg
++;

871 if(!
	`°rcmp
(
nodeAâr
, "11")){

872 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

873 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

874 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

875 
cfg
++;

877 if(!
	`°rcmp
(
nodeAâr
, "12")){

878 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

879 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

880 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

881 
cfg
++;

883 if(!
	`°rcmp
(
nodeAâr
, "13")){

884 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

885 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

886 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

887 
cfg
++;

889 if(!
	`°rcmp
(
nodeAâr
, "14")){

890 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

891 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

892 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

893 
cfg
++;

895 if(!
	`°rcmp
(
nodeAâr
, "15")){

896 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

897 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

898 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

899 
cfg
++;

903 
node0
 = 
	`mxmlGëNextSiblög
(node0);

908 
node
 = 
	`mxmlGëNextSiblög
(node);

912 
node
){

913 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

914 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

915 if(!
	`°rcmp
(
nodeName
, "group")){

916 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

917 if(!
	`°rcmp
(
nodeAâr
, "Jazz")){

918 
	`¥ötf
("group Jazz found\n");

919 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

920 
node0
){

921 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

922 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

923 if(!
	`°rcmp
(
nodeName
, "configValue")){

924 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

925 if(!
	`°rcmp
(
nodeAâr
, "1")){

926 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

927 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

928 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

929 
cfg
++;

931 if(!
	`°rcmp
(
nodeAâr
, "2")){

932 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

933 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

934 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

935 
cfg
++;

937 if(!
	`°rcmp
(
nodeAâr
, "3")){

938 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

939 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

940 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

941 
cfg
++;

943 if(!
	`°rcmp
(
nodeAâr
, "4")){

944 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

945 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

946 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

947 
cfg
++;

949 if(!
	`°rcmp
(
nodeAâr
, "5")){

950 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

951 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

952 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

953 
cfg
++;

955 if(!
	`°rcmp
(
nodeAâr
, "6")){

956 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

957 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

958 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

959 
cfg
++;

961 if(!
	`°rcmp
(
nodeAâr
, "7")){

962 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

963 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

964 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

965 
cfg
++;

967 if(!
	`°rcmp
(
nodeAâr
, "8")){

968 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

969 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

970 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

971 
cfg
++;

973 if(!
	`°rcmp
(
nodeAâr
, "9")){

974 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

975 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

976 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

977 
cfg
++;

979 if(!
	`°rcmp
(
nodeAâr
, "10")){

980 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

981 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

982 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

983 
cfg
++;

985 if(!
	`°rcmp
(
nodeAâr
, "11")){

986 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

987 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

988 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

989 
cfg
++;

991 if(!
	`°rcmp
(
nodeAâr
, "12")){

992 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

993 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

994 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

995 
cfg
++;

997 if(!
	`°rcmp
(
nodeAâr
, "13")){

998 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

999 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1000 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1001 
cfg
++;

1003 if(!
	`°rcmp
(
nodeAâr
, "14")){

1004 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1005 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1006 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1007 
cfg
++;

1009 if(!
	`°rcmp
(
nodeAâr
, "15")){

1010 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1011 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1012 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1013 
cfg
++;

1017 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1022 
node
 = 
	`mxmlGëNextSiblög
(node);

1026 
node
){

1027 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1028 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1029 if(!
	`°rcmp
(
nodeName
, "group")){

1030 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1031 if(!
	`°rcmp
(
nodeAâr
, "Pop")){

1032 
	`¥ötf
("group Pop found\n");

1033 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1034 
node0
){

1035 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1036 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1037 if(!
	`°rcmp
(
nodeName
, "configValue")){

1038 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1039 if(!
	`°rcmp
(
nodeAâr
, "1")){

1040 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1041 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1042 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1043 
cfg
++;

1045 if(!
	`°rcmp
(
nodeAâr
, "2")){

1046 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1047 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1048 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1049 
cfg
++;

1051 if(!
	`°rcmp
(
nodeAâr
, "3")){

1052 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1053 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1054 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1055 
cfg
++;

1057 if(!
	`°rcmp
(
nodeAâr
, "4")){

1058 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1059 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1060 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1061 
cfg
++;

1063 if(!
	`°rcmp
(
nodeAâr
, "5")){

1064 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1065 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1066 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1067 
cfg
++;

1069 if(!
	`°rcmp
(
nodeAâr
, "6")){

1070 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1071 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1072 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1073 
cfg
++;

1075 if(!
	`°rcmp
(
nodeAâr
, "7")){

1076 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1077 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1078 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1079 
cfg
++;

1081 if(!
	`°rcmp
(
nodeAâr
, "8")){

1082 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1083 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1084 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1085 
cfg
++;

1087 if(!
	`°rcmp
(
nodeAâr
, "9")){

1088 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1089 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1090 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1091 
cfg
++;

1093 if(!
	`°rcmp
(
nodeAâr
, "10")){

1094 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1095 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1096 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1097 
cfg
++;

1099 if(!
	`°rcmp
(
nodeAâr
, "11")){

1100 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1101 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1102 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1103 
cfg
++;

1105 if(!
	`°rcmp
(
nodeAâr
, "12")){

1106 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1107 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1108 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1109 
cfg
++;

1111 if(!
	`°rcmp
(
nodeAâr
, "13")){

1112 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1113 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1114 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1115 
cfg
++;

1117 if(!
	`°rcmp
(
nodeAâr
, "14")){

1118 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1119 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1120 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1121 
cfg
++;

1123 if(!
	`°rcmp
(
nodeAâr
, "15")){

1124 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1125 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1126 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1127 
cfg
++;

1131 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1136 
node
 = 
	`mxmlGëNextSiblög
(node);

1140 
node
){

1141 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1142 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1143 if(!
	`°rcmp
(
nodeName
, "group")){

1144 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1145 if(!
	`°rcmp
(
nodeAâr
, "Rock")){

1146 
	`¥ötf
("group Rock found\n");

1147 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1148 
node0
){

1149 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1150 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1151 if(!
	`°rcmp
(
nodeName
, "configValue")){

1152 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1153 if(!
	`°rcmp
(
nodeAâr
, "1")){

1154 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1155 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1156 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1157 
cfg
++;

1159 if(!
	`°rcmp
(
nodeAâr
, "2")){

1160 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1161 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1162 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1163 
cfg
++;

1165 if(!
	`°rcmp
(
nodeAâr
, "3")){

1166 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1167 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1168 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1169 
cfg
++;

1171 if(!
	`°rcmp
(
nodeAâr
, "4")){

1172 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1173 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1174 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1175 
cfg
++;

1177 if(!
	`°rcmp
(
nodeAâr
, "5")){

1178 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1179 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1180 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1181 
cfg
++;

1183 if(!
	`°rcmp
(
nodeAâr
, "6")){

1184 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1185 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1186 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1187 
cfg
++;

1189 if(!
	`°rcmp
(
nodeAâr
, "7")){

1190 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1191 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1192 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1193 
cfg
++;

1195 if(!
	`°rcmp
(
nodeAâr
, "8")){

1196 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1197 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1198 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1199 
cfg
++;

1201 if(!
	`°rcmp
(
nodeAâr
, "9")){

1202 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1203 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1204 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1205 
cfg
++;

1207 if(!
	`°rcmp
(
nodeAâr
, "10")){

1208 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1209 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1210 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1211 
cfg
++;

1213 if(!
	`°rcmp
(
nodeAâr
, "11")){

1214 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1215 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1216 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1217 
cfg
++;

1219 if(!
	`°rcmp
(
nodeAâr
, "12")){

1220 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1221 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1222 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1223 
cfg
++;

1225 if(!
	`°rcmp
(
nodeAâr
, "13")){

1226 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1227 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1228 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1229 
cfg
++;

1231 if(!
	`°rcmp
(
nodeAâr
, "14")){

1232 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1233 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1234 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1235 
cfg
++;

1237 if(!
	`°rcmp
(
nodeAâr
, "15")){

1238 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1239 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1240 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1241 
cfg
++;

1245 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1250 
node
 = 
	`mxmlGëNextSiblög
(node);

1255 
node
){

1256 if(
	`mxmlGëTy≥
(
node
)==
MXML_ELEMENT
){

1257 
nodeName
 = 
	`mxmlGëEÀmít
(
node
);

1258 if(!
	`°rcmp
(
nodeName
, "group")){

1259 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node
, "name");

1260 if(!
	`°rcmp
(
nodeAâr
, "Custom")){

1261 
	`¥ötf
("group Float Custom\n");

1262 
node0
 = 
	`mxmlGëFú°Chûd
(
node
);

1263 
node0
){

1264 if(
	`mxmlGëTy≥
(
node0
)==
MXML_ELEMENT
){

1265 
nodeName
 = 
	`mxmlGëEÀmít
(
node0
);

1266 if(!
	`°rcmp
(
nodeName
, "configValue")){

1267 
nodeAâr
 = 
	`mxmlEÀmítGëAâr
(
node0
, "key");

1268 if(!
	`°rcmp
(
nodeAâr
, "1")){

1269 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1270 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1271 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1272 
cfg
++;

1274 if(!
	`°rcmp
(
nodeAâr
, "2")){

1275 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1276 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1277 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1278 
cfg
++;

1280 if(!
	`°rcmp
(
nodeAâr
, "3")){

1281 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1282 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1283 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1284 
cfg
++;

1286 if(!
	`°rcmp
(
nodeAâr
, "4")){

1287 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1288 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1289 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1290 
cfg
++;

1292 if(!
	`°rcmp
(
nodeAâr
, "5")){

1293 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1294 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1295 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1296 
cfg
++;

1298 if(!
	`°rcmp
(
nodeAâr
, "6")){

1299 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1300 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1301 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1302 
cfg
++;

1304 if(!
	`°rcmp
(
nodeAâr
, "7")){

1305 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1306 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1307 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1308 
cfg
++;

1310 if(!
	`°rcmp
(
nodeAâr
, "8")){

1311 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1312 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1313 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1314 
cfg
++;

1316 if(!
	`°rcmp
(
nodeAâr
, "9")){

1317 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1318 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1319 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1320 
cfg
++;

1322 if(!
	`°rcmp
(
nodeAâr
, "10")){

1323 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1324 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1325 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1326 
cfg
++;

1328 if(!
	`°rcmp
(
nodeAâr
, "11")){

1329 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1330 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1331 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1332 
cfg
++;

1334 if(!
	`°rcmp
(
nodeAâr
, "12")){

1335 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1336 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1337 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1338 
cfg
++;

1340 if(!
	`°rcmp
(
nodeAâr
, "13")){

1341 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1342 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1343 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1344 
cfg
++;

1346 if(!
	`°rcmp
(
nodeAâr
, "14")){

1347 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1348 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1349 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1350 
cfg
++;

1352 if(!
	`°rcmp
(
nodeAâr
, "15")){

1353 c⁄° *
nodeTxt
 = 
	`mxmlGëText
(
node0
, 0);

1354 
cfg
->
vÆue
 = 
	`©oi
(
nodeTxt
);

1355 
	`¥ötf
("%d\n", 
cfg
->
vÆue
);

1356 
cfg
++;

1360 
node0
 = 
	`mxmlGëNextSiblög
(node0);

1365 
node
 = 
	`mxmlGëNextSiblög
(node);

1372 
node1
 = 
	`mxmlGëNextSiblög
(node1);

1374 
	`mxmlDñëe
(
åì
);

1376 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/jerror.h

21 #i‚de‡
JMESSAGE


22 #i‚de‡
JERROR_H


24 
	#JMAKE_ENUM_LIST


	)

27 
	#JMESSAGE
(
code
,
°rög
)

	)

31 #ifde‡
JMAKE_ENUM_LIST


35 
	#JMESSAGE
(
code
,
°rög
Ëcodê,

	)

39 
JMESSAGE
(
JMSG_NOMESSAGE
, "Bogus message code %d")

42 
JMESSAGE
(
JERR_ARITH_NOTIMPL
,

44 
JMESSAGE
(
JERR_BAD_ALIGN_TYPE
, "ALIGN_TYPE is wrong,Ölease fix")

45 
JMESSAGE
(
JERR_BAD_ALLOC_CHUNK
, "MAX_ALLOC_CHUNK is wrong,Ölease fix")

46 
JMESSAGE
(
JERR_BAD_BUFFER_MODE
, "Bogus buffer control mode")

47 
JMESSAGE
(
JERR_BAD_COMPONENT_ID
, "Invalid component ID %d in SOS")

48 
JMESSAGE
(
JERR_BAD_CROP_SPEC
, "Invalid cropÑequest")

49 
JMESSAGE
(
JERR_BAD_DCT_COEF
, "DCT coefficient out ofÑange")

50 
JMESSAGE
(
JERR_BAD_DCTSIZE
, "IDCT output block size %dÇot supported")

51 
JMESSAGE
(
JERR_BAD_HUFF_TABLE
, "Bogus HuffmanÅable definition")

52 
JMESSAGE
(
JERR_BAD_IN_COLORSPACE
, "Bogus input colorspace")

53 
JMESSAGE
(
JERR_BAD_J_COLORSPACE
, "Bogus JPEG colorspace")

54 
JMESSAGE
(
JERR_BAD_LENGTH
, "Bogus markerÜength")

55 
JMESSAGE
(
JERR_BAD_LIB_VERSION
,

57 
JMESSAGE
(
JERR_BAD_MCU_SIZE
, "Sampling factorsÅooÜarge for interleaved scan")

58 
JMESSAGE
(
JERR_BAD_POOL_ID
, "Invalid memoryÖool code %d")

59 
JMESSAGE
(
JERR_BAD_PRECISION
, "Unsupported JPEG dataÖrecision %d")

60 
JMESSAGE
(
JERR_BAD_PROGRESSION
,

62 
JMESSAGE
(
JERR_BAD_PROG_SCRIPT
,

64 
JMESSAGE
(
JERR_BAD_SAMPLING
, "Bogus sampling factors")

65 
JMESSAGE
(
JERR_BAD_SCAN_SCRIPT
, "Invalid scan scriptátÉntry %d")

66 
JMESSAGE
(
JERR_BAD_STATE
, "Improper callÅo JPEGÜibrary in state %d")

67 
JMESSAGE
(
JERR_BAD_STRUCT_SIZE
,

69 
JMESSAGE
(
JERR_BAD_VIRTUAL_ACCESS
, "Bogus virtualárrayáccess")

70 
JMESSAGE
(
JERR_BUFFER_SIZE
, "BufferÖassedÅo JPEGÜibrary isÅoo small")

71 
JMESSAGE
(
JERR_CANT_SUSPEND
, "SuspensionÇotállowed here")

72 
JMESSAGE
(
JERR_CCIR601_NOTIMPL
, "CCIR601 samplingÇot implemented yet")

73 
JMESSAGE
(
JERR_COMPONENT_COUNT
, "Too many color components: %d, max %d")

74 
JMESSAGE
(
JERR_CONVERSION_NOTIMPL
, "Unsupported color conversionÑequest")

75 
JMESSAGE
(
JERR_DAC_INDEX
, "Bogus DAC index %d")

76 
JMESSAGE
(
JERR_DAC_VALUE
, "Bogus DAC value 0x%x")

77 
JMESSAGE
(
JERR_DHT_INDEX
, "Bogus DHT index %d")

78 
JMESSAGE
(
JERR_DQT_INDEX
, "Bogus DQT index %d")

79 
JMESSAGE
(
JERR_EMPTY_IMAGE
, "Empty JPEG image (DNLÇot supported)")

80 
JMESSAGE
(
JERR_EMS_READ
, "Read from EMS failed")

81 
JMESSAGE
(
JERR_EMS_WRITE
, "WriteÅo EMS failed")

82 
JMESSAGE
(
JERR_EOI_EXPECTED
, "Didn'tÉxpect moreÅhan one scan")

83 
JMESSAGE
(
JERR_FILE_READ
, "Input fileÑeadÉrror")

84 
JMESSAGE
(
JERR_FILE_WRITE
, "Output file writeÉrror --- out of disk space?")

85 
JMESSAGE
(
JERR_FRACT_SAMPLE_NOTIMPL
, "Fractional samplingÇot implemented yet")

86 
JMESSAGE
(
JERR_HUFF_CLEN_OVERFLOW
, "Huffman code sizeÅable overflow")

87 
JMESSAGE
(
JERR_HUFF_MISSING_CODE
, "Missing Huffman codeÅableÉntry")

88 
JMESSAGE
(
JERR_IMAGE_TOO_BIG
, "Maximum supported image dimension is %uÖixels")

89 
JMESSAGE
(
JERR_INPUT_EMPTY
, "Empty input file")

90 
JMESSAGE
(
JERR_INPUT_EOF
, "PrematureÉnd of input file")

91 
JMESSAGE
(
JERR_MISMATCHED_QUANT_TABLE
,

93 
JMESSAGE
(
JERR_MISSING_DATA
, "Scan script doesÇotÅransmitáll data")

94 
JMESSAGE
(
JERR_MODE_CHANGE
, "Invalid color quantization mode change")

95 
JMESSAGE
(
JERR_NOTIMPL
, "Not implemented yet")

96 
JMESSAGE
(
JERR_NOT_COMPILED
, "Requested feature was omittedát compileÅime")

97 
JMESSAGE
(
JERR_NO_BACKING_STORE
, "Backing storeÇot supported")

98 
JMESSAGE
(
JERR_NO_HUFF_TABLE
, "HuffmanÅable 0x%02x wasÇot defined")

99 
JMESSAGE
(
JERR_NO_IMAGE
, "JPEG datastream containsÇo image")

100 
JMESSAGE
(
JERR_NO_QUANT_TABLE
, "QuantizationÅable 0x%02x wasÇot defined")

101 
JMESSAGE
(
JERR_NO_SOI
, "Notá JPEG file: starts with 0x%02x 0x%02x")

102 
JMESSAGE
(
JERR_OUT_OF_MEMORY
, "Insufficient memory (case %d)")

103 
JMESSAGE
(
JERR_QUANT_COMPONENTS
,

105 
JMESSAGE
(
JERR_QUANT_FEW_COLORS
, "Cannot quantizeÅo fewerÅhan %d colors")

106 
JMESSAGE
(
JERR_QUANT_MANY_COLORS
, "Cannot quantizeÅo moreÅhan %d colors")

107 
JMESSAGE
(
JERR_SOF_DUPLICATE
, "Invalid JPEG file structure:Åwo SOF markers")

108 
JMESSAGE
(
JERR_SOF_NO_SOS
, "Invalid JPEG file structure: missing SOS marker")

109 
JMESSAGE
(
JERR_SOF_UNSUPPORTED
, "Unsupported JPEGÖrocess: SOFÅype 0x%02x")

110 
JMESSAGE
(
JERR_SOI_DUPLICATE
, "Invalid JPEG file structure:Åwo SOI markers")

111 
JMESSAGE
(
JERR_SOS_NO_SOF
, "Invalid JPEG file structure: SOS before SOF")

112 
JMESSAGE
(
JERR_TFILE_CREATE
, "FailedÅo createÅemporary file %s")

113 
JMESSAGE
(
JERR_TFILE_READ
, "Read failed onÅemporary file")

114 
JMESSAGE
(
JERR_TFILE_SEEK
, "Seek failed onÅemporary file")

115 
JMESSAGE
(
JERR_TFILE_WRITE
,

117 
JMESSAGE
(
JERR_TOO_LITTLE_DATA
, "ApplicationÅransferredÅoo few scanlines")

118 
JMESSAGE
(
JERR_UNKNOWN_MARKER
, "Unsupported markerÅype 0x%02x")

119 
JMESSAGE
(
JERR_VIRTUAL_BUG
, "Virtualárray controller messed up")

120 
JMESSAGE
(
JERR_WIDTH_OVERFLOW
, "ImageÅoo wide forÅhis implementation")

121 
JMESSAGE
(
JERR_XMS_READ
, "Read from XMS failed")

122 
JMESSAGE
(
JERR_XMS_WRITE
, "WriteÅo XMS failed")

123 
JMESSAGE
(
JMSG_COPYRIGHT
, 
JCOPYRIGHT
)

124 
JMESSAGE
(
JMSG_VERSION
, 
JVERSION
)

125 
JMESSAGE
(
JTRC_16BIT_TABLES
,

127 
JMESSAGE
(
JTRC_ADOBE
,

129 
JMESSAGE
(
JTRC_APP0
, "Unknown APP0 marker (not JFIF),Üength %u")

130 
JMESSAGE
(
JTRC_APP14
, "Unknown APP14 marker (not Adobe),Üength %u")

131 
JMESSAGE
(
JTRC_DAC
, "Define Arithmetic Table 0x%02x: 0x%02x")

132 
JMESSAGE
(
JTRC_DHT
, "Define Huffman Table 0x%02x")

133 
JMESSAGE
(
JTRC_DQT
, "Define Quantization Table %dÖrecision %d")

134 
JMESSAGE
(
JTRC_DRI
, "Define Restart Interval %u")

135 
JMESSAGE
(
JTRC_EMS_CLOSE
, "Freed EMS handle %u")

136 
JMESSAGE
(
JTRC_EMS_OPEN
, "Obtained EMS handle %u")

137 
JMESSAGE
(
JTRC_EOI
, "End Of Image")

138 
JMESSAGE
(
JTRC_HUFFBITS
, " %3d %3d %3d %3d %3d %3d %3d %3d")

139 
JMESSAGE
(
JTRC_JFIF
, "JFIF APP0 marker: version %d.%02d, density %dx%d %d")

140 
JMESSAGE
(
JTRC_JFIF_BADTHUMBNAILSIZE
,

142 
JMESSAGE
(
JTRC_JFIF_EXTENSION
,

144 
JMESSAGE
(
JTRC_JFIF_THUMBNAIL
, " with %d x %dÅhumbnail image")

145 
JMESSAGE
(
JTRC_MISC_MARKER
, "Miscellaneous marker 0x%02x,Üength %u")

146 
JMESSAGE
(
JTRC_PARMLESS_MARKER
, "Unexpected marker 0x%02x")

147 
JMESSAGE
(
JTRC_QUANTVALS
, " %4u %4u %4u %4u %4u %4u %4u %4u")

148 
JMESSAGE
(
JTRC_QUANT_3_NCOLORS
, "QuantizingÅo %d = %d*%d*%d colors")

149 
JMESSAGE
(
JTRC_QUANT_NCOLORS
, "QuantizingÅo %d colors")

150 
JMESSAGE
(
JTRC_QUANT_SELECTED
, "Selected %d colors for quantization")

151 
JMESSAGE
(
JTRC_RECOVERY_ACTION
, "At marker 0x%02x,Ñecoveryáction %d")

152 
JMESSAGE
(
JTRC_RST
, "RST%d")

153 
JMESSAGE
(
JTRC_SMOOTH_NOTIMPL
,

155 
JMESSAGE
(
JTRC_SOF
, "Start Of Frame 0x%02x: width=%u, height=%u, components=%d")

156 
JMESSAGE
(
JTRC_SOF_COMPONENT
, " Component %d: %dhx%dv q=%d")

157 
JMESSAGE
(
JTRC_SOI
, "Start of Image")

158 
JMESSAGE
(
JTRC_SOS
, "Start Of Scan: %d components")

159 
JMESSAGE
(
JTRC_SOS_COMPONENT
, " Component %d: dc=%dác=%d")

160 
JMESSAGE
(
JTRC_SOS_PARAMS
, " Ss=%d, Se=%d, Ah=%d, Al=%d")

161 
JMESSAGE
(
JTRC_TFILE_CLOSE
, "ClosedÅemporary file %s")

162 
JMESSAGE
(
JTRC_TFILE_OPEN
, "OpenedÅemporary file %s")

163 
JMESSAGE
(
JTRC_THUMB_JPEG
,

165 
JMESSAGE
(
JTRC_THUMB_PALETTE
,

167 
JMESSAGE
(
JTRC_THUMB_RGB
,

169 
JMESSAGE
(
JTRC_UNKNOWN_IDS
,

171 
JMESSAGE
(
JTRC_XMS_CLOSE
, "Freed XMS handle %u")

172 
JMESSAGE
(
JTRC_XMS_OPEN
, "Obtained XMS handle %u")

173 
JMESSAGE
(
JWRN_ADOBE_XFORM
, "Unknown Adobe colorÅransform code %d")

174 
JMESSAGE
(
JWRN_BOGUS_PROGRESSION
,

176 
JMESSAGE
(
JWRN_EXTRANEOUS_DATA
,

178 
JMESSAGE
(
JWRN_HIT_MARKER
, "Corrupt JPEG data:ÖrematureÉnd of data segment")

179 
JMESSAGE
(
JWRN_HUFF_BAD_CODE
, "Corrupt JPEG data: bad Huffman code")

180 
JMESSAGE
(
JWRN_JFIF_MAJOR
, "Warning: unknown JFIFÑevisionÇumber %d.%02d")

181 
JMESSAGE
(
JWRN_JPEG_EOF
, "PrematureÉnd of JPEG file")

182 
JMESSAGE
(
JWRN_MUST_RESYNC
,

184 
JMESSAGE
(
JWRN_NOT_SEQUENTIAL
, "Invalid SOSÖarameters for sequential JPEG")

185 
JMESSAGE
(
JWRN_TOO_MUCH_DATA
, "ApplicationÅransferredÅoo many scanlines")

187 #ifde‡
JMAKE_ENUM_LIST


189 
	mJMSG_LASTMSGCODE


190 } 
	tJ_MESSAGE_CODE
;

192 #unde‡
JMAKE_ENUM_LIST


196 #unde‡
JMESSAGE


199 #i‚de‡
JERROR_H


200 
	#JERROR_H


	)

206 
	#ERREXIT
(
cöfo
,
code
) \

207 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

208 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

209 
	#ERREXIT1
(
cöfo
,
code
,
p1
) \

210 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

211 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

212 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

213 
	#ERREXIT2
(
cöfo
,
code
,
p1
,
p2
) \

214 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

215 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

216 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

217 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

218 
	#ERREXIT3
(
cöfo
,
code
,
p1
,
p2
,
p3
) \

219 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

220 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

221 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

222 (
cöfo
)->
îr
->
msg_∑rm
.
i
[2] = (
p3
), \

223 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

224 
	#ERREXIT4
(
cöfo
,
code
,
p1
,
p2
,
p3
,
p4
) \

225 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

226 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

227 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

228 (
cöfo
)->
îr
->
msg_∑rm
.
i
[2] = (
p3
), \

229 (
cöfo
)->
îr
->
msg_∑rm
.
i
[3] = (
p4
), \

230 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

231 
	#ERREXITS
(
cöfo
,
code
,
°r
) \

232 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

233 
	`°∫˝y
((
cöfo
)->
îr
->
msg_∑rm
.
s
, (
°r
), 
JMSG_STR_PARM_MAX
), \

234 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

236 
	#MAKESTMT
(
°uff
Ëdÿ{ stuf‡} 0)

	)

239 
	#WARNMS
(
cöfo
,
code
) \

240 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

241 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), -1))

	)

242 
	#WARNMS1
(
cöfo
,
code
,
p1
) \

243 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

244 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

245 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), -1))

	)

246 
	#WARNMS2
(
cöfo
,
code
,
p1
,
p2
) \

247 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

248 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

249 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

250 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), -1))

	)

253 
	#TRACEMS
(
cöfo
,
lvl
,
code
) \

254 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

255 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

256 
	#TRACEMS1
(
cöfo
,
lvl
,
code
,
p1
) \

257 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

258 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

259 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

260 
	#TRACEMS2
(
cöfo
,
lvl
,
code
,
p1
,
p2
) \

261 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

262 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

263 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

264 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

265 
	#TRACEMS3
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
) \

266 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

267 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); \

268 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

269 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

270 
	#TRACEMS4
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
,
p4
) \

271 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

272 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); _mp[3] = (
p4
); \

273 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

274 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

275 
	#TRACEMS5
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
,
p4
,
p5
) \

276 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

277 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); _mp[3] = (
p4
); \

278 
_mp
[4] = (
p5
); \

279 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

280 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

281 
	#TRACEMS8
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
,
p4
,
p5
,
p6
,
p7
,
p8
) \

282 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

283 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); _mp[3] = (
p4
); \

284 
_mp
[4] = (
p5
); _mp[5] = (
p6
); _mp[6] = (
p7
); _mp[7] = (
p8
); \

285 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

286 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

287 
	#TRACEMSS
(
cöfo
,
lvl
,
code
,
°r
) \

288 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

289 
	`°∫˝y
((
cöfo
)->
îr
->
msg_∑rm
.
s
, (
°r
), 
JMSG_STR_PARM_MAX
), \

290 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

	@/usr/include/jpegint.h

17 
	mJBUF_PASS_THRU
,

19 
	mJBUF_SAVE_SOURCE
,

20 
	mJBUF_CRANK_DEST
,

21 
	mJBUF_SAVE_AND_PASS


22 } 
	tJ_BUF_MODE
;

25 
	#CSTATE_START
 100

	)

26 
	#CSTATE_SCANNING
 101

	)

27 
	#CSTATE_RAW_OK
 102

	)

28 
	#CSTATE_WRCOEFS
 103

	)

29 
	#DSTATE_START
 200

	)

30 
	#DSTATE_INHEADER
 201

	)

31 
	#DSTATE_READY
 202

	)

32 
	#DSTATE_PRELOAD
 203

	)

33 
	#DSTATE_PRESCAN
 204

	)

34 
	#DSTATE_SCANNING
 205

	)

35 
	#DSTATE_RAW_OK
 206

	)

36 
	#DSTATE_BUFIMAGE
 207

	)

37 
	#DSTATE_BUFPOST
 208

	)

38 
	#DSTATE_RDCOEFS
 209

	)

39 
	#DSTATE_STOPPING
 210

	)

45 
	sj≥g_comp_ma°î
 {

46 
JMETHOD
(, 
¥ï¨e_f‹_∑ss
, (
j_com¥ess_±r
 
cöfo
));

47 
JMETHOD
(, 
∑ss_°¨tup
, (
j_com¥ess_±r
 
cöfo
));

48 
JMETHOD
(, 
föish_∑ss
, (
j_com¥ess_±r
 
cöfo
));

51 
boﬁón
 
	mˇŒ_∑ss_°¨tup
;

52 
boﬁón
 
	mis_œ°_∑ss
;

56 
	sj≥g_c_maö_c⁄åﬁÀr
 {

57 
JMETHOD
(, 
°¨t_∑ss
, (
j_com¥ess_±r
 
cöfo
, 
J_BUF_MODE
 
∑ss_mode
));

58 
JMETHOD
(, 
¥o˚ss_d©a
, (
j_com¥ess_±r
 
cöfo
,

59 
JSAMPARRAY
 
öput_buf
, 
JDIMENSION
 *
ö_row_˘r
,

60 
JDIMENSION
 
ö_rows_avaû
));

64 
	sj≥g_c_¥ï_c⁄åﬁÀr
 {

65 
JMETHOD
(, 
°¨t_∑ss
, (
j_com¥ess_±r
 
cöfo
, 
J_BUF_MODE
 
∑ss_mode
));

66 
JMETHOD
(, 
¥e_¥o˚ss_d©a
, (
j_com¥ess_±r
 
cöfo
,

67 
JSAMPARRAY
 
öput_buf
,

68 
JDIMENSION
 *
ö_row_˘r
,

69 
JDIMENSION
 
ö_rows_avaû
,

70 
JSAMPIMAGE
 
ouçut_buf
,

71 
JDIMENSION
 *
out_row_group_˘r
,

72 
JDIMENSION
 
out_row_groups_avaû
));

76 
	sj≥g_c_c€f_c⁄åﬁÀr
 {

77 
JMETHOD
(, 
°¨t_∑ss
, (
j_com¥ess_±r
 
cöfo
, 
J_BUF_MODE
 
∑ss_mode
));

78 
JMETHOD
(
boﬁón
, 
com¥ess_d©a
, (
j_com¥ess_±r
 
cöfo
,

79 
JSAMPIMAGE
 
öput_buf
));

83 
	sj≥g_cﬁ‹_c⁄vîãr
 {

84 
JMETHOD
(, 
°¨t_∑ss
, (
j_com¥ess_±r
 
cöfo
));

85 
JMETHOD
(, 
cﬁ‹_c⁄vît
, (
j_com¥ess_±r
 
cöfo
,

86 
JSAMPARRAY
 
öput_buf
, 
JSAMPIMAGE
 
ouçut_buf
,

87 
JDIMENSION
 
ouçut_row
, 
num_rows
));

91 
	sj≥g_downßm∂î
 {

92 
JMETHOD
(, 
°¨t_∑ss
, (
j_com¥ess_±r
 
cöfo
));

93 
JMETHOD
(, 
downßm∂e
, (
j_com¥ess_±r
 
cöfo
,

94 
JSAMPIMAGE
 
öput_buf
, 
JDIMENSION
 
ö_row_ödex
,

95 
JSAMPIMAGE
 
ouçut_buf
,

96 
JDIMENSION
 
out_row_group_ödex
));

98 
boﬁón
 
	m√ed_c⁄ãxt_rows
;

102 
	sj≥g_f‹w¨d_d˘
 {

103 
JMETHOD
(, 
°¨t_∑ss
, (
j_com¥ess_±r
 
cöfo
));

105 
JMETHOD
(, 
f‹w¨d_DCT
, (
j_com¥ess_±r
 
cöfo
,

106 
j≥g_comp⁄ít_öfo
 * 
comµå
,

107 
JSAMPARRAY
 
ßm∂e_d©a
, 
JBLOCKROW
 
c€f_blocks
,

108 
JDIMENSION
 
°¨t_row
, JDIMENSION 
°¨t_cﬁ
,

109 
JDIMENSION
 
num_blocks
));

113 
	sj≥g_íå›y_ícodî
 {

114 
JMETHOD
(, 
°¨t_∑ss
, (
j_com¥ess_±r
 
cöfo
, 
boﬁón
 
g©hî_°©i°ics
));

115 
JMETHOD
(
boﬁón
, 
ícode_mcu
, (
j_com¥ess_±r
 
cöfo
, 
JBLOCKROW
 *
MCU_d©a
));

116 
JMETHOD
(, 
föish_∑ss
, (
j_com¥ess_±r
 
cöfo
));

120 
	sj≥g_m¨kî_wrôî
 {

121 
JMETHOD
(, 
wrôe_fûe_hódî
, (
j_com¥ess_±r
 
cöfo
));

122 
JMETHOD
(, 
wrôe_‰ame_hódî
, (
j_com¥ess_±r
 
cöfo
));

123 
JMETHOD
(, 
wrôe_sˇn_hódî
, (
j_com¥ess_±r
 
cöfo
));

124 
JMETHOD
(, 
wrôe_fûe_åaûî
, (
j_com¥ess_±r
 
cöfo
));

125 
JMETHOD
(, 
wrôe_èbÀs_⁄ly
, (
j_com¥ess_±r
 
cöfo
));

128 
JMETHOD
(, 
wrôe_m¨kî_hódî
, (
j_com¥ess_±r
 
cöfo
, 
m¨kî
,

129 
d©Æí
));

130 
JMETHOD
(, 
wrôe_m¨kî_byã
, (
j_com¥ess_±r
 
cöfo
, 
vÆ
));

137 
	sj≥g_decomp_ma°î
 {

138 
JMETHOD
(, 
¥ï¨e_f‹_ouçut_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

139 
JMETHOD
(, 
föish_ouçut_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

142 
boﬁón
 
	mis_dummy_∑ss
;

146 
	sj≥g_öput_c⁄åﬁÀr
 {

147 
JMETHOD
(, 
c⁄sume_öput
, (
j_decom¥ess_±r
 
cöfo
));

148 
JMETHOD
(, 
ª£t_öput_c⁄åﬁÀr
, (
j_decom¥ess_±r
 
cöfo
));

149 
JMETHOD
(, 
°¨t_öput_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

150 
JMETHOD
(, 
föish_öput_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

153 
boﬁón
 
	mhas_mu…ùÀ_sˇns
;

154 
boﬁón
 
	meoi_ªached
;

158 
	sj≥g_d_maö_c⁄åﬁÀr
 {

159 
JMETHOD
(, 
°¨t_∑ss
, (
j_decom¥ess_±r
 
cöfo
, 
J_BUF_MODE
 
∑ss_mode
));

160 
JMETHOD
(, 
¥o˚ss_d©a
, (
j_decom¥ess_±r
 
cöfo
,

161 
JSAMPARRAY
 
ouçut_buf
, 
JDIMENSION
 *
out_row_˘r
,

162 
JDIMENSION
 
out_rows_avaû
));

166 
	sj≥g_d_c€f_c⁄åﬁÀr
 {

167 
JMETHOD
(, 
°¨t_öput_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

168 
JMETHOD
(, 
c⁄sume_d©a
, (
j_decom¥ess_±r
 
cöfo
));

169 
JMETHOD
(, 
°¨t_ouçut_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

170 
JMETHOD
(, 
decom¥ess_d©a
, (
j_decom¥ess_±r
 
cöfo
,

171 
JSAMPIMAGE
 
ouçut_buf
));

173 
jvút_b¨øy_±r
 *
	mc€f_¨øys
;

177 
	sj≥g_d_po°_c⁄åﬁÀr
 {

178 
JMETHOD
(, 
°¨t_∑ss
, (
j_decom¥ess_±r
 
cöfo
, 
J_BUF_MODE
 
∑ss_mode
));

179 
JMETHOD
(, 
po°_¥o˚ss_d©a
, (
j_decom¥ess_±r
 
cöfo
,

180 
JSAMPIMAGE
 
öput_buf
,

181 
JDIMENSION
 *
ö_row_group_˘r
,

182 
JDIMENSION
 
ö_row_groups_avaû
,

183 
JSAMPARRAY
 
ouçut_buf
,

184 
JDIMENSION
 *
out_row_˘r
,

185 
JDIMENSION
 
out_rows_avaû
));

189 
	sj≥g_m¨kî_ªadî
 {

190 
JMETHOD
(, 
ª£t_m¨kî_ªadî
, (
j_decom¥ess_±r
 
cöfo
));

195 
JMETHOD
(, 
ªad_m¨kîs
, (
j_decom¥ess_±r
 
cöfo
));

197 
j≥g_m¨kî_∑r£r_mëhod
 
	mªad_ª°¨t_m¨kî
;

202 
boﬁón
 
	mßw_SOI
;

203 
boﬁón
 
	mßw_SOF
;

204 
	m√xt_ª°¨t_num
;

205 
	mdisˇrded_byãs
;

209 
	sj≥g_íå›y_decodî
 {

210 
JMETHOD
(, 
°¨t_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

211 
JMETHOD
(
boﬁón
, 
decode_mcu
, (
j_decom¥ess_±r
 
cöfo
,

212 
JBLOCKROW
 *
MCU_d©a
));

216 
boﬁón
 
	mösufficõ¡_d©a
;

220 
JMETHOD
(, 
	tövî£_DCT_mëhod_±r
,

221 (
	tj_decom¥ess_±r
 
	tcöfo
, 
	tj≥g_comp⁄ít_öfo
 * 
	tcomµå
,

222 
	tJCOEFPTR
 
	tc€f_block
,

223 
	tJSAMPARRAY
 
	touçut_buf
, 
	tJDIMENSION
 
	touçut_cﬁ
));

225 
	sj≥g_övî£_d˘
 {

226 
JMETHOD
(, 
°¨t_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

228 
övî£_DCT_mëhod_±r
 
	mövî£_DCT
[
MAX_COMPONENTS
];

232 
	sj≥g_upßm∂î
 {

233 
JMETHOD
(, 
°¨t_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

234 
JMETHOD
(, 
upßm∂e
, (
j_decom¥ess_±r
 
cöfo
,

235 
JSAMPIMAGE
 
öput_buf
,

236 
JDIMENSION
 *
ö_row_group_˘r
,

237 
JDIMENSION
 
ö_row_groups_avaû
,

238 
JSAMPARRAY
 
ouçut_buf
,

239 
JDIMENSION
 *
out_row_˘r
,

240 
JDIMENSION
 
out_rows_avaû
));

242 
boﬁón
 
	m√ed_c⁄ãxt_rows
;

246 
	sj≥g_cﬁ‹_dec⁄vîãr
 {

247 
JMETHOD
(, 
°¨t_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

248 
JMETHOD
(, 
cﬁ‹_c⁄vît
, (
j_decom¥ess_±r
 
cöfo
,

249 
JSAMPIMAGE
 
öput_buf
, 
JDIMENSION
 
öput_row
,

250 
JSAMPARRAY
 
ouçut_buf
, 
num_rows
));

254 
	sj≥g_cﬁ‹_qu™tizî
 {

255 
JMETHOD
(, 
°¨t_∑ss
, (
j_decom¥ess_±r
 
cöfo
, 
boﬁón
 
is_¥e_sˇn
));

256 
JMETHOD
(, 
cﬁ‹_qu™tize
, (
j_decom¥ess_±r
 
cöfo
,

257 
JSAMPARRAY
 
öput_buf
, JSAMPARRAY 
ouçut_buf
,

258 
num_rows
));

259 
JMETHOD
(, 
föish_∑ss
, (
j_decom¥ess_±r
 
cöfo
));

260 
JMETHOD
(, 
√w_cﬁ‹_m≠
, (
j_decom¥ess_±r
 
cöfo
));

266 #unde‡
MAX


267 
	#MAX
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

268 #unde‡
MIN


269 
	#MIN
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

282 #ifde‡
RIGHT_SHIFT_IS_UNSIGNED


283 
	#SHIFT_TEMPS
 
INT32
 
shi·_ãmp
;

	)

284 
	#RIGHT_SHIFT
(
x
,
sh·
) \

285 ((
shi·_ãmp
 = (
x
)) < 0 ? \

286 (
shi·_ãmp
 >> (
sh·
)Ë| ((~((
INT32
) 0)) << (32-(shft))) : \

287 (
shi·_ãmp
 >> (
sh·
)))

	)

289 
	#SHIFT_TEMPS


	)

290 
	#RIGHT_SHIFT
(
x
,
sh·
Ë((xË>> (sh·))

	)

296 #ifde‡
NEED_SHORT_EXTERNAL_NAMES


297 
	#jöô_com¥ess_ma°î
 
jICom¥ess


	)

298 
	#jöô_c_ma°î_c⁄åﬁ
 
jICMa°î


	)

299 
	#jöô_c_maö_c⁄åﬁÀr
 
jICMaöC


	)

300 
	#jöô_c_¥ï_c⁄åﬁÀr
 
jICPªpC


	)

301 
	#jöô_c_c€f_c⁄åﬁÀr
 
jICC€fC


	)

302 
	#jöô_cﬁ‹_c⁄vîãr
 
jICCﬁ‹


	)

303 
	#jöô_downßm∂î
 
jIDownßm∂î


	)

304 
	#jöô_f‹w¨d_d˘
 
jIFDCT


	)

305 
	#jöô_huff_ícodî
 
jIHEncodî


	)

306 
	#jöô_phuff_ícodî
 
jIPHEncodî


	)

307 
	#jöô_m¨kî_wrôî
 
jIMWrôî


	)

308 
	#jöô_ma°î_decom¥ess
 
jIDMa°î


	)

309 
	#jöô_d_maö_c⁄åﬁÀr
 
jIDMaöC


	)

310 
	#jöô_d_c€f_c⁄åﬁÀr
 
jIDC€fC


	)

311 
	#jöô_d_po°_c⁄åﬁÀr
 
jIDPo°C


	)

312 
	#jöô_öput_c⁄åﬁÀr
 
jIInCér


	)

313 
	#jöô_m¨kî_ªadî
 
jIMRódî


	)

314 
	#jöô_huff_decodî
 
jIHDecodî


	)

315 
	#jöô_phuff_decodî
 
jIPHDecodî


	)

316 
	#jöô_övî£_d˘
 
jIIDCT


	)

317 
	#jöô_upßm∂î
 
jIUpßm∂î


	)

318 
	#jöô_cﬁ‹_dec⁄vîãr
 
jIDCﬁ‹


	)

319 
	#jöô_1∑ss_qu™tizî
 
jI1Qu™t


	)

320 
	#jöô_2∑ss_qu™tizî
 
jI2Qu™t


	)

321 
	#jöô_mîged_upßm∂î
 
jIMUpßm∂î


	)

322 
	#jöô_mem‹y_mgr
 
jIMemMgr


	)

323 
	#jdiv_round_up
 
jDivRound


	)

324 
	#jround_up
 
jRound


	)

325 
	#jc›y_ßm∂e_rows
 
jC›ySam∂es


	)

326 
	#jc›y_block_row
 
jC›yBlocks


	)

327 
	#jzîo_Ár
 
jZîoF¨


	)

328 
	#j≥g_zigzag_‹dî
 
jZIGTabÀ


	)

329 
	#j≥g_«tuøl_‹dî
 
jZAGTabÀ


	)

334 
	$EXTERN
(Ë
jöô_com¥ess_ma°î
 
	`JPP
((
j_com¥ess_±r
 
cöfo
));

335 
	$EXTERN
(Ë
jöô_c_ma°î_c⁄åﬁ
 
	`JPP
((
j_com¥ess_±r
 
cöfo
,

336 
boﬁón
 
å™scode_⁄ly
));

337 
	$EXTERN
(Ë
jöô_c_maö_c⁄åﬁÀr
 
	`JPP
((
j_com¥ess_±r
 
cöfo
,

338 
boﬁón
 
√ed_fuŒ_buf„r
));

339 
	$EXTERN
(Ë
jöô_c_¥ï_c⁄åﬁÀr
 
	`JPP
((
j_com¥ess_±r
 
cöfo
,

340 
boﬁón
 
√ed_fuŒ_buf„r
));

341 
	$EXTERN
(Ë
jöô_c_c€f_c⁄åﬁÀr
 
	`JPP
((
j_com¥ess_±r
 
cöfo
,

342 
boﬁón
 
√ed_fuŒ_buf„r
));

343 
	$EXTERN
(Ë
jöô_cﬁ‹_c⁄vîãr
 
	`JPP
((
j_com¥ess_±r
 
cöfo
));

344 
	$EXTERN
(Ë
jöô_downßm∂î
 
	`JPP
((
j_com¥ess_±r
 
cöfo
));

345 
	$EXTERN
(Ë
jöô_f‹w¨d_d˘
 
	`JPP
((
j_com¥ess_±r
 
cöfo
));

346 
	$EXTERN
(Ë
jöô_huff_ícodî
 
	`JPP
((
j_com¥ess_±r
 
cöfo
));

347 
	$EXTERN
(Ë
jöô_phuff_ícodî
 
	`JPP
((
j_com¥ess_±r
 
cöfo
));

348 
	$EXTERN
(Ë
jöô_m¨kî_wrôî
 
	`JPP
((
j_com¥ess_±r
 
cöfo
));

350 
	$EXTERN
(Ë
jöô_ma°î_decom¥ess
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

351 
	$EXTERN
(Ë
jöô_d_maö_c⁄åﬁÀr
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
,

352 
boﬁón
 
√ed_fuŒ_buf„r
));

353 
	$EXTERN
(Ë
jöô_d_c€f_c⁄åﬁÀr
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
,

354 
boﬁón
 
√ed_fuŒ_buf„r
));

355 
	$EXTERN
(Ë
jöô_d_po°_c⁄åﬁÀr
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
,

356 
boﬁón
 
√ed_fuŒ_buf„r
));

357 
	$EXTERN
(Ë
jöô_öput_c⁄åﬁÀr
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

358 
	$EXTERN
(Ë
jöô_m¨kî_ªadî
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

359 
	$EXTERN
(Ë
jöô_huff_decodî
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

360 
	$EXTERN
(Ë
jöô_phuff_decodî
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

361 
	$EXTERN
(Ë
jöô_övî£_d˘
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

362 
	$EXTERN
(Ë
jöô_upßm∂î
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

363 
	$EXTERN
(Ë
jöô_cﬁ‹_dec⁄vîãr
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

364 
	$EXTERN
(Ë
jöô_1∑ss_qu™tizî
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

365 
	$EXTERN
(Ë
jöô_2∑ss_qu™tizî
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

366 
	$EXTERN
(Ë
jöô_mîged_upßm∂î
 
	`JPP
((
j_decom¥ess_±r
 
cöfo
));

368 
	$EXTERN
(Ë
jöô_mem‹y_mgr
 
	`JPP
((
j_comm⁄_±r
 
cöfo
));

371 
	$EXTERN
(Ë
jdiv_round_up
 
	`JPP
((
a
, 
b
));

372 
	$EXTERN
(Ë
jround_up
 
	`JPP
((
a
, 
b
));

373 
	$EXTERN
(Ë
jc›y_ßm∂e_rows
 
	`JPP
((
JSAMPARRAY
 
öput_¨øy
, 
sour˚_row
,

374 
JSAMPARRAY
 
ouçut_¨øy
, 
de°_row
,

375 
num_rows
, 
JDIMENSION
 
num_cﬁs
));

376 
	$EXTERN
(Ë
jc›y_block_row
 
	`JPP
((
JBLOCKROW
 
öput_row
, JBLOCKROW 
ouçut_row
,

377 
JDIMENSION
 
num_blocks
));

378 
	$EXTERN
(Ë
jzîo_Ár
 
	`JPP
((
FAR
 * 
èrgë
, 
size_t
 
byã°ozîo
));

381 c⁄° 
j≥g_zigzag_‹dî
[];

383 c⁄° 
j≥g_«tuøl_‹dî
[];

387 #ifde‡
INCOMPLETE_TYPES_BROKEN


388 #i‚de‡
AM_MEMORY_MANAGER


389 
	sjvút_ßºay_c⁄åﬁ
 { 
dummy
; };

390 
	sjvút_b¨øy_c⁄åﬁ
 { 
dummy
; };

	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 \

102 || 
deföed
 
__LDBL_COMPAT
 \

103 || !
deföed
 
_LIBC
)

104 #ifde‡
__LDBL_COMPAT


106 #ifde‡
__USE_ISOC99


107 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

108 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

109 #ifde‡
__REDIRECT_NTH


110 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

111 
__∆dbl_√xâow¨df
)

112 
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

114 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

115 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

116 (
__x
, 
__y
),

117 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


124 #unde‡
__MATHDECL_1


125 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

126 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

127 
¨gs
, 
Æüs
)

	)

128 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

129 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	~<bôs/m©hˇŒs.h
>

146 #unde‡
_MdoubÀ_


147 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


148 #unde‡
_MdoubÀ_END_NAMESPACE


149 #unde‡
__MATH_PRECNAME


154 #unde‡
__MATHDECL_1


155 #unde‡
__MATHDECL


156 #unde‡
__MATHCALL


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


161 
signgam
;

166 #ifde‡
__USE_ISOC99


204 
FP_NAN
,

205 
	#FP_NAN
 
FP_NAN


	)

206 
FP_INFINITE
,

207 
	#FP_INFINITE
 
FP_INFINITE


	)

208 
FP_ZERO
,

209 
	#FP_ZERO
 
FP_ZERO


	)

210 
FP_SUBNORMAL
,

211 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

212 
FP_NORMAL


213 
	#FP_NORMAL
 
FP_NORMAL


	)

217 #ifde‡
__NO_LONG_DOUBLE_MATH


218 
	#Â˛assify
(
x
) \

219 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

221 
	#Â˛assify
(
x
) \

222 ( (
x
) ==  () \

223 ? 
	`__Â˛assifyf
 (
x
) \

224 :  (
x
) ==  () \

225 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

229 #ifde‡
__NO_LONG_DOUBLE_MATH


230 
	#signbô
(
x
) \

231 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

233 
	#signbô
(
x
) \

234 ( (
x
) ==  () \

235 ? 
	`__signbôf
 (
x
) \

236 :  (
x
) ==  () \

237 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
	#isföôe
(
x
) \

243 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

245 
	#isföôe
(
x
) \

246 ( (
x
) ==  () \

247 ? 
	`__föôef
 (
x
) \

248 :  (
x
) ==  () \

249 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

253 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

257 #ifde‡
__NO_LONG_DOUBLE_MATH


258 
	#i¢™
(
x
) \

259 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

261 
	#i¢™
(
x
) \

262 ( (
x
) ==  () \

263 ? 
	`__i¢™f
 (
x
) \

264 :  (
x
) ==  () \

265 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

269 #ifde‡
__NO_LONG_DOUBLE_MATH


270 
	#isöf
(
x
) \

271 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

273 
	#isöf
(
x
) \

274 ( (
x
) ==  () \

275 ? 
	`__isöff
 (
x
) \

276 :  (
x
) ==  () \

277 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

281 
	#MATH_ERRNO
 1

	)

282 
	#MATH_ERREXCEPT
 2

	)

287 #i‚de‡
__FAST_MATH__


288 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

293 #ifdef 
__USE_MISC


297 
_IEEE_
 = -1,

298 
_SVID_
,

299 
_XOPEN_
,

300 
_POSIX_
,

301 
_ISOC_


302 } 
	t_LIB_VERSION_TYPE
;

307 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

311 #ifde‡
__USE_SVID


317 #ifde‡
__˝lu•lus


318 
__ex˚±i⁄


320 
ex˚±i⁄


323 
ty≥
;

324 *
«me
;

325 
¨g1
;

326 
¨g2
;

327 
ªtvÆ
;

328 
	}
};

330 #ifde‡
__˝lu•lus


331 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

333 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

336 
	#X_TLOSS
 1.41484755040568800000e+16

	)

339 
	#DOMAIN
 1

	)

340 
	#SING
 2

	)

341 
	#OVERFLOW
 3

	)

342 
	#UNDERFLOW
 4

	)

343 
	#TLOSS
 5

	)

344 
	#PLOSS
 6

	)

347 
	#HUGE
 3.40282347e+38F

	)

351 #ifde‡
__USE_XOPEN


353 
	#MAXFLOAT
 3.40282347e+38F

	)

360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


361 
	#M_E
 2.7182818284590452354

	)

362 
	#M_LOG2E
 1.4426950408889634074

	)

363 
	#M_LOG10E
 0.43429448190325182765

	)

364 
	#M_LN2
 0.69314718055994530942

	)

365 
	#M_LN10
 2.30258509299404568402

	)

366 
	#M_PI
 3.14159265358979323846

	)

367 
	#M_PI_2
 1.57079632679489661923

	)

368 
	#M_PI_4
 0.78539816339744830962

	)

369 
	#M_1_PI
 0.31830988618379067154

	)

370 
	#M_2_PI
 0.63661977236758134308

	)

371 
	#M_2_SQRTPI
 1.12837916709551257390

	)

372 
	#M_SQRT2
 1.41421356237309504880

	)

373 
	#M_SQRT1_2
 0.70710678118654752440

	)

379 #ifde‡
__USE_GNU


380 
	#M_El
 2.7182818284590452353602874713526625L

	)

381 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

382 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

383 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

384 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

385 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

386 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

387 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

388 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

389 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

390 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

391 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

392 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

399 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


400 
	#__NO_MATH_INLINES
 1

	)

403 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

410 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

411 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

412 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

413 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

414 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

415 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

419 #ifde‡
__USE_EXTERN_INLINES


420 
	~<bôs/m©hölöe.h
>

423 #ifde‡
__USE_ISOC99


427 #i‚de‡
isgª©î


428 
	#isgª©î
(
x
, 
y
) \

429 (
__exãnsi⁄__
 \

430 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

431 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

435 #i‚de‡
isgª©îequÆ


436 
	#isgª©îequÆ
(
x
, 
y
) \

437 (
__exãnsi⁄__
 \

438 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

439 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

443 #i‚de‡
i¶ess


444 
	#i¶ess
(
x
, 
y
) \

445 (
__exãnsi⁄__
 \

446 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

447 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

451 #i‚de‡
i¶es£quÆ


452 
	#i¶es£quÆ
(
x
, 
y
) \

453 (
__exãnsi⁄__
 \

454 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

455 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

459 #i‚de‡
i¶essgª©î


460 
	#i¶essgª©î
(
x
, 
y
) \

461 (
__exãnsi⁄__
 \

462 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

463 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

467 #i‚de‡
isun‹dîed


468 
	#isun‹dîed
(
u
, 
v
) \

469 (
__exãnsi⁄__
 \

470 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

471 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

476 
	g__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

70 
	#IP_PMTUDISC_DONT
 0

	)

71 
	#IP_PMTUDISC_WANT
 1

	)

72 
	#IP_PMTUDISC_DO
 2

	)

73 
	#IP_PMTUDISC_PROBE
 3

	)

76 
	#SOL_IP
 0

	)

78 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

79 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

80 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


86 
	sù_›ts


88 
ö_addr
 
	mù_d°
;

89 
	mù_›ts
[40];

93 
	sù_mªqn


95 
ö_addr
 
	mimr_mu…üddr
;

96 
ö_addr
 
	mimr_addªss
;

97 
	mimr_ifödex
;

101 
	sö_pktöfo


103 
	mùi_ifödex
;

104 
ö_addr
 
	mùi_•ec_d°
;

105 
ö_addr
 
	mùi_addr
;

112 
	#IPV6_ADDRFORM
 1

	)

113 
	#IPV6_2292PKTINFO
 2

	)

114 
	#IPV6_2292HOPOPTS
 3

	)

115 
	#IPV6_2292DSTOPTS
 4

	)

116 
	#IPV6_2292RTHDR
 5

	)

117 
	#IPV6_2292PKTOPTIONS
 6

	)

118 
	#IPV6_CHECKSUM
 7

	)

119 
	#IPV6_2292HOPLIMIT
 8

	)

121 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

123 
	#IPV6_NEXTHOP
 9

	)

124 
	#IPV6_AUTHHDR
 10

	)

125 
	#IPV6_UNICAST_HOPS
 16

	)

126 
	#IPV6_MULTICAST_IF
 17

	)

127 
	#IPV6_MULTICAST_HOPS
 18

	)

128 
	#IPV6_MULTICAST_LOOP
 19

	)

129 
	#IPV6_JOIN_GROUP
 20

	)

130 
	#IPV6_LEAVE_GROUP
 21

	)

131 
	#IPV6_ROUTER_ALERT
 22

	)

132 
	#IPV6_MTU_DISCOVER
 23

	)

133 
	#IPV6_MTU
 24

	)

134 
	#IPV6_RECVERR
 25

	)

135 
	#IPV6_V6ONLY
 26

	)

136 
	#IPV6_JOIN_ANYCAST
 27

	)

137 
	#IPV6_LEAVE_ANYCAST
 28

	)

138 
	#IPV6_IPSEC_POLICY
 34

	)

139 
	#IPV6_XFRM_POLICY
 35

	)

141 
	#IPV6_RECVPKTINFO
 49

	)

142 
	#IPV6_PKTINFO
 50

	)

143 
	#IPV6_RECVHOPLIMIT
 51

	)

144 
	#IPV6_HOPLIMIT
 52

	)

145 
	#IPV6_RECVHOPOPTS
 53

	)

146 
	#IPV6_HOPOPTS
 54

	)

147 
	#IPV6_RTHDRDSTOPTS
 55

	)

148 
	#IPV6_RECVRTHDR
 56

	)

149 
	#IPV6_RTHDR
 57

	)

150 
	#IPV6_RECVDSTOPTS
 58

	)

151 
	#IPV6_DSTOPTS
 59

	)

153 
	#IPV6_RECVTCLASS
 66

	)

154 
	#IPV6_TCLASS
 67

	)

157 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

158 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

159 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

160 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

163 
	#IPV6_PMTUDISC_DONT
 0

	)

164 
	#IPV6_PMTUDISC_WANT
 1

	)

165 
	#IPV6_PMTUDISC_DO
 2

	)

166 
	#IPV6_PMTUDISC_PROBE
 3

	)

169 
	#SOL_IPV6
 41

	)

170 
	#SOL_ICMPV6
 58

	)

173 
	#IPV6_RTHDR_LOOSE
 0

	)

174 
	#IPV6_RTHDR_STRICT
 1

	)

176 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

236 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

239 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

245 
	smsghdr


247 *
	mmsg_«me
;

248 
sockÀn_t
 
	mmsg_«mñí
;

250 
iovec
 *
	mmsg_iov
;

251 
size_t
 
	mmsg_iovÀn
;

253 *
	mmsg_c⁄åﬁ
;

254 
size_t
 
	mmsg_c⁄åﬁÀn
;

259 
	mmsg_Êags
;

263 
	scmsghdr


265 
size_t
 
	mcmsg_Àn
;

270 
	mcmsg_Àvñ
;

271 
	mcmsg_ty≥
;

272 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

273 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

278 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

279 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

281 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

283 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

284 
	#CMSG_FIRSTHDR
(
mhdr
) \

285 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

286 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

287 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

288 & (
size_t
Ë~( (size_tË- 1))

	)

289 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

290 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

291 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

293 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

294 
cmsghdr
 *
__cmsg
Ë
__THROW
;

295 #ifde‡
__USE_EXTERN_INLINES


296 #i‚de‡
_EXTERN_INLINE


297 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

299 
_EXTERN_INLINE
 
cmsghdr
 *

300 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

302 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

306 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

307 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

308 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


309 + 
__mhdr
->
msg_c⁄åﬁÀn
)

310 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

311 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

314  
__cmsg
;

315 
	}
}

322 
	mSCM_RIGHTS
 = 0x01

323 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

324 #ifde‡
__USE_GNU


325 , 
	mSCM_CREDENTIALS
 = 0x02

326 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

330 #ifde‡
__USE_GNU


332 
	su¸ed


334 
pid_t
 
	mpid
;

335 
uid_t
 
	muid
;

336 
gid_t
 
	mgid
;

341 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


342 #i‚de‡
FIOGETOWN


343 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

345 #i‚de‡
FIOSETOWN


346 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

348 #i‚de‡
SIOCATMARK


349 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

351 #i‚de‡
SIOCGPGRP


352 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

354 #i‚de‡
SIOCGSTAMP


355 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

357 #i‚de‡
SIOCGSTAMPNS


358 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

360 #i‚de‡
SIOCSPGRP


361 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

366 
	~<asm/sockë.h
>

368 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


369 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


370 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


371 #unde‡
FIOGETOWN


373 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


374 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


375 #unde‡
FIOSETOWN


377 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


378 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


379 #unde‡
SIOCATMARK


381 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


382 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


383 #unde‡
SIOCGPGRP


385 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


386 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


387 #unde‡
SIOCGSTAMP


389 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


390 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


391 #unde‡
SIOCGSTAMPNS


393 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


394 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


395 #unde‡
SIOCSPGRP


400 
	slögî


402 
	ml_⁄off
;

403 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
f˘

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
f˘

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
f˘

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
¨gs

75 
	#__PMT
(
¨gs
Ë
	)
¨gs

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
˙ame

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
¥Ÿo

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
¥Ÿo

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@
1
.
1
/usr/include
138
3407
20141202xml/mxml.h
20141202xml/xmltmp.c
PC_CENTRIST/CtImage.c
PC_CENTRIST/CtImage.h
PC_CENTRIST/DetectFrame.c
PC_CENTRIST/DetectFrame.h
PC_CENTRIST/FrameDiff.c
PC_CENTRIST/param.h
PC_CENTRIST/svm.c
PC_CENTRIST/svm.h
client_emulator.c
datafifo.c
datafifo.h
jconfig.h
jmorecfg.h
jpeglib.h
mxml.h
recbc_srv.c
recbc_srv.h
rt_generic.h
server_emulator.c
streaming_srv.h
tlv320aic3254.h
xmlparser.c
xmlparser.h
xmltmp.c
/usr/include/arpa/inet.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/jerror.h
/usr/include/jpegint.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
